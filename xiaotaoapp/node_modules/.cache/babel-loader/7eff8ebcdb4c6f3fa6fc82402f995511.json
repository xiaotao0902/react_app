{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextSelect = require('../../next-select/lib/index.js');\n\nvar _nextSelect2 = _interopRequireDefault(_nextSelect);\n\nvar _nextCascader = require('../../next-cascader/lib/index.js');\n\nvar _nextCascader2 = _interopRequireDefault(_nextCascader);\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nvar _nextDom = require('../../next-dom/lib/index.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar isMacChrome = function () {\n  var agent = window.navigator.userAgent.toLowerCase();\n  return agent.indexOf('macintosh') > -1 && agent.indexOf('chrome') > -1;\n}();\n/**\n * CascaderSelect\n */\n\n\nvar CascaderSelect = (_temp = _class = function (_Component) {\n  _inherits(CascaderSelect, _Component);\n\n  function CascaderSelect(props, context) {\n    _classCallCheck(this, CascaderSelect);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this.state = {\n      value: 'value' in props ? props.value : props.defaultValue,\n      visible: props.defaultVisible\n    };\n    ['handleVisibleChange', 'handleChange', 'handleRemove', 'afterOpen', 'getCascader'].forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    return _this;\n  }\n\n  CascaderSelect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('value' in nextProps) {\n      this.setState({\n        value: nextProps.value\n      });\n    }\n  };\n\n  CascaderSelect.prototype.getPrefix = function getPrefix() {\n    return this.context.prefix || this.props.prefix;\n  };\n\n  CascaderSelect.prototype.normalizeValue = function normalizeValue(value) {\n    if (value) {\n      if (Array.isArray(value)) {\n        return value;\n      }\n\n      return [value];\n    }\n\n    return [];\n  };\n\n  CascaderSelect.prototype.updateCache = function updateCache(dataSource) {\n    var _this2 = this;\n\n    this._v2n = {};\n    this._p2n = {};\n\n    var loop = function loop(data) {\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      return data.forEach(function (item, index) {\n        var value = item.value,\n            children = item.children;\n        var pos = prefix + '-' + index;\n        _this2._v2n[value] = _this2._p2n[pos] = _extends({}, item, {\n          pos: pos\n        });\n\n        if (children && children.length) {\n          loop(children, pos);\n        }\n      });\n    };\n\n    loop(dataSource);\n  };\n\n  CascaderSelect.prototype.flatValue = function flatValue(value) {\n    var _this3 = this;\n\n    var getDepth = function getDepth(v) {\n      return _this3.getPos(v).split('-').length;\n    };\n\n    var newValue = value.slice(0).sort(function (prev, next) {\n      return getDepth(prev) - getDepth(next);\n    });\n\n    for (var i = 0; i < newValue.length; i++) {\n      for (var j = 0; j < newValue.length; j++) {\n        if (i !== j && this.isDescendantOrSelf(this.getPos(newValue[i]), this.getPos(newValue[j]))) {\n          newValue.splice(j, 1);\n          j--;\n        }\n      }\n    }\n\n    return newValue;\n  };\n\n  CascaderSelect.prototype.isDescendantOrSelf = function isDescendantOrSelf(currentPos, targetPos) {\n    if (!currentPos || !targetPos) {\n      return false;\n    }\n\n    var currentNums = currentPos.split('-');\n    var targetNums = targetPos.split('-');\n    return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {\n      return num === targetNums[index];\n    });\n  };\n\n  CascaderSelect.prototype.getValue = function getValue(pos) {\n    return this._p2n[pos] ? this._p2n[pos].value : null;\n  };\n\n  CascaderSelect.prototype.getPos = function getPos(value) {\n    return this._v2n[value] ? this._v2n[value].pos : null;\n  };\n\n  CascaderSelect.prototype.getData = function getData(value) {\n    var _this4 = this;\n\n    return value.map(function (v) {\n      return _this4._v2n[v];\n    });\n  };\n\n  CascaderSelect.prototype.getSignleData = function getSignleData(value) {\n    var _this5 = this;\n\n    if (!value.length) {\n      return null;\n    }\n\n    var data = this._v2n[value];\n\n    if (!data) {\n      return null;\n    }\n\n    var nums = data.pos.split('-');\n    var label = nums.slice(1).reduce(function (ret, num, index) {\n      var p = nums.slice(0, index + 2).join('-');\n      ret.push(_this5._p2n[p].label);\n      return ret;\n    }, []);\n    return _extends({}, data, {\n      label: this.props.displayRender(label, data)\n    });\n  };\n\n  CascaderSelect.prototype.getMultipleData = function getMultipleData(value) {\n    var _this6 = this;\n\n    var _props = this.props,\n        checkStrictly = _props.checkStrictly,\n        canOnlyCheckLeaf = _props.canOnlyCheckLeaf,\n        dataSource = _props.dataSource;\n    var newValue = void 0;\n\n    if (checkStrictly || canOnlyCheckLeaf) {\n      newValue = value;\n    } else {\n      var filterValue = value.filter(function (v) {\n        return typeof _this6._v2n[v] !== 'undefined';\n      });\n      newValue = this.flatValue(filterValue);\n\n      var childChecked = function childChecked(child) {\n        return newValue.indexOf(child.value) > -1;\n      };\n\n      var removeValue = function removeValue(child) {\n        return newValue.splice(newValue.indexOf(child.value), 1);\n      };\n\n      var addParentValue = function addParentValue(i, parent) {\n        return newValue.splice(i, 0, parent.value);\n      };\n\n      for (var i = 0; i < newValue.length; i++) {\n        var pos = this.getPos(newValue[i]);\n        var nums = pos.split('-');\n\n        if (nums.length === 2) {\n          break;\n        }\n\n        for (var j = nums.length - 2; j > 0; j--) {\n          var parent = nums.slice(1, j + 1).reduce(function (ret, num) {\n            return ret.children[num];\n          }, {\n            children: dataSource\n          });\n          var parentChecked = parent.children.every(childChecked);\n\n          if (parentChecked) {\n            parent.children.forEach(removeValue);\n            addParentValue(i, parent);\n          } else {\n            break;\n          }\n        }\n      }\n    }\n\n    return this.getData(newValue);\n  };\n\n  CascaderSelect.prototype.getIndeterminate = function getIndeterminate(value) {\n    var _this7 = this;\n\n    var indeterminate = [];\n    var positions = value.map(this.getPos.bind(this));\n    positions.forEach(function (pos) {\n      var nums = pos.split('-');\n\n      for (var i = nums.length; i > 2; i--) {\n        var parentPos = nums.slice(0, i - 1).join('-');\n\n        var parentValue = _this7.getValue(parentPos);\n\n        if (indeterminate.indexOf(parentValue) === -1) {\n          indeterminate.push(parentValue);\n        }\n      }\n    });\n    return indeterminate;\n  };\n\n  CascaderSelect.prototype.completeValue = function completeValue(value) {\n    var newValue = [];\n    var flatValue = this.flatValue(value).reverse();\n\n    if (flatValue.length) {\n      var ps = Object.keys(this._p2n);\n\n      for (var i = 0; i < ps.length; i++) {\n        for (var j = 0; j < flatValue.length; j++) {\n          var v = flatValue[j];\n\n          if (this.isDescendantOrSelf(this.getPos(v), ps[i])) {\n            newValue.push(this.getValue(ps[i]));\n            ps.splice(i, 1);\n            i--;\n            break;\n          }\n        }\n      }\n    }\n\n    return newValue;\n  };\n\n  CascaderSelect.prototype.isLeaf = function isLeaf(data) {\n    return !(data.children && data.children.length || !!this.props.loadData && !data.isLeaf);\n  };\n\n  CascaderSelect.prototype.handleVisibleChange = function handleVisibleChange(visible) {\n    this.setState({\n      visible: visible\n    });\n  };\n\n  CascaderSelect.prototype.handleChange = function handleChange(value, data, extra) {\n    var _props2 = this.props,\n        multiple = _props2.multiple,\n        changeOnSelect = _props2.changeOnSelect,\n        onChange = _props2.onChange;\n    var st = {};\n\n    if (!multiple && (!changeOnSelect || this.isLeaf(data))) {\n      st.visible = !this.state.visible;\n    }\n\n    if (!('value' in this.props)) {\n      st.value = value;\n    }\n\n    if (Object.keys(st).length) {\n      this.setState(st);\n    }\n\n    if (onChange) {\n      onChange(value, data, extra);\n    }\n  };\n\n  CascaderSelect.prototype.handleRemove = function handleRemove(value) {\n    value = this.normalizeValue(value);\n\n    if ('onChange' in this.props) {\n      var _props3 = this.props,\n          multiple = _props3.multiple,\n          checkStrictly = _props3.checkStrictly,\n          onChange = _props3.onChange;\n\n      if (multiple) {\n        var currentValue = void 0;\n\n        for (var i = 0; i < this.state.value.length; i++) {\n          if (value.indexOf(this.state.value[i]) === -1) {\n            currentValue = this.state.value[i];\n            break;\n          }\n        }\n\n        var currentData = this._v2n[currentValue];\n        var data = this.getData(value);\n        var checked = false;\n\n        if (checkStrictly) {\n          this.props.onChange(value, data, {\n            checked: checked,\n            currentData: currentData,\n            checkedData: data\n          });\n        } else {\n          var checkedValue = this.completeValue(value);\n          var checkedData = this.getData(checkedValue);\n          var indeterminateValue = this.getIndeterminate(value);\n          var indeterminateData = this.getData(indeterminateValue);\n          this.props.onChange(value, data, {\n            checked: checked,\n            currentData: currentData,\n            checkedData: checkedData,\n            indeterminateData: indeterminateData\n          });\n        }\n      } else {\n        onChange(null, null);\n      }\n    }\n\n    if (!('value' in this.props)) {\n      this.setState({\n        value: value\n      });\n    }\n  };\n\n  CascaderSelect.prototype.afterOpen = function afterOpen() {\n    // mac + chrome + 高分辨率屏幕（mac pro）+ 出现滚动条 + 有动画播放\n    // 下拉弹层在第一次展开时，会发生展示错位现象\n    // http://gitlab.alibaba-inc.com/next/cascader-select/issues/17\n    // 所以 .next-cascader-menu 默认设置 overflow: hidden;\n    // 打开弹层后，删除该样式\n    if (isMacChrome && this.cascader) {\n      var cascaderNode = (0, _reactDom.findDOMNode)(this.cascader);\n\n      _nextDom.classList.removeClass(cascaderNode, 'menu-overflow-hidden');\n    }\n\n    this.props.afterOpen();\n  };\n\n  CascaderSelect.prototype.getCascader = function getCascader(ref) {\n    this.cascader = ref;\n  };\n\n  CascaderSelect.prototype.renderOverlay = function renderOverlay() {\n    var prefix = this.getPrefix();\n    var cascaderSelectPrefix = prefix + 'cascader-select-';\n    var _props4 = this.props,\n        dataSource = _props4.dataSource,\n        multiple = _props4.multiple,\n        defaultExpandedValue = _props4.defaultExpandedValue,\n        expandTrigger = _props4.expandTrigger,\n        checkStrictly = _props4.checkStrictly,\n        labelWidth = _props4.labelWidth,\n        showItemCount = _props4.showItemCount,\n        changeOnSelect = _props4.changeOnSelect,\n        canOnlyCheckLeaf = _props4.canOnlyCheckLeaf,\n        loadData = _props4.loadData;\n    var value = this.state.value;\n    return _react2['default'].createElement('div', {\n      className: cascaderSelectPrefix + 'dropdown'\n    }, _react2['default'].createElement(_nextCascader2['default'], {\n      ref: this.getCascader,\n      value: value,\n      className: isMacChrome ? 'menu-overflow-hidden' : null,\n      dataSource: dataSource,\n      onChange: this.handleChange,\n      multiple: multiple,\n      canOnlySelectLeaf: !changeOnSelect,\n      canOnlyCheckLeaf: canOnlyCheckLeaf,\n      defaultExpandedValue: defaultExpandedValue,\n      expandTrigger: expandTrigger,\n      checkStrictly: checkStrictly,\n      labelWidth: labelWidth,\n      showItemCount: showItemCount,\n      loadData: loadData,\n      setCascaderInnerWidth: false\n    }));\n  };\n\n  CascaderSelect.prototype.render = function render() {\n    var prefix = this.getPrefix();\n    var _props5 = this.props,\n        size = _props5.size,\n        shape = _props5.shape,\n        placeholder = _props5.placeholder,\n        dataSource = _props5.dataSource,\n        disabled = _props5.disabled,\n        hasArrow = _props5.hasArrow,\n        hasClear = _props5.hasClear,\n        popupClassName = _props5.popupClassName,\n        multiple = _props5.multiple,\n        className = _props5.className,\n        style = _props5.style,\n        container = _props5.container;\n    var _state = this.state,\n        value = _state.value,\n        visible = _state.visible;\n    var others = (0, _nextUtil.pickOthers)(CascaderSelect, this.props);\n    var overlay = this.renderOverlay();\n    this.updateCache(dataSource);\n    var normalizedValue = this.normalizeValue(value);\n    return _react2['default'].createElement(_nextSelect2['default'], _extends({\n      prefix: prefix,\n      className: className,\n      style: style,\n      size: size,\n      shape: shape,\n      placeholder: placeholder,\n      disabled: disabled,\n      hasArrow: hasArrow,\n      hasClear: hasClear,\n      popupClassName: popupClassName,\n      multiple: multiple,\n      value: multiple ? this.getMultipleData(normalizedValue) : this.getSignleData(normalizedValue),\n      onChange: this.handleRemove,\n      visible: visible,\n      onVisibleChange: this.handleVisibleChange,\n      overlay: overlay,\n      container: container,\n      afterOpen: this.afterOpen\n    }, others));\n  };\n\n  return CascaderSelect;\n}(_react.Component), _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _class.propTypes = {\n  /**\n   * 样式类名的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 自定义类名\n   */\n  className: _propTypes2['default'].string,\n\n  /**\n   * 自定义内联样式\n   */\n  style: _propTypes2['default'].object,\n\n  /**\n   * 选择框大小\n   */\n  size: _propTypes2['default'].oneOf(['small', 'medium', 'large']),\n\n  /**\n   * 选择框形状\n   */\n  shape: _propTypes2['default'].oneOf(['normal', 'arrow-only']),\n\n  /**\n   * 选择框占位符\n   */\n  placeholder: _propTypes2['default'].string,\n\n  /**\n   * 是否禁用\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * 是否显示右侧的箭头\n   */\n  hasArrow: _propTypes2['default'].bool,\n\n  /**\n   * 是否显示清空按钮，该按钮可以清空当前选中的值，该属性仅在单选模式下有效\n   */\n  hasClear: _propTypes2['default'].bool,\n\n  /**\n   * 数据源，结构可参考下方说明\n   */\n  dataSource: _propTypes2['default'].arrayOf(_propTypes2['default'].object),\n\n  /**\n   * （非受控）默认值\n   */\n  defaultValue: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].arrayOf(_propTypes2['default'].string)]),\n\n  /**\n   * （受控）当前值\n   */\n  value: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].arrayOf(_propTypes2['default'].string)]),\n\n  /**\n   * 选中值改变时触发的回调函数\n   * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n   * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点\n   * @param {Object} extra 额外参数\n   * @param {Array} extra.selectedPath 单选时选中的数据的路径\n   * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中\n   * @param {Object} extra.currentData 多选时当前操作的数据\n   * @param {Array} extra.checkedData 多选时所有被选中的数据\n   * @param {Array} extra.indeterminateData 多选时半选的数据\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 初始下拉框是否显示\n   */\n  defaultVisible: _propTypes2['default'].bool,\n\n  /**\n   * 默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置\n   */\n  defaultExpandedValue: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * 展开触发的方式\n   */\n  expandTrigger: _propTypes2['default'].oneOf(['click', 'hover']),\n\n  /**\n   * 是否多选\n   */\n  multiple: _propTypes2['default'].bool,\n\n  /**\n   * 是否选中即发生改变, 该属性仅在单选模式下有效\n   */\n  changeOnSelect: _propTypes2['default'].bool,\n\n  /**\n   * 是否只能勾选叶子项的checkbox，该属性仅在多选模式下有效\n   */\n  canOnlyCheckLeaf: _propTypes2['default'].bool,\n\n  /**\n   * 父子节点是否选中不关联\n   */\n  checkStrictly: _propTypes2['default'].bool,\n\n  /**\n   * 文字区域宽度，当文字超过宽度时，结尾会以省略号显示，默认值为文字实际宽度\n   */\n  labelWidth: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n\n  /**\n   * 每一列展示的个数\n   */\n  showItemCount: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n\n  /**\n   * 选择框单选时展示结果的函数\n   * @param {Array} label 选中路径的文本数组\n   * @return {ReactNode} 渲染在选择框中的内容\n   */\n  displayRender: _propTypes2['default'].func,\n\n  /**\n   * 下拉框样式自定义类名\n   */\n  popupClassName: _propTypes2['default'].string,\n\n  /**\n   * 下拉框挂载的容器节点\n   */\n  container: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].func]),\n\n  /**\n   * 异步加载数据函数\n   * @param {Object} data 当前点击异步加载的数据\n   */\n  loadData: _propTypes2['default'].func,\n  afterOpen: _propTypes2['default'].func\n}, _class.defaultProps = {\n  prefix: 'next-',\n  size: 'medium',\n  shape: 'normal',\n  disabled: false,\n  hasArrow: true,\n  hasClear: false,\n  dataSource: [],\n  defaultValue: null,\n  defaultVisible: false,\n  expandTrigger: 'click',\n  multiple: false,\n  changeOnSelect: false,\n  canOnlyCheckLeaf: false,\n  checkStrictly: false,\n  showItemCount: 6,\n  displayRender: function displayRender(label) {\n    return label.join(' / ');\n  },\n  afterOpen: function afterOpen() {}\n}, _temp);\nCascaderSelect.displayName = 'CascaderSelect';\nexports['default'] = CascaderSelect;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}