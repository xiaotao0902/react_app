{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nvar _nextDom = require('../../next-dom/lib/index.js');\n\nvar _menu = require('./menu.js');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n/**\n * Cascader\n */\n\n\nvar Cascader = (_temp = _class = function (_Component) {\n  _inherits(Cascader, _Component);\n\n  function Cascader(props, context) {\n    _classCallCheck(this, Cascader);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    var defaultValue = props.defaultValue,\n        value = props.value,\n        defaultExpandedValue = props.defaultExpandedValue,\n        expandedValue = props.expandedValue,\n        dataSource = props.dataSource,\n        multiple = props.multiple,\n        checkStrictly = props.checkStrictly,\n        canOnlyCheckLeaf = props.canOnlyCheckLeaf,\n        loadData = props.loadData;\n\n    _this.updateCache(dataSource);\n\n    var normalizedValue = _this.normalizeValue(typeof value === 'undefined' ? defaultValue : value);\n\n    if (!loadData) {\n      normalizedValue = normalizedValue.filter(function (v) {\n        return _this._v2n[v];\n      });\n    }\n\n    var realExpandedValue = typeof expandedValue === 'undefined' ? typeof defaultExpandedValue === 'undefined' ? _this.getExpandedValue(normalizedValue[0]) : _this.normalizeValue(defaultExpandedValue) : _this.normalizeValue(expandedValue);\n    var st = {\n      value: normalizedValue,\n      expandedValue: realExpandedValue\n    };\n\n    if (multiple && !checkStrictly && !canOnlyCheckLeaf) {\n      st.value = _this.completeValue(props.dataSource, st.value);\n    }\n\n    _this.state = st;\n    _this.lastExpandedValue = [].concat(_toConsumableArray(_this.state.expandedValue));\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.getCascaderNode = _this.getCascaderNode.bind(_this);\n    return _this;\n  }\n\n  Cascader.prototype.componentDidMount = function componentDidMount() {\n    this.setCascaderInnerWidth();\n  };\n\n  Cascader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this2 = this;\n\n    this.updateCache(nextProps.dataSource);\n    var state = {};\n\n    if ('value' in nextProps) {\n      state.value = this.normalizeValue(nextProps.value);\n\n      if (!nextProps.loadData) {\n        state.value = state.value.filter(function (v) {\n          return _this2._v2n[v];\n        });\n      }\n\n      var multiple = nextProps.multiple,\n          checkStrictly = nextProps.checkStrictly,\n          canOnlyCheckLeaf = nextProps.canOnlyCheckLeaf;\n\n      if (multiple && !checkStrictly && !canOnlyCheckLeaf) {\n        state.value = this.completeValue(nextProps.dataSource, state.value);\n      }\n\n      if (!this.state.expandedValue.length && !('expandedValue' in nextProps)) {\n        state.expandedValue = this.getExpandedValue(state.value[0]);\n      }\n    }\n\n    if ('expandedValue' in nextProps) {\n      state.expandedValue = this.normalizeValue(nextProps.expandedValue);\n    }\n\n    if (Object.keys(state).length) {\n      this.setState(state);\n    }\n  };\n\n  Cascader.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setCascaderInnerWidth();\n  };\n\n  Cascader.prototype.getCascaderNode = function getCascaderNode(ref) {\n    this.cascader = ref;\n\n    if (this.cascader) {\n      this.cascaderInner = this.cascader.querySelector('.' + this.props.prefix + 'cascader-inner');\n    }\n  };\n\n  Cascader.prototype.setCascaderInnerWidth = function setCascaderInnerWidth() {\n    if (!this.props.setCascaderInnerWidth) {\n      return;\n    }\n\n    var menuWrappers = [].concat(_toConsumableArray(this.cascaderInner.querySelectorAll('.' + this.props.prefix + 'cascader-menu-wrapper')));\n\n    if (menuWrappers.length === 0) {\n      return;\n    }\n\n    _nextDom.style.set(this.cascaderInner, 'width', null);\n\n    var cascaderClientWidth = this.cascader.clientWidth;\n\n    var cascaderInnerWidth = _nextDom.style.get(this.cascaderInner, 'width');\n\n    var allMenusWidth = Math.ceil(menuWrappers.reduce(function (ret, menuWrapper) {\n      return ret + _nextDom.style.get(menuWrapper, 'width');\n    }, 0));\n    var hasRightBorderClass = 'has-right-border';\n\n    var hasRightBorder = _nextDom.classList.hasClass(this.cascaderInner, hasRightBorderClass);\n\n    if (cascaderClientWidth > allMenusWidth) {\n      var borderWidth = _nextDom.style.get(this.cascader, 'borderRightWidth');\n\n      if (cascaderInnerWidth !== allMenusWidth + borderWidth) {\n        _nextDom.style.set(this.cascaderInner, 'width', allMenusWidth + borderWidth);\n      }\n\n      if (!hasRightBorder) {\n        _nextDom.classList.addClass(this.cascaderInner, hasRightBorderClass);\n      }\n    } else {\n      if (cascaderInnerWidth !== allMenusWidth) {\n        _nextDom.style.set(this.cascaderInner, 'width', allMenusWidth);\n      }\n\n      if (hasRightBorder) {\n        _nextDom.classList.removeClass(this.cascaderInner, hasRightBorderClass);\n      }\n    }\n  };\n\n  Cascader.prototype.updateCache = function updateCache(dataSource) {\n    var _this3 = this;\n\n    this._v2n = {};\n    this._p2n = {};\n\n    var loop = function loop(data) {\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0';\n      return data.forEach(function (item, index) {\n        var value = item.value,\n            children = item.children;\n        var pos = prefix + '-' + index;\n        _this3._v2n[value] = _this3._p2n[pos] = _extends({}, item, {\n          pos: pos\n        });\n\n        if (children && children.length) {\n          loop(children, pos);\n        }\n      });\n    };\n\n    loop(dataSource);\n  };\n\n  Cascader.prototype.normalizeValue = function normalizeValue(value) {\n    if (value) {\n      if (Array.isArray(value)) {\n        return value;\n      }\n\n      return [value];\n    }\n\n    return [];\n  };\n\n  Cascader.prototype.getExpandedValue = function getExpandedValue(v) {\n    var _this4 = this;\n\n    if (!v || !this._v2n[v]) {\n      return [];\n    }\n\n    var pos = this._v2n[v].pos;\n\n    if (pos.split('-').length === 2) {\n      return [];\n    }\n\n    var expandedMap = {};\n    Object.keys(this._p2n).forEach(function (p) {\n      if (_this4.isDescendantOrSelf(p, pos) && p !== pos) {\n        expandedMap[_this4._p2n[p].value] = p;\n      }\n    });\n    return Object.keys(expandedMap).sort(function (prev, next) {\n      return expandedMap[prev].split('-').length - expandedMap[next].split('-').length;\n    });\n  };\n\n  Cascader.prototype.completeValue = function completeValue(dataSource, value) {\n    var _this5 = this;\n\n    var filterValue = value.filter(function (v) {\n      return typeof _this5._v2n[v] !== 'undefined';\n    });\n    var flatValue = this.flatValue(filterValue);\n\n    var childChecked = function childChecked(child) {\n      return flatValue.indexOf(child.value) > -1;\n    };\n\n    var removeValue = function removeValue(child) {\n      return flatValue.splice(flatValue.indexOf(child.value), 1);\n    };\n\n    var addParentValue = function addParentValue(i, parent) {\n      return flatValue.splice(i, 0, parent.value);\n    };\n\n    for (var i = 0; i < flatValue.length; i++) {\n      var pos = this.getPos(flatValue[i]);\n      var nums = pos.split('-');\n\n      if (nums.length === 2) {\n        break;\n      }\n\n      for (var j = nums.length - 2; j > 0; j--) {\n        var parent = nums.slice(1, j + 1).reduce(function (ret, num) {\n          return ret.children[num];\n        }, {\n          children: dataSource\n        });\n        var parentChecked = parent.children.every(childChecked);\n\n        if (parentChecked) {\n          parent.children.forEach(removeValue);\n          addParentValue(i, parent);\n        } else {\n          break;\n        }\n      }\n    }\n\n    var newValue = [];\n    flatValue = flatValue.reverse();\n    var ps = Object.keys(this._p2n);\n\n    if (flatValue.length) {\n      for (var _i = 0; _i < ps.length; _i++) {\n        for (var _j = 0; _j < flatValue.length; _j++) {\n          var v = flatValue[_j];\n\n          if (this.isDescendantOrSelf(this.getPos(v), ps[_i])) {\n            newValue.push(this.getValue(ps[_i]));\n            ps.splice(_i, 1);\n            _i--;\n            break;\n          }\n        }\n      }\n    }\n\n    return newValue;\n  };\n\n  Cascader.prototype.flatValue = function flatValue(value) {\n    var _this6 = this;\n\n    var getDepth = function getDepth(v) {\n      return _this6.getPos(v).split('-').length;\n    };\n\n    var newValue = value.slice(0).sort(function (prev, next) {\n      return getDepth(prev) - getDepth(next);\n    });\n\n    for (var i = 0; i < newValue.length; i++) {\n      for (var j = 0; j < newValue.length; j++) {\n        if (i !== j && this.isDescendantOrSelf(this.getPos(newValue[i]), this.getPos(newValue[j]))) {\n          newValue.splice(j, 1);\n          j--;\n        }\n      }\n    }\n\n    return newValue;\n  };\n\n  Cascader.prototype.getValue = function getValue(pos) {\n    return this._p2n[pos] ? this._p2n[pos].value : null;\n  };\n\n  Cascader.prototype.getPos = function getPos(value) {\n    return this._v2n[value] ? this._v2n[value].pos : null;\n  };\n\n  Cascader.prototype.getData = function getData(value) {\n    var _this7 = this;\n\n    return value.map(function (v) {\n      return _this7._v2n[v];\n    });\n  };\n\n  Cascader.prototype.isDescendantOrSelf = function isDescendantOrSelf(currentPos, targetPos) {\n    if (!currentPos || !targetPos) {\n      return false;\n    }\n\n    var currentNums = currentPos.split('-');\n    var targetNums = targetPos.split('-');\n    return currentNums.length <= targetNums.length && currentNums.every(function (num, index) {\n      return num === targetNums[index];\n    });\n  };\n\n  Cascader.prototype.isSiblingOrSelf = function isSiblingOrSelf(currentPos, targetPos) {\n    var currentNums = currentPos.split('-').slice(0, -1);\n    var targetNums = targetPos.split('-').slice(0, -1);\n    return currentNums.length === targetNums.length && currentNums.every(function (num, index) {\n      return num === targetNums[index];\n    });\n  };\n\n  Cascader.prototype.processValue = function processValue(value, v, checked) {\n    var index = value.indexOf(v);\n\n    if (checked && index === -1) {\n      value.push(v);\n    } else if (!checked && index > -1) {\n      value.splice(index, 1);\n    }\n  };\n\n  Cascader.prototype.handleSelect = function handleSelect(v, level, canExpand) {\n    var _this8 = this;\n\n    if (!(this.props.canOnlySelectLeaf && canExpand) && this.state.value[0] !== v) {\n      if (!('value' in this.props)) {\n        this.setState({\n          value: [v]\n        });\n      }\n\n      if ('onChange' in this.props) {\n        var data = this._v2n[v];\n        var nums = data.pos.split('-');\n        var selectedPath = nums.slice(1).reduce(function (ret, num, index) {\n          var p = nums.slice(0, index + 2).join('-');\n          ret.push(_this8._p2n[p]);\n          return ret;\n        }, []);\n        this.props.onChange(v, data, {\n          selectedPath: selectedPath\n        });\n      }\n    }\n\n    if (this.props.expandTrigger === 'click') {\n      return this.handleExpand(v, level, canExpand);\n    }\n\n    if (canExpand) {\n      if (!this.props.canOnlySelectLeaf) {\n        this.lastExpandedValue = [].concat(_toConsumableArray(this.state.expandedValue.slice(0, -1)));\n      }\n    } else {\n      this.lastExpandedValue = [].concat(_toConsumableArray(this.state.expandedValue));\n    }\n  };\n\n  Cascader.prototype.handleCheck = function handleCheck(v, checked) {\n    var _this9 = this;\n\n    this.lastExpandedValue = [].concat(_toConsumableArray(this.state.expandedValue));\n    var _props = this.props,\n        checkStrictly = _props.checkStrictly,\n        canOnlyCheckLeaf = _props.canOnlyCheckLeaf;\n    var value = this.state.value;\n\n    if (checkStrictly || canOnlyCheckLeaf) {\n      this.processValue(value, v, checked);\n    } else {\n      var pos = this.getPos(v);\n      var ps = Object.keys(this._p2n);\n      ps.forEach(function (p) {\n        if (_this9.isDescendantOrSelf(pos, p)) {\n          _this9.processValue(value, _this9.getValue(p), checked);\n        }\n      });\n      var currentPos = pos;\n      var nums = pos.split('-');\n\n      for (var i = nums.length; i > 2; i--) {\n        var parentChecked = true;\n\n        for (var j = 0; j < ps.length; j++) {\n          var p = ps[j];\n\n          if (this.isSiblingOrSelf(currentPos, p)) {\n            var _v = this.getValue(p);\n\n            if (value.indexOf(_v) === -1) {\n              parentChecked = false;\n              break;\n            }\n          }\n        }\n\n        var parentPos = nums.slice(0, i - 1).join('-');\n        this.processValue(value, this.getValue(parentPos), parentChecked);\n        currentPos = parentPos;\n      }\n    }\n\n    if (!('value' in this.props)) {\n      this.setState({\n        value: value\n      });\n    }\n\n    if ('onChange' in this.props) {\n      if (checkStrictly || canOnlyCheckLeaf) {\n        var data = this.getData(value);\n        this.props.onChange(value, data, {\n          checked: checked,\n          currentData: this._v2n[v],\n          checkedData: data\n        });\n      } else {\n        var flatValue = this.flatValue(value);\n        var flatData = this.getData(flatValue);\n        var checkedData = this.getData(value);\n        var indeterminateValue = this.getIndeterminate(value);\n        var indeterminateData = this.getData(indeterminateValue);\n        this.props.onChange(flatValue, flatData, {\n          checked: checked,\n          currentData: this._v2n[v],\n          checkedData: checkedData,\n          indeterminateData: indeterminateData\n        });\n      }\n    }\n  };\n\n  Cascader.prototype.handleExpand = function handleExpand(value, level, canExpand) {\n    var _this10 = this;\n\n    var loadData = this.props.loadData;\n    var expandedValue = this.state.expandedValue;\n\n    if (canExpand || expandedValue.length > level) {\n      if (canExpand) {\n        expandedValue.splice(level, expandedValue.length - level, value);\n      } else {\n        expandedValue.splice(level);\n      }\n\n      if (canExpand && loadData) {\n        return loadData(this._v2n[value]).then(function () {\n          _this10.setExpandValue(expandedValue);\n        });\n      } else {\n        this.setExpandValue(expandedValue);\n      }\n    }\n  };\n\n  Cascader.prototype.handleMouseLeave = function handleMouseLeave() {\n    this.setExpandValue([].concat(_toConsumableArray(this.lastExpandedValue)));\n  };\n\n  Cascader.prototype.setExpandValue = function setExpandValue(expandedValue) {\n    if (!('expandedValue' in this.props)) {\n      this.setState({\n        expandedValue: expandedValue\n      });\n    }\n\n    if ('onExpand' in this.props) {\n      this.props.onExpand(expandedValue);\n    }\n  };\n\n  Cascader.prototype.getIndeterminate = function getIndeterminate(value) {\n    var _this11 = this;\n\n    var indeterminate = [];\n    var positions = this.flatValue(value).map(this.getPos.bind(this));\n    positions.forEach(function (pos) {\n      var nums = pos.split('-');\n\n      for (var i = nums.length; i > 2; i--) {\n        var parentPos = nums.slice(0, i - 1).join('-');\n\n        var parentValue = _this11.getValue(parentPos);\n\n        if (indeterminate.indexOf(parentValue) === -1) {\n          indeterminate.push(parentValue);\n        }\n      }\n    });\n    return indeterminate;\n  };\n\n  Cascader.prototype.getPrefix = function getPrefix() {\n    return this.context.prefix || this.props.prefix;\n  };\n\n  Cascader.prototype.renderMenu = function renderMenu(data, level) {\n    var _this12 = this;\n\n    var _props2 = this.props,\n        multiple = _props2.multiple,\n        checkStrictly = _props2.checkStrictly,\n        expandTrigger = _props2.expandTrigger,\n        labelWidth = _props2.labelWidth,\n        showItemCount = _props2.showItemCount,\n        loadData = _props2.loadData,\n        canOnlyCheckLeaf = _props2.canOnlyCheckLeaf;\n    var _state = this.state,\n        value = _state.value,\n        expandedValue = _state.expandedValue;\n    var prefix = this.getPrefix();\n    var MenuItem = multiple ? _menu2['default'].CheckboxItem : _menu2['default'].Item;\n    return _react2['default'].createElement(_menu2['default'], {\n      prefix: prefix,\n      showItemCount: showItemCount,\n      key: level\n    }, data.map(function (item) {\n      var _cx;\n\n      var disabled = !!item.disabled;\n      var canExpand = item.children && item.children.length || !!loadData && !item.isLeaf;\n      var expanded = expandedValue[level] === item.value;\n      var props = {\n        prefix: prefix,\n        disabled: disabled,\n        canExpand: canExpand,\n        expanded: expanded\n      };\n\n      if (multiple) {\n        props.checkable = !(canOnlyCheckLeaf && canExpand);\n        props.checked = value.indexOf(item.value) > -1;\n        props.checkboxDisabled = !!item.checkboxDisabled;\n        props.className = props.checked ? 'js-selected' : null;\n        props.indeterminate = checkStrictly || canOnlyCheckLeaf ? false : _this12.indeterminate.indexOf(item.value) > -1;\n\n        if (!disabled) {\n          props.onCheck = _this12.handleCheck.bind(_this12, item.value);\n          var callbackName = expandTrigger === 'click' ? 'onClick' : 'onMouseEnter';\n          props[callbackName] = _this12.handleExpand.bind(_this12, item.value, level, canExpand);\n        }\n      } else {\n        props.selected = value[0] === item.value;\n        props.className = props.selected ? 'js-selected' : null;\n\n        if (!disabled) {\n          props.onClick = _this12.handleSelect.bind(_this12, item.value, level, canExpand);\n\n          if (expandTrigger !== 'click') {\n            props.onMouseEnter = _this12.handleExpand.bind(_this12, item.value, level, canExpand);\n          }\n        }\n      }\n\n      var setLabelWidth = typeof labelWidth !== 'undefined';\n      var spanProps = {\n        className: (0, _classnames2['default'])((_cx = {}, _defineProperty(_cx, prefix + 'cascader-menu-item-label', true), _defineProperty(_cx, 'ellipsis', setLabelWidth), _cx)),\n        title: item.label\n      };\n\n      if (setLabelWidth) {\n        spanProps.style = {\n          width: Number(labelWidth) + 'px'\n        };\n      }\n\n      return _react2['default'].createElement(MenuItem, _extends({\n        key: item.value\n      }, props), _react2['default'].createElement('span', spanProps, item.label));\n    }));\n  };\n\n  Cascader.prototype.renderMenus = function renderMenus() {\n    var _props3 = this.props,\n        dataSource = _props3.dataSource,\n        multiple = _props3.multiple,\n        checkStrictly = _props3.checkStrictly,\n        canOnlyCheckLeaf = _props3.canOnlyCheckLeaf;\n    var _state2 = this.state,\n        value = _state2.value,\n        expandedValue = _state2.expandedValue;\n\n    if (multiple && !checkStrictly && !canOnlyCheckLeaf) {\n      this.indeterminate = this.getIndeterminate(value);\n    }\n\n    var menus = [];\n    var data = dataSource;\n\n    for (var i = 0; i <= expandedValue.length; i++) {\n      if (!data) {\n        break;\n      }\n\n      menus.push(this.renderMenu(data, i));\n      var expandedItem = void 0;\n\n      for (var j = 0; j < data.length; j++) {\n        if (data[j].value === expandedValue[i]) {\n          expandedItem = data[j];\n          break;\n        }\n      }\n\n      data = expandedItem ? expandedItem.children : null;\n    }\n\n    return menus;\n  };\n\n  Cascader.prototype.render = function render() {\n    var _cx2;\n\n    var _props4 = this.props,\n        className = _props4.className,\n        expandTrigger = _props4.expandTrigger,\n        multiple = _props4.multiple,\n        dataSource = _props4.dataSource,\n        style = _props4.style;\n    var others = (0, _nextUtil.pickOthers)(Cascader, this.props);\n    var prefix = this.getPrefix();\n\n    var props = _extends({\n      className: (0, _classnames2['default'])((_cx2 = {}, _defineProperty(_cx2, prefix + 'cascader', true), _defineProperty(_cx2, 'multiple', multiple), _defineProperty(_cx2, className, !!className), _cx2)),\n      style: style,\n      ref: 'cascader'\n    }, others);\n\n    if (expandTrigger === 'hover') {\n      props.onMouseLeave = this.handleMouseLeave;\n    }\n\n    return _react2['default'].createElement('div', _extends({}, props, {\n      ref: this.getCascaderNode\n    }), _react2['default'].createElement('div', {\n      className: prefix + 'cascader-inner'\n    }, dataSource && dataSource.length ? this.renderMenus() : null));\n  };\n\n  return Cascader;\n}(_react.Component), _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _class.propTypes = {\n  /**\n   * 样式类名的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 自定义类名\n   */\n  className: _propTypes2['default'].string,\n\n  /**\n   * 自定义内联样式\n   */\n  style: _propTypes2['default'].object,\n\n  /**\n   * 数据源，结构可参考下方说明\n   */\n  dataSource: _propTypes2['default'].arrayOf(_propTypes2['default'].object),\n\n  /**\n   * （非受控）默认值\n   */\n  defaultValue: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].arrayOf(_propTypes2['default'].string)]),\n\n  /**\n   * （受控）当前值\n   */\n  value: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].arrayOf(_propTypes2['default'].string)]),\n\n  /**\n   * 选中值改变时触发的回调函数\n   * @param {String|Array} value 选中的值，单选时返回单个值，多选时返回数组\n   * @param {Object|Array} data 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点\n   * @param {Object} extra 额外参数\n   * @param {Array} extra.selectedPath 单选时选中的数据的路径\n   * @param {Boolean} extra.checked 多选时当前的操作是选中还是取消选中\n   * @param {Object} extra.currentData 多选时当前操作的数据\n   * @param {Array} extra.checkedData 多选时所有被选中的数据\n   * @param {Array} extra.indeterminateData 多选时半选的数据\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * （非受控）默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置\n   */\n  defaultExpandedValue: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * （受控）当前展开值\n   */\n  expandedValue: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * 展开触发的方式\n   */\n  expandTrigger: _propTypes2['default'].oneOf(['click', 'hover']),\n\n  /**\n   * 展开时触发的回调函数\n   * @param {Array} expandedValue 各列展开值的数组\n   */\n  onExpand: _propTypes2['default'].func,\n\n  /**\n   * 是否多选\n   */\n  multiple: _propTypes2['default'].bool,\n\n  /**\n   * 单选时是否只能选中叶子节点\n   */\n  canOnlySelectLeaf: _propTypes2['default'].bool,\n\n  /**\n   * 多选时是否只能选中叶子节点\n   */\n  canOnlyCheckLeaf: _propTypes2['default'].bool,\n\n  /**\n   * 父子节点是否选中不关联\n   */\n  checkStrictly: _propTypes2['default'].bool,\n\n  /**\n   * 文字区域宽度，当文字超过宽度时，结尾会以省略号显示，默认值为文字实际宽度\n   */\n  labelWidth: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n\n  /**\n   * 每一列展示的个数\n   */\n  showItemCount: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n\n  /**\n   * 异步加载数据函数\n   * @param {Object} data 当前点击异步加载的数据\n   */\n  loadData: _propTypes2['default'].func,\n  setCascaderInnerWidth: _propTypes2['default'].bool\n}, _class.defaultProps = {\n  prefix: 'next-',\n  dataSource: [],\n  defaultValue: null,\n  canOnlySelectLeaf: false,\n  canOnlyCheckLeaf: false,\n  expandTrigger: 'click',\n  multiple: false,\n  checkStrictly: false,\n  showItemCount: 6,\n  setCascaderInnerWidth: true\n}, _temp);\nCascader.displayName = 'Cascader';\nexports['default'] = Cascader;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}