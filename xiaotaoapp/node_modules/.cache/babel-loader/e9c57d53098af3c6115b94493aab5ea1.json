{"ast":null,"code":"'use strict';\n\nvar EVENT_PREFIX = 'next-';\n\nfunction on(node, eventName, handler, useCapture) {\n  if (node.addEventListener) {\n    node.addEventListener(eventName, handler, useCapture);\n  } else if (node.attachEvent) {\n    var nextEvent = getNextEventName(eventName);\n\n    if (Array.isArray(node[nextEvent])) {\n      if (node[nextEvent].indexOf(handler) === -1) {\n        node[nextEvent].push(handler);\n      }\n    } else {\n      node[nextEvent] = [handler];\n      node.attachEvent('on' + eventName, function () {\n        node[nextEvent].forEach(function (handler) {\n          handler && handler.call(node, shimEvent(window.event, node));\n        });\n      });\n    }\n  }\n\n  return {\n    off: function off() {\n      _off(node, eventName, handler, useCapture);\n    }\n  };\n}\n\nfunction _off(node, eventName, handler, useCapture) {\n  if (node.removeEventListener) {\n    node.removeEventListener(eventName, handler, useCapture);\n  } else {\n    var nextEvent = getNextEventName(eventName);\n\n    if (Array.isArray(node[nextEvent])) {\n      var index = node[nextEvent].indexOf(handler);\n\n      if (index > -1) {\n        node[nextEvent].splice(index, 1);\n      }\n    }\n  }\n}\n\nfunction shimEvent(e, currentTarget) {\n  if (!e.target) {\n    e.target = e.srcElement;\n    e.currentTarget = currentTarget;\n    e.relatedTarge = e.type === 'mouseover' ? e.fromElement : e.toElement;\n\n    e.stopPropagation = function () {\n      e.cancelBubble = true;\n    };\n\n    e.preventDefault = function () {\n      e.returnValue = false;\n    };\n  }\n\n  return e;\n}\n\nfunction getNextEventName(eventName) {\n  return '' + EVENT_PREFIX + eventName;\n}\n\nmodule.exports = {\n  on: on,\n  off: _off\n};","map":null,"metadata":{},"sourceType":"script"}