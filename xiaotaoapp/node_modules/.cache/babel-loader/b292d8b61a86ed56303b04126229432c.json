{"ast":null,"code":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n!function (a, b) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"undefined\" != typeof module && \"function\" == typeof require ? b(require(\"../index.js\")) : \"function\" == typeof define && define.amd ? define([\"../index\"], b) : b(a.moment);\n}(undefined, function (a) {\n  var b = \"ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.\".split(\"_\"),\n      c = \"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),\n      d = a.defineLocale(\"es\", {\n    months: \"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),\n    monthsShort: function monthsShort(a, d) {\n      return /-MMM-/.test(d) ? c[a.month()] : b[a.month()];\n    },\n    monthsParseExact: !0,\n    weekdays: \"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),\n    weekdaysShort: \"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),\n    weekdaysMin: \"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),\n    weekdaysParseExact: !0,\n    longDateFormat: {\n      LT: \"H:mm\",\n      LTS: \"H:mm:ss\",\n      L: \"DD/MM/YYYY\",\n      LL: \"D [de] MMMM [de] YYYY\",\n      LLL: \"D [de] MMMM [de] YYYY H:mm\",\n      LLLL: \"dddd, D [de] MMMM [de] YYYY H:mm\"\n    },\n    calendar: {\n      sameDay: function sameDay() {\n        return \"[hoy a la\" + (1 !== this.hours() ? \"s\" : \"\") + \"] LT\";\n      },\n      nextDay: function nextDay() {\n        return \"[mañana a la\" + (1 !== this.hours() ? \"s\" : \"\") + \"] LT\";\n      },\n      nextWeek: function nextWeek() {\n        return \"dddd [a la\" + (1 !== this.hours() ? \"s\" : \"\") + \"] LT\";\n      },\n      lastDay: function lastDay() {\n        return \"[ayer a la\" + (1 !== this.hours() ? \"s\" : \"\") + \"] LT\";\n      },\n      lastWeek: function lastWeek() {\n        return \"[el] dddd [pasado a la\" + (1 !== this.hours() ? \"s\" : \"\") + \"] LT\";\n      },\n      sameElse: \"L\"\n    },\n    relativeTime: {\n      future: \"en %s\",\n      past: \"hace %s\",\n      s: \"unos segundos\",\n      m: \"un minuto\",\n      mm: \"%d minutos\",\n      h: \"una hora\",\n      hh: \"%d horas\",\n      d: \"un día\",\n      dd: \"%d días\",\n      M: \"un mes\",\n      MM: \"%d meses\",\n      y: \"un año\",\n      yy: \"%d años\"\n    },\n    ordinalParse: /\\d{1,2}º/,\n    ordinal: \"%dº\",\n    week: {\n      dow: 1,\n      doy: 4\n    }\n  });\n  return d;\n});","map":null,"metadata":{},"sourceType":"script"}