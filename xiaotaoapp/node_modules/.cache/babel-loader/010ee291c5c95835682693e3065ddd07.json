{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n/** Timeline */\n\n\nvar Timeline = (_temp = _class = function (_Component) {\n  _inherits(Timeline, _Component);\n\n  function Timeline(props, context) {\n    _classCallCheck(this, Timeline);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this.state = {\n      fold: props.fold\n    };\n    return _this;\n  }\n\n  Timeline.prototype.toggleFold = function toggleFold(folderIndex, total) {\n    var fold = this.state.fold.map(function (item) {\n      return _extends({}, item);\n    });\n\n    if (folderIndex) {\n      for (var i = 0; i < fold.length; i++) {\n        var _fold$i = fold[i],\n            foldArea = _fold$i.foldArea,\n            foldShow = _fold$i.foldShow;\n\n        if (foldArea[1] && folderIndex === foldArea[1] || !foldArea[1] && folderIndex === total - 1) {\n          fold[i].foldShow = !foldShow;\n        }\n      }\n\n      this.setState({\n        fold: fold\n      });\n    }\n  };\n\n  Timeline.prototype.render = function render() {\n    var _this2 = this,\n        _classNames;\n\n    var _props = this.props,\n        className = _props.className,\n        children = _props.children;\n    var prefix = this.context.prefix || this.props.prefix;\n    var fold = this.state.fold; // 修改子节点属性\n\n    var childrenCount = _react2['default'].Children.count(children);\n\n    var cloneChildren = _react.Children.map(children, function (child, i) {\n      var ref = 'timeline-item-' + i.toString();\n      var folderIndex = null;\n      var foldNodeShow = false;\n      fold.forEach(function (item) {\n        var foldArea = item.foldArea,\n            foldShow = item.foldShow;\n\n        if (foldArea[0] && i >= foldArea[0] && (i <= foldArea[1] || !foldArea[1])) {\n          folderIndex = foldArea[1] || childrenCount - 1;\n          foldNodeShow = foldShow;\n        }\n      });\n      return _react2['default'].cloneElement(child, {\n        prefix: prefix,\n        ref: ref,\n        total: childrenCount,\n        index: i,\n        folderIndex: folderIndex,\n        foldShow: foldNodeShow,\n        toggleFold: folderIndex === i ? _this2.toggleFold.bind(_this2, folderIndex, childrenCount) : function () {}\n      });\n    });\n\n    var timelineCls = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefix + 'timeline', true), _defineProperty(_classNames, className, className), _classNames));\n    return _react2['default'].createElement('ul', {\n      className: timelineCls\n    }, cloneChildren);\n  };\n\n  return Timeline;\n}(_react.Component), _class.propTypes = {\n  /**\n   * 样式的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 自定义折叠选项 示例`[{foldArea: [startIndex, endIndex], foldShow: boolean}]`\n   */\n  fold: _propTypes2['default'].array,\n\n  /**\n   * 自定义类名\n   */\n  className: _propTypes2['default'].string,\n  children: _propTypes2['default'].any\n}, _class.defaultProps = {\n  prefix: 'next-',\n  fold: []\n}, _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _temp);\nTimeline.displayName = 'Timeline';\nexports['default'] = Timeline;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}