{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextGrid = require('../../next-grid/lib/index.js');\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nfunction prefixFn(prefix) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return args.map(function (s) {\n    return prefix + 'form-item-' + s;\n  }).join(' ');\n}\n/** Form.Item */\n\n\nvar FormItem = (_temp = _class = function (_React$Component) {\n  _inherits(FormItem, _React$Component);\n\n  function FormItem() {\n    _classCallCheck(this, FormItem);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  FormItem.prototype._getLayoutClass = function _getLayoutClass(colDef) {\n    var _classNames;\n\n    if (!colDef) {\n      return '';\n    }\n\n    var span = colDef.span,\n        offset = colDef.offset,\n        fixedSpan = colDef.fixedSpan;\n    /*eslint-enable */\n\n    var prefix = this.context.prefix || this.props.prefix;\n    return (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefix + 'col-' + span, span), _defineProperty(_classNames, prefix + 'col-offset-' + offset, offset), _defineProperty(_classNames, prefix + 'col-fixed-' + fixedSpan, fixedSpan), _classNames));\n  };\n\n  FormItem.prototype.getHelpMsg = function getHelpMsg() {\n    var context = this.context;\n    var props = this.props;\n\n    if (props.help === undefined && context.field) {\n      return this.getId() ? context.field.getError(this.getId()) : '';\n    }\n\n    return props.help;\n  };\n\n  FormItem.prototype.getOnlyControl = function getOnlyControl() {\n    var children = _react2['default'].Children.toArray(this.props.children);\n\n    var child = children.filter(function (c) {\n      return c.props && 'data-meta' in c.props;\n    })[0];\n    return child !== undefined ? child : null;\n  };\n\n  FormItem.prototype.getChildProp = function getChildProp(prop) {\n    var child = this.getOnlyControl();\n    return child && child.props && child.props[prop];\n  };\n\n  FormItem.prototype.getId = function getId() {\n    return this.getChildProp('id');\n  };\n\n  FormItem.prototype.renderHelp = function renderHelp() {\n    var prefix = this.context.prefix || this.props.prefix;\n    var help = this.getHelpMsg();\n    return _react2['default'].createElement('div', {\n      className: help ? prefixFn(prefix, 'explain') : '',\n      key: 'help'\n    }, help);\n  };\n\n  FormItem.prototype.getValidateStatus = function getValidateStatus() {\n    var getState = this.context.field.getState;\n    var field = this.getId();\n\n    if (!field) {\n      return '';\n    }\n\n    var state = getState(field);\n\n    if (state === 'validating') {\n      return 'loading';\n    } else {\n      return state;\n    }\n  };\n\n  FormItem.prototype.renderValidateWrapper = function renderValidateWrapper(validateStatus, help, extra) {\n    var _cls;\n\n    var props = this.props;\n    var prefix = this.context.prefix || this.props.prefix;\n    var cls = (_cls = {}, _defineProperty(_cls, this._getLayoutClass(props.wrapperCol), this.context.labelAlign !== 'top'), _defineProperty(_cls, prefix + 'form-item-control', true), _cls);\n    var childrenProps = {\n      size: this.props.size || this.context.size\n    };\n\n    if (props.hasFeedback) {\n      if (validateStatus === 'success' || validateStatus === 'loading') {\n        childrenProps.state = validateStatus;\n      }\n    }\n\n    var children = _react2['default'].Children.map(props.children, function (child) {\n      if (child && typeof child.type === 'function') {\n        return _react2['default'].cloneElement(child, childrenProps);\n      }\n\n      return child;\n    });\n\n    return _react2['default'].createElement('div', {\n      className: (0, _classnames2['default'])(cls),\n      key: 'item'\n    }, children, ' ', help, ' ', extra);\n  };\n\n  FormItem.prototype.getRules = function getRules(name) {\n    return this.context.field && this.context.field._get(name) && this.context.field._get(name).rules;\n  };\n\n  FormItem.prototype.isRequired = function isRequired() {\n    if (this.context.field) {\n      var rules = this.getRules(this.getId()) || null;\n\n      if (!rules) {\n        return false;\n      }\n\n      if (rules.required) {\n        return true;\n      } else {\n        return rules.some(function (rule) {\n          return rule.required;\n        });\n      }\n    }\n\n    return false;\n  };\n\n  FormItem.prototype.renderLabel = function renderLabel() {\n    var _classNames2;\n\n    var props = this.props;\n    var prefix = this.context.prefix || this.props.prefix;\n    var labelCol = props.labelCol;\n    var required = props.required === undefined ? this.isRequired() : props.required;\n    var className = (0, _classnames2['default'])((_classNames2 = {}, _defineProperty(_classNames2, this._getLayoutClass(labelCol), true), _defineProperty(_classNames2, prefix + 'form-item-label', true), _classNames2));\n    return props.label !== undefined ? _react2['default'].createElement('label', {\n      htmlFor: props.id || this.getId(),\n      required: required,\n      className: className,\n      key: 'label'\n    }, props.label) : null;\n  };\n\n  FormItem.prototype.renderChildren = function renderChildren(validateStatus) {\n    return [this.renderLabel(), this.renderValidateWrapper(validateStatus, this.context.labelAlign !== 'inset' && this.props.labelAlign !== 'inset' ? this.renderHelp() : null, this.props.extra)];\n  };\n\n  FormItem.prototype.renderFormItem = function renderFormItem(validateStatus, children) {\n    var _classNames3;\n\n    var _props = this.props,\n        className = _props.className,\n        labelAlign = _props.labelAlign,\n        style = _props.style,\n        others = _objectWithoutProperties(_props, ['className', 'labelAlign', 'style']);\n\n    var prefix = this.context.prefix || this.props.prefix;\n    var itemClassName = (0, _classnames2['default'])((_classNames3 = {}, _defineProperty(_classNames3, prefix + 'form-item', true), _defineProperty(_classNames3, prefix + 'row', this.context.direction === 'ver' && this.context.labelAlign === 'left'), _defineProperty(_classNames3, 'has-success', validateStatus === 'success'), _defineProperty(_classNames3, 'has-error', validateStatus === 'error'), _defineProperty(_classNames3, '' + className, !!className), _classNames3));\n\n    if (this.context.labelAlign === 'inset' || labelAlign === 'inset') {\n      return _react2['default'].createElement('div', {\n        className: itemClassName,\n        style: style\n      }, _react2['default'].createElement(_nextGrid.Row, {\n        className: prefix + 'form-item-inset'\n      }, children), this.renderHelp());\n    }\n\n    return _react2['default'].createElement('div', _extends({\n      className: itemClassName,\n      style: style\n    }, (0, _nextUtil.pickAttrs)(others)), children);\n  };\n\n  FormItem.prototype.render = function render() {\n    var validateStatus = this.props.validateStatus === undefined && this.context.field ? this.getValidateStatus() : this.props.validateStatus;\n    var children = this.renderChildren(validateStatus);\n    return this.renderFormItem(validateStatus, children);\n  };\n\n  return FormItem;\n}(_react2['default'].Component), _class.propTypes = {\n  /**\n   * 样式前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * label 标签的文本\n   */\n  label: _propTypes2['default'].node,\n\n  /**\n   * label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效\n   */\n  labelCol: _propTypes2['default'].object,\n\n  /**\n   * 提示信息，如不设置，则会根据校验规则自动生成. 如果设置会受控（ps: 可以利用这点自定义错误位置,详细看demo自定义错误)\n   */\n  help: _propTypes2['default'].node,\n\n  /**\n   * 校验状态，如不设置，则会根据校验规则自动生成\n   * @enumdesc , 成功, 失败, 校验中\n   */\n  validateStatus: _propTypes2['default'].oneOf(['', 'success', 'error', 'loading']),\n\n  /**\n   * 配合 validateStatus 属性使用，是否展示校验状态图标, 目前只有Input支持\n   */\n  hasFeedback: _propTypes2['default'].bool,\n\n  /**\n   * 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol\n   */\n  wrapperCol: _propTypes2['default'].object,\n\n  /**\n   * 自定义内联样式\n   */\n  style: _propTypes2['default'].object,\n  id: _propTypes2['default'].string,\n  children: _propTypes2['default'].node,\n\n  /**\n   * 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面\n   */\n  extra: _propTypes2['default'].node,\n\n  /**\n   * 单个FormItem的size自定义，优先级高于Form的size, 并且当组件与 FormItem 一起使用时，组件自身设置 size 属性无效。\n   */\n  size: _propTypes2['default'].oneOf(['', 'large', 'small', 'medium']),\n  labelAlign: _propTypes2['default'].oneOf(['', 'top', 'left', 'inset']),\n\n  /**\n   * 扩展class\n   */\n  className: _propTypes2['default'].string\n}, _class.defaultProps = {\n  hasFeedback: false,\n  prefix: 'next-'\n}, _class.contextTypes = {\n  field: _propTypes2['default'].object,\n  direction: _propTypes2['default'].oneOf(['hoz', 'ver']),\n  labelAlign: _propTypes2['default'].oneOf(['top', 'left', 'inset']),\n  prefix: _propTypes2['default'].string,\n  size: _propTypes2['default'].oneOf(['small', 'medium', 'large'])\n}, _temp);\nFormItem.displayName = 'FormItem';\nexports['default'] = FormItem;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}