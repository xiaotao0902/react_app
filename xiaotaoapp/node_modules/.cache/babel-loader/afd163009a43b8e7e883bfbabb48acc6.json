{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/* eslint-disable */\n\n\nvar _kf_ = '/kf/';\nvar dot = '.';\nvar slash = '/';\nvar underScore = '_';\nvar questionMark = '?';\nvar alibabaImageDomainList = ['g01.s.alicdn.com', 'g02.s.alicdn.com', 'g03.s.alicdn.com', 'g04.s.alicdn.com'];\nvar alibabaContentDomainList = ['f01.s.alicdn.com', 'f02.s.alicdn.com', 'f03.s.alicdn.com', 'f04.s.alicdn.com'];\nvar alibabaV2DomainList = ['sc01.alicdn.com', 'sc02.alicdn.com'];\nvar aliexpressImageDomainList = ['g01.a.alicdn.com', 'g02.a.alicdn.com', 'g03.a.alicdn.com', 'g04.a.alicdn.com'];\nvar aliexpressContentDomainList = ['f01.a.alicdn.com', 'f02.a.alicdn.com', 'f03.a.alicdn.com', 'f04.a.alicdn.com'];\nvar itaoImageDomainList = ['g01.t.alicdn.com', 'g02.t.alicdn.com', 'g03.t.alicdn.com', 'g04.t.alicdn.com'];\nvar itaoContentDomainList = ['f01.t.alicdn.com', 'f02.t.alicdn.com', 'f03.t.alicdn.com', 'f04.t.alicdn.com'];\nvar taobaoImageDomainList = ['g01.b.alicdn.com', 'g02.b.alicdn.com', 'g03.b.alicdn.com', 'g04.b.alicdn.com'];\nvar taobaoContentDomainList = ['f01.b.alicdn.com', 'f02.b.alicdn.com', 'f03.b.alicdn.com', 'f04.b.alicdn.com'];\nvar aliexpressSkipCdnDomain = 'kfdown.a.aliimg.com';\nvar alibabaSkipCdnDomain = 'kfdown.s.aliimg.com';\nvar itaoSkipCdnDomain = 'kfdown.t.aliimg.com';\nvar imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tif', 'tiff', 'webp'];\nvar imageSize = ['_50x50', '_80x80', '_100x100', '_120x120', '_140x140', '_200x200', '_220x220', '_250x250', '_350x350', '_640x640', '_220x10000', '_640x10000'];\nvar resizableImageExtensions = ['jpg', 'jpeg', 'png'];\nvar consistentHashCycle = {};\nvar commonParams = {\n  site: 'alibaba',\n  resize: '_140x140',\n  fileName: '',\n  skipCDN: false,\n  withAddition: '',\n  asAttachment: '',\n  useDomainGroup: '',\n  fileProtocol: ''\n};\n\nfunction isImage(ext) {\n  return imageExtensions.indexOf(ext) !== -1;\n}\n\nfunction getProtocol(site, fileProtocol) {\n  if (!fileProtocol || fileProtocol === 'http') {\n    return 'http://';\n  }\n\n  if (fileProtocol === 'https') {\n    if (site === 'alibaba_v2') {\n      return 'https://';\n    }\n\n    return null; // This site does not support https.\n  }\n\n  if (fileProtocol === 'empty') {\n    return '//';\n  }\n\n  return null; // Unsupported protocol.\n}\n\nfunction isResizableImage(ext, size) {\n  return resizableImageExtensions.indexOf(ext) !== -1 && imageSize.indexOf(size) !== -1;\n}\n\nfunction parseFileName(fileName) {\n  var fileNameIndex = fileName.indexOf('.');\n  var fileExtensionIndex = fileName.lastIndexOf('.');\n  var file = '';\n  var extension = '';\n\n  if (fileNameIndex === -1) {\n    file = fileName;\n    extension = '';\n  } else {\n    file = fileName.substring(0, fileNameIndex);\n    extension = fileName.substring(fileExtensionIndex + 1, fileName.length);\n  }\n\n  return {\n    file: file,\n    extension: extension\n  };\n}\n\nfunction initType(num) {\n  var maxValue = 0x7fffffff;\n  var minValue = -0x80000000;\n\n  if (num > maxValue || num < minValue) {\n    return num &= 0xFFFFFFFF;\n  }\n\n  return num;\n}\n\nfunction hashCode(str) {\n  var hashCode = 0;\n\n  if (str) {\n    for (var i = 0; i < str.length; i++) {\n      hashCode = hashCode * 31 + str.charCodeAt(i);\n      hashCode = initType(hashCode);\n    }\n  }\n\n  return hashCode;\n}\n\nfunction binarySearch(arrayList, fileHashCode) {\n  var start = 0;\n  var stop = arrayList.length - 1;\n  var middleIndex = Math.floor((stop + start) / 2);\n\n  while (arrayList[middleIndex]['hashCode'] != fileHashCode && start < stop) {\n    if (fileHashCode < arrayList[middleIndex]['hashCode']) {\n      stop = middleIndex - 1;\n    } else if (fileHashCode > arrayList[middleIndex]['hashCode']) {\n      start = middleIndex + 1;\n    }\n\n    middleIndex = Math.floor((stop + start) / 2);\n  }\n\n  return arrayList[middleIndex]['hashCode'] != fileHashCode ? -1 : middleIndex;\n}\n\nfunction quickSort(array) {\n  var i = 0;\n  var j = array.length - 1;\n\n  var sortArray = function sortArray(i, j) {\n    if (i === j) return;\n    var key = array[i]['hashCode'];\n    var keyObj = array[i];\n    var stepi = i;\n    var stepj = j;\n\n    while (j > i) {\n      if (array[j]['hashCode'] >= key) {\n        j--;\n      } else {\n        array[i] = array[j];\n\n        while (j > ++i) {\n          if (array[i]['hashCode'] > key) {\n            array[j] = array[i];\n            break;\n          }\n        }\n      }\n    }\n\n    if (stepi === i) {\n      sortArray(++i, stepj);\n      return;\n    }\n\n    array[i] = keyObj;\n    sortArray(stepi, i);\n    sortArray(j, stepj);\n  };\n\n  sortArray(i, j);\n  return array;\n}\n\nfunction tailMap(cycleName, fileHashCode) {\n  var array = consistentHashCycle[cycleName];\n\n  if (array[array.length - 1]['hashCode'] < fileHashCode) {\n    return array[0]['domain'];\n  } else {\n    var hashCodeIndex = binarySearch(array, fileHashCode);\n\n    if (hashCodeIndex == -1) {\n      var arrayObj = {};\n      arrayObj.hashCode = fileHashCode;\n      arrayObj.domain = 'mock';\n      array.push(arrayObj);\n      var sortArray = quickSort(array);\n      var fileIndex = binarySearch(sortArray, fileHashCode);\n      array.splice(fileIndex, 1);\n      return array[fileIndex]['domain'];\n    } else {\n      return array[hashCodeIndex]['domain'];\n    }\n  }\n}\n\nfunction consistentHash(filename, cycleName, domainList) {\n  var fileHashCode = hashCode(filename);\n\n  if (!consistentHashCycle[cycleName]) {\n    var numberOfReplicase = 20;\n    var domainArray = [];\n\n    for (var i = 0; i < domainList.length; i++) {\n      for (var j = 0; j < numberOfReplicase; j++) {\n        var elementObj = {};\n        elementObj.hashCode = hashCode(domainList[i] + j);\n        elementObj.domain = domainList[i];\n        domainArray.push(elementObj);\n      }\n    }\n\n    consistentHashCycle[cycleName] = quickSort(domainArray);\n  }\n\n  return tailMap(cycleName, fileHashCode);\n}\n\nvar siteMap = {\n  'alibaba': {\n    skipDomain: alibabaSkipCdnDomain,\n    f: ['alibabaContentDomainList', alibabaContentDomainList],\n    g: ['alibabaImageDomainList', alibabaImageDomainList],\n    image: ['alibabaImageDomainList', alibabaImageDomainList],\n    content: ['alibabaContentDomainList', alibabaContentDomainList]\n  },\n  'alibaba_v2': {\n    skipDomain: null,\n    f: ['alibabaV2DomainList', alibabaV2DomainList],\n    g: ['alibabaV2DomainList', alibabaV2DomainList],\n    image: ['alibabaV2DomainList', alibabaV2DomainList],\n    content: ['alibabaV2DomainList', alibabaV2DomainList]\n  },\n  'aliexpress': {\n    skipDomain: aliexpressSkipCdnDomain,\n    f: ['aliexpressContentDomainList', aliexpressContentDomainList],\n    g: ['aliexpressImageDomainList', aliexpressImageDomainList],\n    image: ['aliexpressImageDomainList', aliexpressImageDomainList],\n    content: ['aliexpressContentDomainList', aliexpressContentDomainList]\n  },\n  'itao': {\n    skipDomain: null,\n    f: ['itaoContentDomainList', itaoContentDomainList],\n    g: ['itaoImageDomainList', itaoImageDomainList],\n    image: ['itaoImageDomainList', itaoImageDomainList],\n    content: ['itaoContentDomainList', itaoContentDomainList]\n  },\n  'taobao': {\n    skipDomain: null,\n    f: ['taobaoContentDomainList', taobaoContentDomainList],\n    g: ['taobaoImageDomainList', taobaoImageDomainList],\n    image: ['taobaoImageDomainList', taobaoImageDomainList],\n    content: ['taobaoContentDomainList', taobaoContentDomainList]\n  }\n};\n\nfunction switchDomain(fileKey, site, isSkip, group, isImage) {\n  var config = siteMap[site];\n\n  if (!config) {\n    return null;\n  }\n\n  if (isSkip) {\n    return config.skipDomain;\n  }\n\n  if (group) {\n    if (group === 'f') {\n      return consistentHash(fileKey, config.f[0], config.f[1]);\n    } else if (group === 'g') {\n      return consistentHash(fileKey, config.g[0], config.g[1]);\n    }\n  } else {\n    return isImage ? consistentHash(fileKey, config.image[0], config.image[1]) : consistentHash(fileKey, config.content[0], config.content[1]);\n  }\n\n  return null;\n}\n\nvar setCommonParams = exports.setCommonParams = function setCommonParams(params) {\n  commonParams = _extends({}, commonParams, params);\n};\n\nvar getCommonParams = exports.getCommonParams = function getCommonParams() {\n  return commonParams;\n};\n\nvar buildUrl = exports.buildUrl = function buildUrl(customParams) {\n  var params = _extends({}, commonParams, customParams);\n\n  var site = params.site,\n      fileName = params.fileName,\n      resize = params.resize,\n      skipCDN = params.skipCDN,\n      withAddition = params.withAddition,\n      asAttachment = params.asAttachment,\n      useDomainGroup = params.useDomainGroup,\n      fileProtocol = params.fileProtocol;\n  resize = resize ? resize.indexOf(underScore) === -1 ? underScore + resize : resize : '';\n\n  if (!site || !fileName) {\n    return null;\n  }\n\n  var fileObj = parseFileName(fileName);\n  var fileKey = fileObj.file;\n  var fileExtension = fileObj.extension;\n\n  if (!fileExtension) {\n    return null;\n  }\n\n  var domain = '';\n\n  if (skipCDN == true) {\n    domain = switchDomain(fileName, site, true);\n  } else {\n    if (useDomainGroup) {\n      if (useDomainGroup === 'f') {\n        domain = switchDomain(fileName, site, false, 'f', false);\n      } else if (useDomainGroup === 'g') {\n        domain = switchDomain(fileName, site, false, 'g', false);\n      } else {\n        return null; // Unsupported domain group.\n      }\n    } else {\n      if (isImage(fileExtension)) {\n        domain = switchDomain(fileName, site, false, null, true);\n      } else {\n        domain = switchDomain(fileName, site, false, null, false);\n      }\n    }\n  }\n\n  if (!domain) {\n    return null;\n  }\n\n  var formatHead = getProtocol(site, fileProtocol);\n\n  if (!formatHead) {\n    return null;\n  }\n\n  if (resize && !isResizableImage(fileExtension, resize)) {\n    //error can not resize\n    return null; //{ error: 'Only image files ' + resizableImageExtensions.join(',') + ' have resize information in the URL. And only image sizes ' + imageSize.join(',') + ' are resizable.' };\n  } else {\n    var url = withAddition ? formatHead + domain + _kf_ + fileKey + withAddition + dot + fileExtension : formatHead + domain + _kf_ + fileName;\n\n    if (resize) {\n      url = url + resize + dot + fileExtension;\n    }\n\n    if (asAttachment) {\n      url = url + '?attachment=' + asAttachment;\n    }\n\n    return url;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}