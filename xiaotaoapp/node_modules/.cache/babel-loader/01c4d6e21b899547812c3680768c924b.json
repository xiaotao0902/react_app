{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n/* eslint-disable eqeqeq */\n\n/* eslint-disable react/prop-types */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nvar _nextDom = require('../../next-dom/lib/index.js');\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _container = require('./container.js');\n\nvar _container2 = _interopRequireDefault(_container);\n\nvar _subMenu = require('./sub-menu.js');\n\nvar _subMenu2 = _interopRequireDefault(_subMenu);\n\nvar _menuItem = require('./menu-item.js');\n\nvar _menuItem2 = _interopRequireDefault(_menuItem);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Component = _container2['default'];\n\nvar Children = _react2['default'].Children,\n    noop = function noop() {},\n    makeChain = _nextUtil.func.makeChain,\n    getOffset = _nextDom.style.getOffset;\n\nvar KEY_CODE_MAPS = {};\n\nfor (var key in _nextUtil.keyCode) {\n  var lowerCaseKey = key.toLowerCase().replace('_arrow', '');\n  KEY_CODE_MAPS[_nextUtil.keyCode[key]] = lowerCaseKey.charAt(0).toUpperCase() + lowerCaseKey.substr(1);\n}\n/** Menu */\n\n\nvar Menu = (_temp = _class = function (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu(props, context) {\n    _classCallCheck(this, Menu);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this.children = [];\n    _this.state = {\n      selectedKeys: _this.normalizeKeys(props.selectedKeys || props.defaultSelectedKeys),\n      openKeys: _this.normalizeKeys(props.openKeys || props.defaultOpenKeys),\n      focusedKey: props.focusedKey\n    };\n    ['onMouseLeave', 'onItemClick', 'onSelect', 'onFocus', 'onOpen', 'onKeyNavNodeKeyDown', 'onKeyNavNodeFocus'].forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    return _this;\n  }\n\n  Menu.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('selectedKeys' in nextProps) {\n      this.setState({\n        selectedKeys: this.normalizeKeys(nextProps.selectedKeys)\n      });\n    }\n\n    if ('openKeys' in nextProps) {\n      this.setState({\n        openKeys: this.normalizeKeys(nextProps.openKeys)\n      });\n    }\n\n    if ('focusedKey' in nextProps) {\n      this.setState({\n        focusedKey: nextProps.focusedKey\n      });\n    }\n  };\n\n  Menu.prototype.normalizeKeys = function normalizeKeys(keys) {\n    if (!Array.isArray(keys)) {\n      if (keys != null) {\n        keys = [keys];\n      } else {\n        keys = [];\n      }\n    } else {\n      keys = [].concat(_toConsumableArray(keys));\n    }\n\n    return keys;\n  };\n\n  Menu.prototype.render = function render() {\n    var _classnames,\n        _this2 = this;\n\n    var _props = this.props,\n        className = _props.className,\n        hasIcon = _props.hasIcon,\n        children = _props.children,\n        header = _props.header,\n        footer = _props.footer,\n        indentSize = _props.indentSize,\n        multipleCol = _props.multipleCol,\n        direction = _props.direction,\n        others = _objectWithoutProperties(_props, ['className', 'hasIcon', 'children', 'header', 'footer', 'indentSize', 'multipleCol', 'direction']),\n        _state = this.state,\n        selectedKeys = _state.selectedKeys,\n        openKeys = _state.openKeys,\n        focusedKey = _state.focusedKey,\n        prefix = this.getPrefix(),\n        cls = (0, _classnames3['default'])((_classnames = {}, _defineProperty(_classnames, prefix + 'menu', true), _defineProperty(_classnames, 'multiple-col', multipleCol), _defineProperty(_classnames, prefix + 'menu-has-icon', hasIcon), _defineProperty(_classnames, direction, direction), _defineProperty(_classnames, className, className), _classnames)),\n        hasSubMenu = (Children.toArray(children).some(function (child) {\n      var type = child.type;\n      return type._subMenu;\n    }) || this.props.hasSubMenu) && direction !== 'hoz';\n\n    this.childrenMeta = [];\n    var contentChildren = Children.map(children, function (child, index) {\n      if (child) {\n        var _key = child.props.index || child.key;\n\n        if (typeof _key === 'undefined' || _key === null) {\n          _key = index.toString();\n        }\n\n        return _react2['default'].cloneElement(child, {\n          ref: _key,\n          index: _key,\n          parent: _this2,\n          indentSize: hasSubMenu && indentSize ? indentSize : null,\n          hasIcon: hasIcon,\n          selectedKeys: selectedKeys,\n          focusedKey: focusedKey,\n          openKeys: openKeys,\n          direction: direction\n        });\n      }\n    });\n    others = (0, _nextUtil.pickAttrs)(others);\n\n    var root = _react2['default'].createElement('div', _extends({\n      tabIndex: 0\n    }, others, {\n      className: cls,\n      onMouseLeave: this.onMouseLeave\n    }), header ? _react2['default'].createElement('div', {\n      className: prefix + 'menu-header'\n    }, header) : null, _react2['default'].createElement('ul', {\n      className: prefix + 'menu-content'\n    }, contentChildren), footer ? _react2['default'].createElement('div', {\n      className: prefix + 'menu-footer'\n    }, footer) : null);\n\n    return this.getKeyNavNode(root);\n  };\n\n  Menu.prototype.onMouseLeave = function onMouseLeave(e) {\n    this.setState({\n      focusedKey: null\n    });\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n  };\n\n  Menu.prototype.onItemClick = function onItemClick(e, index, type, menuInc) {\n    var selectedKeys = this.state.selectedKeys,\n        selectMode = this.props.selectMode,\n        keyIndex = void 0,\n        stateSelectKeys = void 0;\n    selectedKeys = [].concat(_toConsumableArray(selectedKeys));\n\n    if (menuInc.props.__radioItem) {\n      type = 'single';\n    }\n\n    if (menuInc.props.__checkboxItem) {\n      type = 'multiple';\n    } //使用Menu的selectMode\n\n\n    if (typeof selectMode !== 'undefined') {\n      type = selectMode;\n    }\n\n    if (type === 'multiple') {\n      keyIndex = selectedKeys.indexOf(index);\n\n      if (keyIndex === -1) {\n        selectedKeys.push(index);\n      } else {\n        selectedKeys.splice(keyIndex, 1);\n        this.props.onDeselect(index);\n      }\n\n      stateSelectKeys = selectedKeys;\n    } else {\n      selectedKeys = index;\n      stateSelectKeys = [selectedKeys];\n    }\n\n    if (!('focusedKey' in this.props)) {\n      this.setState({\n        focusedKey: index\n      });\n    }\n\n    this.props.onFocus(e, index);\n\n    if (type !== 'click') {\n      if (this.props.shallowSelect && menuInc.context.parentIndex) {\n        stateSelectKeys = [menuInc.context.parentIndex[0]];\n      }\n\n      if (!('selectedKeys' in this.props)) {\n        this.setState({\n          selectedKeys: stateSelectKeys\n        });\n      }\n\n      this.props.onSelect(stateSelectKeys, menuInc, {\n        keyPath: menuInc.context.parentIndex,\n        label: menuInc.context.parentLabel\n      });\n    } else {\n      this.props.onClick(selectedKeys, menuInc, {\n        keyPath: menuInc.context.parentIndex,\n        label: menuInc.context.parentLabel\n      }, e);\n    }\n  };\n\n  Menu.prototype.onSelect = function onSelect(selectedKeys) {\n    var _props2;\n\n    this.setState({\n      selectedKeys: selectedKeys\n    });\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    (_props2 = this.props).onSelect.apply(_props2, [selectedKeys].concat(args));\n  };\n\n  Menu.prototype.onFocus = function onFocus(index) {\n    this.setState({\n      focusedKey: index\n    });\n    this.props.onFocus(index);\n  };\n\n  Menu.prototype.onOpen = function onOpen(openKeys, visible) {\n    var _this3 = this;\n\n    var stateOpenKeys = this.state.openKeys,\n        openMode = this.props.openMode;\n    stateOpenKeys = [].concat(_toConsumableArray(stateOpenKeys));\n\n    if (Array.isArray(openKeys)) {\n      stateOpenKeys = [].concat(_toConsumableArray(openKeys));\n    } else {\n      if (openMode === 'single') {\n        stateOpenKeys = stateOpenKeys.filter(function (key) {\n          // 首先找到跟当前key匹配到的subMenu\n          // 在寻找subMenu下面的子节点的key\n          // 如果当前key是子节点的父节点，则不需要隐藏\n          var subMenu = _this3.getChildrenIncByType(_subMenu2['default']).filter(function (child) {\n            return (child.props.index || child.key) == key;\n          })[0];\n\n          if (subMenu) {\n            var childKeys = subMenu.getChildrenIncByType(_subMenu2['default']).map(function (child) {\n              return child.props.index || child.key;\n            });\n            return childKeys.indexOf(openKeys) > -1;\n          } else {\n            return false;\n          }\n        });\n      }\n\n      var index = stateOpenKeys.indexOf(openKeys);\n\n      if (index === -1 && visible) {\n        stateOpenKeys.push(openKeys);\n      } else if (index !== -1 && !visible) {\n        stateOpenKeys.splice(index, 1);\n      }\n\n      if (!('openKeys' in this.props)) {\n        this.setState({\n          openKeys: stateOpenKeys\n        });\n      }\n\n      this.props.onOpen(stateOpenKeys);\n    }\n  };\n\n  Menu.prototype.componentDidMount = function componentDidMount() {\n    _nextDom.events.on(window, 'blur', this.onKeyNavNodeBlur);\n\n    this.focusChildAddTimeout();\n  };\n\n  Menu.prototype.focusChildAddTimeout = function focusChildAddTimeout() {\n    var _this4 = this; // 让focusKey对应的focusNode获取焦点\n    // 在Overlay中由于节点可能设置了autoFocus，所以要设置比Overlay的autoFocus的功能延时\n    // 要长\n    // 在didMount的时候获取焦点的功能应该放置到使用者去主动调用\n    // 1.0的时候移除该功能，放置到Select或者Dropdown中手动调用\n\n\n    setTimeout(function () {\n      _this4._focusChild();\n    }, 200);\n  };\n\n  Menu.prototype._focusChild = function _focusChild() {\n    var child = this.getCurrentChild();\n\n    if (child) {\n      if (this.props.autoFocus) {\n        var node = child.node;\n        node && node.focus();\n      } else {\n        // Scroll dom to viewport.\n        this.scrollTo(child.node);\n      }\n    }\n  };\n\n  Menu.prototype.componentWillUnmount = function componentWillUnmount() {\n    _nextDom.events.off(window, 'blur', this.onKeyNavNodeBlur);\n\n    if (this._keyNodeBlurTimeout) {\n      clearTimeout(this._keyNodeBlurTimeout);\n    }\n  };\n\n  Menu.prototype.getKeyNavNode = function getKeyNavNode(node) {\n    return _react2['default'].cloneElement(node, {\n      onKeyDown: makeChain(this.onKeyNavNodeKeyDown, node.props.onKeyDown),\n      onFocus: makeChain(this.onKeyNavNodeFocus, node.props.onFocus)\n    });\n  };\n\n  Menu.prototype.onKeyNavNodeKeyDown = function onKeyNavNodeKeyDown(e) {\n    var key = KEY_CODE_MAPS[e.keyCode];\n    var method = this['_on' + key + 'Key'];\n\n    if (method) {\n      method.call(this, e);\n    } else {\n      this._onKeyBoardSearch(e);\n    }\n\n    e.stopPropagation();\n  };\n\n  Menu.prototype.addChildMeta = function addChildMeta(meta) {\n    if (this.childrenMeta.indexOf(meta) === -1) {\n      this.childrenMeta.push(meta);\n    }\n  };\n\n  Menu.prototype.removeChildMeta = function removeChildMeta(meta) {\n    var index = this.childrenMeta.indexOf(meta);\n\n    if (index > -1) {\n      this.childrenMeta.splice(index, 1);\n    }\n  };\n\n  Menu.prototype._onKeyBoardSearch = function _onKeyBoardSearch(e) {\n    var key = String.fromCharCode(e.keyCode).toLowerCase(),\n        children = this.getChildrenMeta(),\n        currentChild = void 0;\n    children.forEach(function (child) {\n      if (typeof child.children === 'string' && child.children.charAt(0).toLowerCase() === key) {\n        if (!currentChild) {\n          currentChild = child;\n        }\n      }\n    });\n    this.focusChild(currentChild);\n  };\n\n  Menu.prototype.onKeyNavNodeFocus = function onKeyNavNodeFocus(e) {\n    if (this.state.focusedKey == null && this.props.autoFocusFirstItem) {\n      this._onDownKey(e);\n    }\n  };\n\n  Menu.prototype._onUpKey = function _onUpKey(e) {\n    var child = void 0;\n\n    if (this.state.focusedKey == null) {\n      child = this._getLastChild();\n    } else {\n      child = this._getPrevChild();\n    }\n\n    this.focusChild(child);\n    e.preventDefault();\n  };\n\n  Menu.prototype._onEnterKey = function _onEnterKey(e) {\n    if (this.props.onKeyNavNodeEnter) {\n      this.props.onKeyNavNodeEnter(e, this.getCurrentChild());\n    }\n  };\n\n  Menu.prototype._onDownKey = function _onDownKey(e) {\n    var child = void 0;\n\n    if (this.state.focusedKey == null) {\n      child = this._getFirstChild();\n    } else {\n      child = this._getNextChild();\n    }\n\n    this.focusChild(child);\n    e.preventDefault();\n  };\n\n  Menu.prototype._onHomeKey = function _onHomeKey() {\n    var child = this._getFirstChild();\n\n    this.focusChild(child);\n  };\n\n  Menu.prototype._onEndKey = function _onEndKey() {\n    var child = this._getLastChild();\n\n    this.focusChild(child);\n  };\n\n  Menu.prototype.focusChild = function focusChild(child) {\n    var _this5 = this;\n\n    if (child) {\n      this.setState({\n        focusedKey: child.index\n      }, function () {\n        _this5._focusChild();\n      });\n    }\n  };\n\n  Menu.prototype.unFocusChild = function unFocusChild(child) {\n    this.setState({\n      focusedKey: null\n    });\n\n    if (child) {\n      var node = child.node;\n      node && node.blur();\n    }\n  };\n\n  Menu.prototype.scrollTo = function scrollTo(node) {\n    if (node) {\n      var rootNode = _reactDom2['default'].findDOMNode(this),\n          rootNodeOffsetTop = getOffset(rootNode).top,\n          scrollTop = rootNode.scrollTop,\n          nodeOffsetTop = getOffset(node).top,\n          rootNodeHeight = rootNode.clientHeight;\n\n      if (nodeOffsetTop + node.clientHeight > rootNodeHeight + rootNodeOffsetTop) {\n        rootNode.scrollTop = scrollTop + (nodeOffsetTop + node.clientHeight) - (rootNodeHeight + rootNodeOffsetTop);\n      } else if (nodeOffsetTop < rootNodeOffsetTop) {\n        rootNode.scrollTop = node.offsetTop;\n      }\n    }\n  };\n\n  Menu.prototype.getChildrenMeta = function getChildrenMeta() {\n    var result = [],\n        children = this.childrenMeta;\n    children.forEach(function (child) {\n      if (!child.disabled) {\n        result.push(child);\n      }\n    });\n    return result;\n  };\n\n  Menu.prototype.getCurrentChild = function getCurrentChild() {\n    var _this6 = this;\n\n    var children = this.getChildrenMeta(),\n        currentChild = void 0;\n    children.forEach(function (child) {\n      if (child.index === _this6.state.focusedKey) {\n        currentChild = child;\n      }\n    });\n    return currentChild;\n  };\n\n  Menu.prototype._getFirstChild = function _getFirstChild() {\n    var children = this.getChildrenMeta();\n    return children[0];\n  };\n  /**\n   * 获取最后一个直系子级\n   * @returns {*}\n   * @private\n   */\n\n\n  Menu.prototype._getLastChild = function _getLastChild() {\n    var children = this.getChildrenMeta();\n    return children[children.length - 1];\n  };\n\n  Menu.prototype._getChildByStep = function _getChildByStep(step) {\n    if (this.state.focusedKey != null) {\n      var children = this.getChildrenMeta(),\n          _key3 = this.state.focusedKey,\n          index = void 0;\n      children.forEach(function (child, i) {\n        if (child.index === _key3) {\n          index = i;\n        }\n      });\n\n      if (index == null) {\n        return children[0];\n      }\n\n      if (step == 1 && index + 1 === children.length) {\n        index = -1;\n      }\n\n      if (step == -1 && index - 1 < 0) {\n        index = children.length;\n      }\n\n      return children[index + step];\n    }\n  };\n  /**\n   * 获取当前子级的下一个子级\n   * @returns {*}\n   * @private\n   */\n\n\n  Menu.prototype._getNextChild = function _getNextChild() {\n    return this._getChildByStep(1);\n  };\n  /**\n   * 获取当前子级的上一个子级\n   * @returns {*}\n   * @private\n   */\n\n\n  Menu.prototype._getPrevChild = function _getPrevChild() {\n    return this._getChildByStep(-1);\n  };\n\n  return Menu;\n}(Component), _class.Item = _menuItem2['default'], _class.SubMenu = _subMenu2['default'], _class._menu = true, _class.propTypes = {\n  /**\n   * 样式类名的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 自定义类名\n   */\n  className: _propTypes2['default'].string,\n\n  /**\n   * 自定义内联样式\n   */\n  style: _propTypes2['default'].object,\n\n  /**\n   * 点击菜单项触发的事件\n   * @param {Array} selectedKeys 点击的菜单项的key\n   * @param {MenuItem} menuItem 当前点击的菜单项的实例\n   * @param {Object} meta 选中菜单项的上下级关系\n   */\n  onClick: _propTypes2['default'].func,\n\n  /**\n   * 当前选中的菜单项, 设置此属性，组件的选中变为受控状态\n   */\n  selectedKeys: _propTypes2['default'].array,\n\n  /**\n   * 初始化选中的菜单项，只在组件初次render的时候生效\n   */\n  defaultSelectedKeys: _propTypes2['default'].array,\n\n  /**\n   * 菜单选择的模式，支持单选和多选\n   */\n  selectMode: _propTypes2['default'].oneOf(['single', 'multiple']),\n\n  /**\n   * 选中/取消选中了任意MenuItem\n   * @param {Array} selectedKeys 选中的菜单的key\n   * @param {MenuItem} menuItem 当前点击的菜单项的实例\n   * @param {Object} meta 选中菜单项的上下级关系\n   */\n  onSelect: _propTypes2['default'].func,\n\n  /**\n   * 取消选中的菜单项\n   * @param {String} selectedKey 取消选中的菜单项的key\n   */\n  onDeselect: _propTypes2['default'].func,\n\n  /**\n   * 如果此属性为true，表明只会选中第一级的菜单\n   */\n  shallowSelect: _propTypes2['default'].bool,\n\n  /**\n   * 当前打开的菜单项，设置此属性，组件的打开变为受控状态\n   */\n  openKeys: _propTypes2['default'].array,\n\n  /**\n   * 初始化打开的菜单项，只在组件初次render的时候生效\n   */\n  defaultOpenKeys: _propTypes2['default'].array,\n\n  /**\n   * 子菜单同时打开模式，是多个还是一个\n   */\n  openMode: _propTypes2['default'].oneOf(['single', 'multiple']),\n\n  /**\n   * 打开子菜单的时候触发的事件\n   * @param {Array} openKeys 打开的子菜单的key\n   */\n  onOpen: _propTypes2['default'].func,\n\n  /**\n   * 级联菜单下面缩进的尺寸\n   */\n  indentSize: _propTypes2['default'].number,\n\n  /**\n   * 配置菜单的头部\n   */\n  header: _propTypes2['default'].any,\n\n  /**\n   * 配置菜单的底部\n   */\n  footer: _propTypes2['default'].any,\n\n  /**\n   * 是否启用多列模式\n   */\n  multipleCol: _propTypes2['default'].bool,\n\n  /**\n   * 是否启用设置焦点功能\n   */\n  autoFocus: _propTypes2['default'].bool,\n\n  /**\n   * 菜单的方向\n   */\n  direction: _propTypes2['default'].oneOf(['ver', 'hoz']),\n  hasIcon: _propTypes2['default'].bool,\n  autoFocusFirstItem: _propTypes2['default'].bool,\n  focusedKey: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])\n}, _class.defaultProps = {\n  prefix: 'next-',\n  onSelect: noop,\n  onDeselect: noop,\n  onOpen: noop,\n  onClick: noop,\n  onFocus: noop,\n  hasIcon: false,\n  defaultSelectedKeys: [],\n  defaultOpenKeys: [],\n  indentSize: 20,\n  openMode: 'multiple',\n  multipleCol: false,\n  autoFocusFirstItem: false,\n  direction: 'ver',\n  autoFocus: true\n}, _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _temp);\nMenu.displayName = 'Menu';\nexports['default'] = Menu;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}