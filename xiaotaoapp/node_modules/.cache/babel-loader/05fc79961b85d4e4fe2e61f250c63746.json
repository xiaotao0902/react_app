{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextOverlay = require('../../../next-overlay/lib/index.js');\n\nvar _nextInput = require('../../../next-input/lib/index.js');\n\nvar _nextInput2 = _interopRequireDefault(_nextInput);\n\nvar _nextIcon = require('../../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextMoment = require('../../../next-moment/lib/index.js');\n\nvar _nextMoment2 = _interopRequireDefault(_nextMoment);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextUtil = require('../../../next-util/lib/index.js');\n\nvar _commonMixin = require('./common-mixin.js');\n\nvar _commonMixin2 = _interopRequireDefault(_commonMixin);\n\nvar _timePickerPanel = require('./time-picker-panel.js');\n\nvar _timePickerPanel2 = _interopRequireDefault(_timePickerPanel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n/** TimePicker */\n\n\nvar TimePicker = (_temp = _class = function (_Component) {\n  _inherits(TimePicker, _Component);\n\n  function TimePicker(props, context) {\n    _classCallCheck(this, TimePicker);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    var normalizeValue = _this.normalizeValue(props.value || props.defaultValue);\n\n    _this.state = {\n      value: normalizeValue,\n      inputValue: _this.parseValue(normalizeValue),\n      inputValueCorrect: normalizeValue || normalizeValue === '',\n      open: props.open || props.defaultOpen\n    };\n    return _this;\n  }\n\n  TimePicker.prototype.componentWillReceiveProps = function componentWillReceiveProps(newProps) {\n    if ('value' in newProps) {\n      var normalizeValue = this.normalizeValue(newProps.value || newProps.defaultValue);\n      this.setState({\n        value: normalizeValue,\n        inputValue: this.parseValue(normalizeValue),\n        inputValueCorrect: normalizeValue || normalizeValue === ''\n      });\n    }\n\n    if ('open' in newProps) {\n      this.setState({\n        open: newProps.open\n      });\n    }\n  };\n\n  TimePicker.prototype.parseValue = function parseValue(value) {\n    if (!value) {\n      return '';\n    }\n\n    return (0, _nextMoment2['default'])(value).isValid() ? (0, _nextMoment2['default'])(value).format(this.props.format) : value;\n  };\n\n  TimePicker.prototype.getStrRegExp = function getStrRegExp(format) {\n    var exactRegExp = [];\n    var fuzzyRegExp = [];\n\n    for (var i = 0; i < format.length; i++) {\n      if (/[a-zA-Z]/.test(format[i])) {\n        exactRegExp.push('[0-9]');\n      } else {\n        exactRegExp.push(format[i]);\n\n        if (fuzzyRegExp.indexOf(format[i]) === -1) {\n          fuzzyRegExp.push(format[i]);\n        }\n      }\n    }\n\n    return {\n      fuzzy: new RegExp('^[0-9' + fuzzyRegExp.join('') + ']{0,' + exactRegExp.length + '}$'),\n      exact: new RegExp('^' + exactRegExp.join('') + '$')\n    };\n  };\n\n  TimePicker.prototype.onOpenChange = function onOpenChange(open) {\n    if (!('open' in this.props)) {\n      this.setState({\n        open: open\n      });\n    }\n\n    this.props.onOpenChange(open);\n  };\n\n  TimePicker.prototype.onChange = function onChange(value) {\n    var formatValue = this.parseValue(value);\n    var nextValue = (0, _nextMoment2['default'])(formatValue, [this.props.format]);\n\n    if (!('value' in this.props)) {\n      this.setState({\n        inputValue: formatValue,\n        value: nextValue\n      });\n    }\n\n    this.props.onChange(new Date(nextValue.valueOf()), formatValue);\n  };\n\n  TimePicker.prototype.onInputChange = function onInputChange(nextInputValue, e) {\n    var format = this.props.format;\n\n    var _getStrRegExp = this.getStrRegExp(format),\n        fuzzy = _getStrRegExp.fuzzy,\n        exact = _getStrRegExp.exact; // 模糊匹配输入值\n\n\n    if (fuzzy.test(nextInputValue)) {\n      this.setState({\n        inputValue: nextInputValue,\n        inputValueCorrect: true\n      });\n    } // 精确匹配以修改值\n\n\n    if (exact.test(nextInputValue)) {\n      var nextValue = (0, _nextMoment2['default'])(nextInputValue, [format]);\n      var isValid = nextValue.isValid() && this.isValid(nextValue);\n\n      if (isValid) {\n        this.onChange(nextValue);\n      } else {\n        this.setState({\n          inputValueCorrect: false\n        });\n      }\n    } // 清空\n\n\n    if (nextInputValue === '') {\n      this.clearValue(e);\n    }\n  };\n\n  TimePicker.prototype.clearValue = function clearValue(e) {\n    e.stopPropagation();\n    this.setState({\n      value: null,\n      inputValue: '',\n      inputValueCorrect: true\n    });\n    this.onOpenChange(false);\n    this.props.onChange(null, '');\n  };\n\n  TimePicker.prototype.render = function render() {\n    var _classNames;\n\n    var _props = this.props,\n        id = _props.id,\n        placeholder = _props.placeholder,\n        style = _props.style,\n        className = _props.className,\n        others = _objectWithoutProperties(_props, ['id', 'placeholder', 'style', 'className']);\n\n    var size = others.size,\n        format = others.format,\n        disabled = others.disabled,\n        locale = others.locale,\n        popupAlign = others.popupAlign,\n        popupOffset = others.popupOffset,\n        popupStyle = others.popupStyle,\n        hasClear = others.hasClear;\n    var _state = this.state,\n        value = _state.value,\n        open = _state.open,\n        inputValue = _state.inputValue,\n        inputValueCorrect = _state.inputValueCorrect;\n    var prefix = this.context.prefix || this.props.prefix;\n    var formatValue = this.parseValue(value);\n    delete others.onChange; // 避免往下透传 onChange\n\n    if (format.indexOf('ss') < 0) {\n      others.showSecond = false;\n    }\n\n    if (format.indexOf('HH') < 0) {\n      others.showHour = false;\n    } // 样式\n\n\n    var triggerCls = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefix + 'time-picker', true), _defineProperty(_classNames, prefix + 'time-picker-size-' + size, size), _defineProperty(_classNames, prefix + 'time-picker-disabled', disabled), _defineProperty(_classNames, className, className), _classNames));\n    var iconSize = {\n      large: 'medium',\n      medium: 'small',\n      small: 'xs'\n    }[size];\n    var inputCls = (0, _classnames2['default'])(_defineProperty({}, 'error', !inputValueCorrect)); // 组件\n\n    var panel = _react2['default'].createElement('div', {\n      className: prefix + 'time-picker-panel-wrapper',\n      style: popupStyle\n    }, _react2['default'].createElement('div', {\n      className: prefix + 'time-picker-input'\n    }, _react2['default'].createElement(_nextInput2['default'], {\n      className: inputCls,\n      disbaled: disabled,\n      size: 'medium',\n      value: inputValue,\n      placeholder: format,\n      onChange: this.onInputChange.bind(this)\n    })), _react2['default'].createElement(_timePickerPanel2['default'], _extends({}, others, {\n      value: value,\n      onChange: this.onChange.bind(this)\n    })));\n\n    var trigger = _react2['default'].createElement('span', _extends({}, (0, _nextUtil.pickAttrs)(others), {\n      id: id,\n      className: triggerCls,\n      style: style\n    }), _react2['default'].createElement(_nextInput2['default'], {\n      placeholder: placeholder || locale.placeholder,\n      disabled: disabled,\n      size: size,\n      value: formatValue\n    }), formatValue && !disabled && hasClear ? _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'delete-filling',\n      size: iconSize,\n      title: locale.clear,\n      onClick: this.clearValue.bind(this)\n    }) : _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'clock',\n      size: iconSize\n    }));\n\n    return _react2['default'].createElement(_nextOverlay.Popup, _extends({}, others, {\n      disabled: disabled,\n      visible: open,\n      align: popupAlign,\n      offset: popupOffset,\n      trigger: trigger,\n      triggerType: 'click',\n      onVisibleChange: this.onOpenChange.bind(this)\n    }), panel);\n  };\n\n  return TimePicker;\n}(_react.Component), _class.propTypes = {\n  /**\n   * 样式的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 输入框提示文案\n   */\n  placeholder: _propTypes2['default'].string,\n\n  /**\n   * 默认时间\n   */\n  defaultValue: _propTypes2['default'].any,\n\n  /**\n   * 时间\n   */\n  value: _propTypes2['default'].any,\n\n  /**\n   * 时间值改变时的回调\n   * @param {String} date 日期值\n   * @param {String} formatDate 格式化后的日期值\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 默认是否展开\n   */\n  defaultOpen: _propTypes2['default'].bool,\n\n  /**\n   * 展开\n   */\n  open: _propTypes2['default'].bool,\n\n  /**\n   * 展开状态改变时的回调\n   * @param {Boolean} open 是否展开\n   */\n  onOpenChange: _propTypes2['default'].func,\n\n  /**\n   * 展示的时间格式，目前只支持 24 小时值\n   */\n  format: _propTypes2['default'].string,\n\n  /**\n   * 禁用全部操作\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * 输入框尺寸\n   */\n  size: _propTypes2['default'].oneOf(['small', 'medium', 'large']),\n\n  /**\n   * 弹层样式\n   */\n  popupStyle: _propTypes2['default'].object,\n\n  /**\n   * 弹层对齐方式\n   */\n  popupAlign: _propTypes2['default'].string,\n\n  /**\n   * 弹层偏移\n   */\n  popupOffset: _propTypes2['default'].array,\n\n  /**\n   * 禁止选择指定分小时\n   * Function() => Array\n   */\n  disabledHours: _propTypes2['default'].func,\n\n  /**\n   * 禁止选择指定分钟\n   * Function() => Array\n   */\n  disabledMinutes: _propTypes2['default'].func,\n\n  /**\n   * 禁止选择部分秒\n   * Function() => Array\n   */\n  disabledSeconds: _propTypes2['default'].func,\n\n  /**\n   * 是否显示清空按钮\n   */\n  hasClear: _propTypes2['default'].bool,\n\n  /**\n   * 自定样式名\n   */\n  className: _propTypes2['default'].string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  format: 'HH:mm:ss',\n  size: 'medium',\n  popupAlign: 'tl tl',\n  popupOffset: [0, 0],\n  hasClear: true,\n  onChange: function onChange() {},\n  onOpenChange: function onOpenChange() {}\n}, _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _temp);\nTimePicker.displayName = 'TimePicker';\n(0, _commonMixin2['default'])(TimePicker);\nexports['default'] = TimePicker;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}