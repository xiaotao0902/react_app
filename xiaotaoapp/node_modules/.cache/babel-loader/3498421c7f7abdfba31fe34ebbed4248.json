{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextOverlay = require('../../next-overlay/lib/index.js');\n\nvar _nextOverlay2 = _interopRequireDefault(_nextOverlay);\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nvar _nextDom = require('../../next-dom/lib/index.js');\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _inner = require('./inner.js');\n\nvar _inner2 = _interopRequireDefault(_inner);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar noop = function noop() {},\n    limitTabRange = _nextUtil.focus.limitTabRange,\n    parseComboOption = function parseComboOption(option) {\n  if (option === true || option === false) {\n    return option;\n  }\n\n  var res = {};\n  option.split(',').forEach(function (o) {\n    var key = o.replace(/^\\s*|\\s*$/g, '');\n    res[key] = true;\n  });\n  return res;\n}; // <Dialog>\n//      <Dialog.Header></Dialog.Header>\n//      <Dialog.Body></Dialog.Body>\n//      <Dialog.Footer></Dialog.Footer>\n// </Dialog>\n\n\nvar Dialog = (_temp = _class = function (_React$Component) {\n  _inherits(Dialog, _React$Component);\n\n  Dialog.prototype.getPrefix = function getPrefix() {\n    return this.context.prefix || this.props.prefix;\n  };\n\n  function Dialog(props, context) {\n    _classCallCheck(this, Dialog);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.onKeyDown = _this.onKeyDown.bind(_this);\n    _this.adjustPosition = _this.adjustPosition.bind(_this);\n    _this.onClose = _this.onClose.bind(_this);\n    _this.onCloseButtonClick = _this.onCloseButtonClick.bind(_this);\n    _this.beforePosition = _this.beforePosition.bind(_this);\n    _this.onWindowResize = _this.onWindowResize.bind(_this);\n    return _this;\n  }\n\n  Dialog.prototype.componentDidMount = function componentDidMount() {\n    _nextDom.events.on(document, 'keydown', this.onKeyDown);\n    /*eslint-disable react/prop-types */\n\n\n    if (!this.props.isFullScreen) {\n      _nextDom.events.on(window, 'resize', this.onWindowResize);\n\n      this.adjustPosition();\n    }\n  };\n\n  Dialog.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (!this.props.isFullScreen) {\n      this.adjustPosition();\n    }\n  };\n\n  Dialog.prototype.componentWillUnmount = function componentWillUnmount() {\n    _nextDom.events.off(document, 'keydown', this.onKeyDown);\n\n    _nextDom.events.off(window, 'resize', this.onWindowResize);\n  };\n\n  Dialog.prototype.onWindowResize = function onWindowResize() {\n    this._hasWindowResize = true;\n  };\n\n  Dialog.prototype.render = function render() {\n    var _classnames;\n    /* eslint-disable no-unused-vars, react/prop-types */\n\n\n    var _props = this.props,\n        prefix = _props.prefix,\n        closable = _props.closable,\n        children = _props.children,\n        className = _props.className,\n        footerAlign = _props.footerAlign,\n        onClose = _props.onClose,\n        style = _props.style,\n        role = _props.role,\n        wrapperClassName = _props.wrapperClassName,\n        align = _props.align,\n        isFullScreen = _props.isFullScreen,\n        others = _objectWithoutProperties(_props, ['prefix', 'closable', 'children', 'className', 'footerAlign', 'onClose', 'style', 'role', 'wrapperClassName', 'align', 'isFullScreen']),\n        props = _extends({}, others, this.mapClosableToConfig(closable));\n\n    delete props.closable;\n    var prefixCls = this.getPrefix();\n    var wrapperClassNameMix = (0, _classnames3['default'])((_classnames = {}, _defineProperty(_classnames, prefixCls + 'dialog-wrapper', true), _defineProperty(_classnames, wrapperClassName, wrapperClassName), _classnames));\n    props.wrapperClassName = wrapperClassNameMix;\n    others = (0, _nextUtil.pickAttrs)(others);\n\n    var dialogInner = _react2['default'].createElement(_inner2['default'], _extends({}, others, {\n      prefix: prefix,\n      onClose: this.onCloseButtonClick,\n      className: className,\n      footerAlign: footerAlign,\n      closable: closable,\n      style: style,\n      role: role,\n      ref: 'inner',\n      'aria-hidden': !this.props.visible\n    }), children);\n\n    var useCss = align === 'cc cc' && isFullScreen;\n    var positionAttrs = {};\n\n    if (!useCss) {\n      positionAttrs = {\n        onPosition: this.adjustPosition,\n        beforePosition: this.beforePosition\n      };\n    }\n\n    return _react2['default'].createElement(_nextOverlay2['default'], _extends({}, props, {\n      prefix: prefix,\n      align: useCss ? false : align,\n      onRequestClose: this.onClose,\n      canCloseByOutSideClick: false,\n      needAdjust: false,\n      disableScroll: true\n    }, positionAttrs, {\n      ref: 'overlay'\n    }), useCss ? _react2['default'].createElement('div', {\n      className: prefixCls + 'dialog-container'\n    }, dialogInner) : dialogInner);\n  };\n\n  Dialog.prototype.onClose = function onClose() {\n    this.props.onClose('fromKeyboard');\n  };\n\n  Dialog.prototype.onCloseButtonClick = function onCloseButtonClick() {\n    var res = this.mapClosableToConfig(this.props.closable);\n\n    if (res.canCloseByCloseClick) {\n      this.props.onClose('fromCloseBtn');\n    }\n  };\n\n  Dialog.prototype.onKeyDown = function onKeyDown(e) {\n    var node = this.refs.overlay.getContentNode();\n\n    if (node) {\n      limitTabRange(node, e);\n    }\n  };\n\n  Dialog.prototype.beforePosition = function beforePosition() {\n    if (this.props.visible) {\n      var content = this.refs.overlay ? this.refs.overlay.getContent() : '';\n\n      if (content) {\n        var body = content.getBody();\n        var node = this.refs.overlay.getContentNode();\n\n        if (this._lastDialogHeight !== node.clientHeight || this._hasWindowResize) {\n          this.revertSize(node, body);\n          this._hasWindowResize = false;\n        }\n      }\n    }\n  };\n\n  Dialog.prototype.adjustPosition = function adjustPosition() {\n    var minMargin = this.props.minMargin;\n\n    if (this.props.visible) {\n      var content = this.refs.overlay ? this.refs.overlay.getContent() : '',\n          dialogHeight = void 0;\n\n      if (content) {\n        var body = content.getBody();\n        var node = this.refs.overlay.getContentNode();\n\n        var top = _nextDom.style.get(node, 'top');\n\n        var height = _nextDom.style.get(node, 'height'),\n            clientHeight = window.innerHeight || document.documentElement.clientHeight;\n\n        if (top <= minMargin) {\n          _nextDom.style.set(node, 'top', minMargin + 'px');\n\n          if (clientHeight <= height + minMargin) {\n            dialogHeight = clientHeight - minMargin * 2;\n            this.adjustSize(node, dialogHeight);\n          } else if (body.scrollHeight === body.clientHeight) {\n            this.revertSize(node, body);\n          }\n        } else if (clientHeight <= height + top) {\n          dialogHeight = clientHeight - top;\n          this.adjustSize(node, dialogHeight);\n        }\n\n        this._lastDialogHeight = node.clientHeight;\n      }\n    }\n  };\n\n  Dialog.prototype.adjustSize = function adjustSize(node, dialogHeight) {\n    var content = this.refs.overlay.getContent(),\n        body = content.getBody(),\n        header = content.getHeader(),\n        footer = content.getFooter();\n    var headerHeight = 0,\n        footerHeight = 0;\n\n    if (header) {\n      headerHeight = _nextDom.style.get(header, 'height');\n    }\n\n    if (footer) {\n      footerHeight = _nextDom.style.get(footer, 'height');\n    }\n\n    var dialogPadding = _nextDom.style.get(node, 'padding-top') + _nextDom.style.get(node, 'padding-bottom'),\n        maxBodyHeight = dialogHeight - headerHeight - footerHeight - dialogPadding;\n\n    if (maxBodyHeight < 0) {\n      maxBodyHeight = 1;\n    }\n\n    _nextDom.style.set(body, {\n      'max-height': maxBodyHeight + 'px',\n      'overflow-y': 'auto'\n    });\n  };\n\n  Dialog.prototype.revertSize = function revertSize(node, body) {\n    _nextDom.style.set(node, 'height', 'auto');\n\n    _nextDom.style.set(body, {\n      'max-height': 'none'\n    });\n  };\n\n  Dialog.prototype.mapClosableToConfig = function mapClosableToConfig(closable) {\n    var res = {},\n        map = ['esc', 'outSide', 'close', 'mask'];\n    closable = parseComboOption(closable);\n    map.forEach(function (o) {\n      var value = closable === true ? true : closable[o] || false;\n      var key = o.charAt(0).toUpperCase() + o.substr(1);\n\n      if (o === 'esc' || o === 'mask') {\n        res['canCloseBy' + key] = value;\n      } else {\n        res['canCloseBy' + key + 'Click'] = value;\n      }\n    });\n    return res;\n  };\n\n  return Dialog;\n}(_react2['default'].Component), _class.propTypes = {\n  prefix: _propTypes2['default'].string,\n  hasMask: _propTypes2['default'].bool,\n  onClose: _propTypes2['default'].func,\n  closable: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].bool]),\n  minMargin: _propTypes2['default'].number\n}, _class.defaultProps = {\n  prefix: 'next-',\n  hasMask: true,\n  animation: {\n    'in': 'fadeInDown',\n    out: 'fadeOutUp'\n  },\n  onClose: noop,\n  closable: 'esc,close',\n  align: 'cc cc',\n  autoFocus: true,\n  minMargin: 40\n}, _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _temp);\nDialog.displayName = 'Dialog';\nexports['default'] = Dialog;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}