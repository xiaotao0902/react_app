{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar makeChain = _nextUtil.func.makeChain;\nvar lastCode = void 0;\n\nvar getCode = function getCode(keyCode) {\n  return Object.keys(_nextUtil.keyCode).find(function (name) {\n    return _nextUtil.keyCode[name] === keyCode;\n  });\n};\n\nexports['default'] = {\n  getKeyBinderElement: function getKeyBinderElement(element) {\n    return _react2['default'].cloneElement(element, {\n      onKeyDown: makeChain(this._onKeyBinderKeyDown.bind(this), element.props.onKeyDown),\n      ref: 'keybinderNode'\n    });\n  },\n  _onKeyBinderKeyDown: function _onKeyBinderKeyDown(e) {\n    var code = void 0,\n        match = void 0;\n    var currentCode = getCode(e.keyCode);\n\n    if (currentCode) {\n      code = currentCode.toLowerCase();\n    } else {\n      code = String.fromCharCode(e.keyCode).toLowerCase();\n    }\n\n    var keyBinders = this.keyBinders;\n\n    if (e.ctrlKey) {\n      match = keyBinders['ctrl+' + code];\n    } else if (e.shiftKey) {\n      match = keyBinders['shift+' + code];\n    } else if (e.altKey) {\n      match = keyBinders['alt+' + code];\n    } else {\n      match = keyBinders[code];\n    }\n\n    if (!match) {\n      if (lastCode) {\n        match = keyBinders[lastCode + ' ' + code];\n      }\n    }\n\n    if (typeof match === 'string') {\n      match = this[match].bind(this);\n    } else if (typeof match === 'function') {\n      match = match.bind(this);\n    }\n\n    if (typeof match === 'function') {\n      match(e);\n    }\n\n    lastCode = code;\n  }\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}