{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n/* eslint-disable react/prop-types, no-unused-vars, eqeqeq, prefer-const */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _nextMenu = require('../../next-menu/lib/index.js');\n\nvar _nextMenu2 = _interopRequireDefault(_nextMenu);\n\nvar _nextInput = require('../../next-input/lib/index.js');\n\nvar _nextInput2 = _interopRequireDefault(_nextInput);\n\nvar _nextIcon = require('../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextDom = require('../../next-dom/lib/index.js');\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nvar _optionGroup = require('./option-group.js');\n\nvar _optionGroup2 = _interopRequireDefault(_optionGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n};\n\nvar escape = function escape(s) {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nvar Base = (_temp = _class = function (_Component) {\n  _inherits(Base, _Component);\n\n  function Base(props, context) {\n    _classCallCheck(this, Base);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    var value = 'value' in props ? props.value : props.defaultValue;\n    _this.state = {\n      value: _this.normalizeValue(value),\n      visible: props.visible || props.defaultVisible\n    };\n    _this._cache = {};\n    ['onOpen', 'afterOpen', 'onSelect', 'onInputSearch', 'onSearch'].forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n\n    _this.cacheDataByValue(_this.state.value);\n\n    _this.oldValue = value;\n    return _this;\n  }\n\n  Base.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var value = void 0;\n\n    if ('value' in nextProps) {\n      value = this.normalizeValue(nextProps.value);\n      this.setState({\n        value: value\n      });\n      this.oldValue = nextProps.value;\n    }\n\n    if ('visible' in nextProps) {\n      this.setState({\n        visible: nextProps.visible\n      });\n    }\n  };\n\n  Base.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (!this.state.visible && this.props.filterLocal) {\n      this.filterValue = '';\n    }\n  };\n\n  Base.prototype.getPrefix = function getPrefix() {\n    return this.context.prefix || this.props.prefix;\n  };\n\n  Base.prototype._syncWidth = function _syncWidth(menu) {\n    var autoWidth = this.props.autoWidth;\n\n    if (autoWidth) {\n      var select = (0, _reactDom.findDOMNode)(this);\n      menu = (0, _reactDom.findDOMNode)(menu);\n\n      if (menu) {\n        var width = select.offsetWidth;\n\n        _nextDom.style.set(menu, 'width', width + 'px'); //We need reposition menu after sync width.\n\n\n        this.forceUpdate();\n      }\n    }\n  };\n\n  Base.prototype._enableScroll = function _enableScroll(menu) {\n    var _props = this.props,\n        prefix = _props.prefix,\n        showSearch = _props.showSearch;\n\n    if (showSearch) {\n      menu = (0, _reactDom.findDOMNode)(menu);\n\n      if (menu) {\n        // 出现搜索框 + mac + chrome + 高分辨率屏幕（mac pro）+ 出现滚动条 + 有动画播放\n        // 下拉弹层在第一次展开时，会发生展示错位问题\n        // http://gitlab.alibaba-inc.com/next/select/issues/244\n        // 所以 .next-menu-content 默认设置 overflow: hidden;\n        // 打开弹层后，重新设置为 overflow: auto;\n        var menuContent = menu.querySelector('.' + prefix + 'menu-content');\n\n        _nextDom.classList.addClass(menuContent, 'overflow-auto');\n      }\n    }\n  };\n\n  Base.prototype.normalizeValue = function normalizeValue(value) {\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    value = value.filter(function (v) {\n      return v != null;\n    }).map(function (v) {\n      if (_nextUtil.obj.isPlainObject(v)) {\n        return v;\n      }\n\n      return v.toString ? v.toString() : v;\n    });\n    return value;\n  };\n\n  Base.prototype.renderMenu = function renderMenu() {\n    var _this2 = this;\n\n    var dataSource = this.getFilteredDataSource(),\n        flatternDataSource = this.getFlatternDataSource(dataSource),\n        children = this.renderMenuContent(dataSource),\n        showSearch = this.props.showSearch,\n        header = void 0,\n        currentKeys = this.state.value,\n        focusedKeys = flatternDataSource.filter(function (item) {\n      return _this2.state.value.indexOf(item.__key) > -1;\n    }).map(function (item) {\n      return item.__key;\n    }),\n        focusedKey = void 0;\n\n    if (showSearch) {\n      header = _react2['default'].createElement('div', {\n        className: this.getPrefix() + 'select-search'\n      }, _react2['default'].createElement(_nextInput2['default'], {\n        onFocus: stopPropagation,\n        defaultValue: this.filterValue,\n        onChange: this.onInputSearch,\n        onSelect: stopPropagation,\n        onKeyDown: stopPropagation\n      }), _react2['default'].createElement(_nextIcon2['default'], {\n        type: 'search',\n        size: 'small'\n      }));\n    }\n\n    focusedKey = this.lastFocusedKey;\n\n    if (!focusedKey) {\n      focusedKey = focusedKeys[focusedKeys.length - 1];\n    }\n\n    if (!focusedKey && flatternDataSource.length) {\n      focusedKey = flatternDataSource[0].value;\n    }\n\n    return _react2['default'].createElement(_nextMenu2['default'], {\n      selectedKeys: currentKeys,\n      focusedKey: focusedKey,\n      header: header,\n      selectMode: this.props.multiple ? 'multiple' : 'single',\n      onSelect: this.onSelect,\n      autoFocus: !showSearch,\n      className: this.getPrefix() + 'select-menu ' + (showSearch ? 'has-search' : ''),\n      ref: 'menu'\n    }, children);\n  };\n\n  Base.prototype.renderMenuContent = function renderMenuContent(dataSource) {\n    var _this3 = this;\n\n    return dataSource.map(function (option, index) {\n      return _this3.renderMenuItem(option, index);\n    });\n  };\n\n  Base.prototype.renderMenuItem = function renderMenuItem(option, i) {\n    var label = option.label,\n        children = option.children,\n        __key = option.__key,\n        index = option.index,\n        others = _objectWithoutProperties(option, ['label', 'children', '__key', 'index']);\n\n    if (children) {\n      return _react2['default'].createElement(_nextMenu2['default'].Group, _extends({}, others, {\n        label: label,\n        key: i\n      }), this.renderMenuContent(children));\n    } else {\n      return _react2['default'].createElement(_nextMenu2['default'].Item, _extends({}, others, {\n        key: __key\n      }), label);\n    }\n  }; // 获取的是结构化数据源\n\n\n  Base.prototype.getDataSource = function getDataSource(props) {\n    var dataSource = void 0;\n    props = props || this.props;\n\n    if (props.children) {\n      dataSource = this.structorChildren(props.children);\n    } else {\n      dataSource = this.normalizeDataSource(props.dataSource);\n    }\n\n    return dataSource;\n  };\n\n  Base.prototype.structorChildren = function structorChildren(content) {\n    var loop = function loop(children) {\n      var result = [];\n\n      _react.Children.map(children, function (child, index) {\n        var props = _extends({}, child.props),\n            children = [];\n\n        if (child && typeof child.type === 'function' && child.type._typeMark === 'select_option_group') {\n          children = loop(props.children);\n          props.children = children;\n        } else {\n          props.label = props.children;\n          delete props.children;\n        }\n\n        props.__key = props.value != null ? props.value.toString() : props.value;\n        result.push(props);\n      });\n\n      return result;\n    };\n\n    return loop(content);\n  }; // 抹平结构化数据源\n\n\n  Base.prototype.getFlatternDataSource = function getFlatternDataSource(dataSource) {\n    var flatternDataSource = [];\n    loop(dataSource, function (option) {\n      flatternDataSource.push(option);\n    });\n    return flatternDataSource;\n  }; // 使用抹平后的数据源进行过滤\n  // 但是依然要返回结构化数据\n\n\n  Base.prototype.getFilteredDataSource = function getFilteredDataSource() {\n    var _this4 = this;\n\n    var dataSource = this.getDataSource(),\n        filterLocal = this.props.filterLocal,\n        result = [];\n\n    if (this.filterValue && filterLocal) {\n      loop(dataSource, function (option, index, parentIndex) {\n        var filterBy = _this4.props.filterBy;\n\n        if (!filterBy) {\n          filterBy = _this4.filterBy;\n        }\n\n        if (filterBy(_this4.filterValue, option)) {\n          if (typeof parentIndex !== 'undefined') {\n            if (!result[parentIndex]) {\n              var _dataSource$parentInd = dataSource[parentIndex],\n                  children = _dataSource$parentInd.children,\n                  others = _objectWithoutProperties(_dataSource$parentInd, ['children']);\n\n              result[parentIndex] = others;\n            }\n\n            result[parentIndex].children = result[parentIndex].children || [];\n            result[parentIndex].children.push(option);\n          } else {\n            result.push(option);\n          }\n        }\n      });\n    } else {\n      result = dataSource;\n    }\n\n    return result;\n  };\n\n  Base.prototype.normalizeDataSource = function normalizeDataSource(dataSource) {\n    dataSource = dataSource || [];\n    return dataSource.map(function (option, index) {\n      if (!_nextUtil.obj.isPlainObject(option)) {\n        return {\n          label: option,\n          value: option,\n          __key: option\n        };\n      } else {\n        /* eslint-disable eqeqeq */\n        option.__key = option.value != null ? option.value.toString() : option.value;\n\n        if (option.children) {\n          option.children.forEach(function (item, j) {\n            item.__key = item.value.toString();\n          });\n        }\n\n        return option;\n      }\n    });\n  };\n\n  Base.prototype.cacheDataByValue = function cacheDataByValue(value, props) {\n    var _this5 = this;\n\n    var dataSource = this.getFlatternDataSource(this.getDataSource(props));\n    value.forEach(function (v) {\n      dataSource.forEach(function (option) {\n        if (option.__key == v) {\n          _this5._cache[v] = option;\n        }\n      });\n    });\n  };\n\n  Base.prototype.getDataByValue = function getDataByValue(value) {\n    var cache = this._cache;\n    return value.map(function (v) {\n      return cache[v] || v;\n    });\n  };\n\n  Base.prototype.getDisplayByValue = function getDisplayByValue(value) {\n    var _this6 = this;\n\n    var fillProps = this.props.fillProps;\n\n    if (!fillProps) {\n      fillProps = 'label';\n    }\n\n    var label = value.map(function (val, i) {\n      if (_this6._cache[val]) {\n        return _this6._cache[val][fillProps];\n      } else {\n        if (_nextUtil.obj.isPlainObject(val)) {\n          return val[fillProps];\n        }\n\n        return val;\n      }\n    });\n    return label;\n  };\n\n  Base.prototype.onSelect = function onSelect(value, context) {\n    var _props2 = this.props,\n        multiple = _props2.multiple,\n        hiddenSelected = _props2.hiddenSelected,\n        labelInValue = _props2.labelInValue,\n        data = void 0,\n        changeValue = void 0;\n    this.cacheDataByValue(value);\n    data = this.getDataByValue(value).map(function (item) {\n      var option = item;\n\n      if (option) {\n        delete option.__key;\n      }\n\n      return option;\n    });\n    changeValue = data.map(function (item) {\n      return item.value != null ? item.value : item;\n    });\n\n    if (!('value' in this.props)) {\n      this.setState({\n        value: value,\n        inputValue: this.getDisplayByValue(value)\n      });\n    }\n\n    if (!multiple || hiddenSelected) {\n      this.onVisibleChange(false);\n    }\n\n    if (!multiple) {\n      changeValue = changeValue[0];\n      data = data[0];\n    }\n\n    if (this.oldValue !== changeValue || this.isCombobox) {\n      if (labelInValue) {\n        this.props.onChange(data, data);\n      } else {\n        this.props.onChange(changeValue, data);\n      }\n\n      this.oldValue = changeValue;\n    }\n\n    if (this.clearValue) {\n      this.clearValue();\n    }\n\n    if (context) {\n      this.lastFocusedKey = 'index' in context ? context.index : context.props.index;\n    }\n  };\n\n  Base.prototype.onInputSearch = function onInputSearch(value) {\n    this.onSearch(value);\n  };\n\n  Base.prototype.onSearch = function onSearch(value) {\n    this.filterValue = value;\n    this.forceUpdate();\n    this.props.onSearch(value);\n  };\n\n  Base.prototype.filterBy = function filterBy(value, item) {\n    var v = escape(value),\n        regExp = new RegExp('(' + v + ')', 'ig');\n    return regExp.test(item.value) || regExp.test(item.label);\n  };\n\n  Base.prototype.renderLabel = function renderLabel(label, value) {\n    var _this7 = this;\n\n    var multiple = this.props.multiple;\n    return label.map(function (l, i) {\n      if (multiple) {\n        return _react2['default'].createElement('span', {\n          className: _this7.getPrefix() + 'select-inner-item',\n          key: value[i].value || value[i]\n        }, _react2['default'].createElement('label', {\n          className: _this7.getPrefix() + 'select-inner-item-label',\n          title: typeof l === 'string' ? l : null\n        }, l), _react2['default'].createElement('a', {\n          href: 'javascript:;',\n          onClick: _this7.onRemoveClick.bind(_this7, value[i])\n        }, _react2['default'].createElement(_nextIcon2['default'], {\n          type: 'close',\n          size: 'xxs'\n        })));\n      } else {\n        return l;\n      }\n    });\n  };\n\n  Base.prototype.onRemoveClick = function onRemoveClick(val, e) {\n    var value = [].concat(_toConsumableArray(this.state.value)),\n        index = value.indexOf(val),\n        disabled = this.props.disabled;\n\n    if (!disabled) {\n      value.splice(index, 1);\n      this.onSelect(value);\n      e.stopPropagation();\n    }\n  };\n\n  Base.prototype.getIconSize = function getIconSize() {\n    var size = this.props.size,\n        map = {\n      large: 'medium',\n      medium: 'small',\n      small: 'xs'\n    };\n    return map[size];\n  };\n\n  Base.prototype.getArrowType = function getArrowType(visible) {\n    var arrowType = void 0;\n\n    if (visible == null) {\n      visible = this.state.visible;\n    }\n\n    if (visible) {\n      arrowType = 'arrow-up';\n    } else {\n      arrowType = 'arrow-down';\n    }\n\n    return arrowType;\n  };\n\n  Base.prototype.onVisibleChange = function onVisibleChange(visible) {\n    if (!('visible' in this.props)) {\n      this.setState({\n        visible: visible\n      });\n    }\n\n    this.props.onVisibleChange(visible);\n  };\n\n  Base.prototype.hasClear = function hasClear() {\n    return this.props.hasClear && this.state.value.length && !this.props.multiple && !this.props.disabled;\n  };\n\n  Base.prototype.clear = function clear(e) {\n    this.setState({\n      value: [],\n      inputValue: ''\n    });\n    this.props.onChange(null, {});\n    this.oldValue = null;\n    e.stopPropagation();\n  };\n\n  return Base;\n}(_react.Component), _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _temp);\nBase.displayName = 'Base';\n\nfunction loop(dataSource, callback, parentIndex) {\n  dataSource.forEach(function (option, index) {\n    if (option.children) {\n      loop(option.children, callback, index);\n    } else {\n      callback(option, index, parentIndex);\n    }\n  });\n}\n\nexports['default'] = Base;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}