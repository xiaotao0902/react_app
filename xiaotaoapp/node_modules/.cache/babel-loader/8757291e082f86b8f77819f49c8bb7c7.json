{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextUtil = require('../../../next-util/lib/index.js');\n\nvar _request = require('./request.js');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _util = require('../util/index.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar empty = function empty() {};\n/**\n * Upload.Core\n * @description 为了开放基础上传能力，独立向外提供了 Core 模块。使用该模块可以实现基本的上传功能，跟业务 UI 分离，满足业务自定义 UI 的需求\n */\n\n\nvar Html5Uploader = (_temp = _class = function (_Component) {\n  _inherits(Html5Uploader, _Component);\n\n  function Html5Uploader(props) {\n    _classCallCheck(this, Html5Uploader);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.reqs = {};\n    _this.state = {\n      uid: (0, _util.uid)()\n    };\n    /* eslint-disable */\n\n    ['onClick', 'onKeyDown', 'onFileDrop', 'onChange'].map(function (fn) {\n      _this[fn] = _this[fn].bind(_this);\n    });\n    /* eslint-enable */\n\n    return _this;\n  }\n\n  Html5Uploader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.dataTransfer && nextProps.dataTransfer !== this.props.dataTransfer) {\n      this.uploadFiles(nextProps.dataTransfer);\n    }\n  };\n\n  Html5Uploader.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.abort();\n  };\n  /**\n   * 上传文件变化\n   * @param  {SyntheticEvent} e\n   * @return {void}\n   */\n\n\n  Html5Uploader.prototype.onChange = function onChange(e) {\n    var files = e.target.files;\n    this.uploadFiles(files);\n    this.reset();\n  };\n\n  Html5Uploader.prototype.reset = function reset() {\n    this.setState({\n      uid: (0, _util.uid)()\n    });\n  };\n\n  Html5Uploader.prototype.abort = function abort(file) {\n    var reqs = this.reqs;\n\n    if (file) {\n      var _uid = file;\n\n      if (file && file.uid) {\n        _uid = file.uid;\n      }\n\n      if (reqs[_uid]) {\n        reqs[_uid].abort();\n\n        delete reqs[_uid];\n      }\n    } else {\n      Object.keys(reqs).forEach(function (uid) {\n        if (reqs[uid]) {\n          reqs[uid].abort();\n        }\n\n        delete reqs[uid];\n      });\n    }\n  };\n  /**\n   * 点击上传按钮\n   * @return {void}\n   */\n\n\n  Html5Uploader.prototype.onClick = function onClick() {\n    var el = this.refs.file;\n\n    if (!el) {\n      return;\n    }\n\n    el.click();\n    el.value = '';\n  };\n  /**\n   * 键盘事件\n   * @param  {SyntheticEvent} e\n   * @return {void}\n   */\n\n\n  Html5Uploader.prototype.onKeyDown = function onKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.onClick();\n    }\n  };\n  /**\n   * 拖拽\n   * @param  {SyntheticEvent} e\n   * @return {void}\n   */\n\n\n  Html5Uploader.prototype.onFileDrop = function onFileDrop(e) {\n    if (e.type === 'dragover') {\n      return e.preventDefault();\n    }\n\n    var files = e.dataTransfer.files;\n    this.uploadFiles(files);\n    e.preventDefault();\n  };\n  /**\n   * 上传文件列表\n   * @param  {File} files - 文件列表\n   * @return {void}\n   */\n\n\n  Html5Uploader.prototype.uploadFiles = function uploadFiles(files) {\n    var _this2 = this; // TODO: fileList 只是给最大上传个数做控制的, 1.X版本看看是否有其他控制方式\n\n\n    var _props = this.props,\n        limit = _props.limit,\n        fileList = _props.fileList;\n    var len = files.length;\n    var filesArr = Array.prototype.slice.call(files);\n    var filesTemp = []; // 控制最大上传个数\n\n    if (limit && limit > len + fileList.length) {\n      filesTemp = filesArr.slice(0, len);\n    } else if (limit && limit > fileList.length) {\n      filesTemp = filesArr.slice(0, limit - fileList.length);\n    } else if (limit) {\n      filesTemp = [];\n    } else {\n      // 不限制上传个数情况\n      filesTemp = filesArr;\n    }\n\n    if (len > 0) {\n      filesTemp.forEach(function (file) {\n        file.uid = file.uid || (0, _util.uid)();\n\n        _this2.upload(file);\n      });\n    }\n  };\n  /**\n   * 上传文件\n   * @param  {File} file - 文件\n   * @return {void}\n   */\n\n\n  Html5Uploader.prototype.upload = function upload(file) {\n    var _this3 = this;\n\n    var _props2 = this.props,\n        beforeUpload = _props2.beforeUpload,\n        onError = _props2.onError,\n        maxSize = _props2.maxSize,\n        locale = _props2.locale,\n        checkMaxSizeBeforeUpload = _props2.checkMaxSizeBeforeUpload;\n\n    if (checkMaxSizeBeforeUpload && maxSize && file.size && file.size > maxSize) {\n      return onError(new Error(locale.error.maxSize), null, file);\n    }\n\n    if (!beforeUpload) {\n      return this.post(file);\n    }\n\n    var before = beforeUpload(file);\n\n    if (before && before.then) {\n      before.then(function (result) {\n        if (result !== false) {\n          _this3.post(file);\n        }\n      })['catch'](function () {});\n    } else if (before !== false) {\n      this.post(file);\n    } else if (before === false) {\n      file.status = 'error';\n    }\n  };\n\n  Html5Uploader.prototype.resize = function resize(file, cb) {\n    var resize = this.props.resize;\n\n    if (resize && /\\.(png|jpg|jpeg)$/i.test(file.name)) {\n      var imageType = /\\.png$/i.test(file.name) ? 'image/png' : 'image/jpeg';\n      return (0, _util.scaleImage)(file, resize, imageType, cb);\n    }\n\n    cb(file);\n  };\n\n  Html5Uploader.prototype.post = function post(file) {\n    var _this4 = this;\n\n    var _props3 = this.props,\n        action = _props3.action,\n        name = _props3.name,\n        multipart = _props3.multipart,\n        headers = _props3.headers,\n        withCredentials = _props3.withCredentials,\n        _onProgress = _props3.onProgress,\n        _onSuccess = _props3.onSuccess,\n        _onError = _props3.onError,\n        _onAbort = _props3.onAbort;\n    var data = this.props.data || multipart;\n\n    if (typeof data === 'function') {\n      data = data(file);\n    }\n\n    var uid = file.uid;\n    this.resize(file, function (bin) {\n      _this4.reqs[uid] = (0, _request2['default'])({\n        action: action,\n        filename: name,\n        file: file,\n        bin: bin,\n        data: data,\n        headers: headers,\n        withCredentials: withCredentials,\n        onProgress: function onProgress(e) {\n          _onProgress(e, file);\n        },\n        onSuccess: function onSuccess(ret) {\n          delete _this4.reqs[uid];\n\n          _onSuccess(ret, file);\n        },\n        onError: function onError(err, ret) {\n          delete _this4.reqs[uid];\n\n          _onError(err, ret, file);\n        },\n        onAbort: function onAbort(e) {\n          _onAbort(e, file);\n        }\n      });\n    });\n    this.props.onStart([file]);\n  };\n\n  Html5Uploader.prototype.render = function render() {\n    var _props4 = this.props,\n        accept = _props4.accept,\n        multiple = _props4.multiple,\n        children = _props4.children,\n        id = _props4.id,\n        disabled = _props4.disabled,\n        dragable = _props4.dragable,\n        others = _objectWithoutProperties(_props4, ['accept', 'multiple', 'children', 'id', 'disabled', 'dragable']);\n\n    var cleanOthers = (0, _nextUtil.pickAttrs)(others);\n    var events = disabled ? {} : dragable ? {\n      onClick: this.onClick,\n      onKeyDown: this.onKeyDown,\n      onDrop: this.onFileDrop,\n      onDragOver: this.onFileDrop,\n      tabIndex: '0'\n    } : {\n      onClick: this.onClick,\n      onKeyDown: this.onKeyDown,\n      tabIndex: '0'\n    };\n    return _react2['default'].createElement('span', _extends({\n      role: 'upload'\n    }, events, cleanOthers), _react2['default'].createElement('input', {\n      type: 'file',\n      id: id,\n      key: this.state.uid,\n      ref: 'file',\n      style: {\n        display: 'none'\n      },\n      accept: accept,\n      multiple: multiple,\n      onChange: this.onChange,\n      disabled: disabled\n    }), children);\n  };\n\n  return Html5Uploader;\n}(_react.Component), _class.propTypes = {\n  id: _propTypes2['default'].string,\n\n  /**\n   * 可选参数，自定义样式\n   */\n  style: _propTypes2['default'].object,\n\n  /**\n   * 必选参数，上传的地址\n   */\n  action: _propTypes2['default'].string.isRequired,\n  resize: _propTypes2['default'].object,\n\n  /**\n   * 可选参数，传递给服务器的文件参数\n   */\n  name: _propTypes2['default'].string.isRequired,\n\n  /**\n   * 可选参数，是否禁用上传功能\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * 可选参数，是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件\n   */\n  multiple: _propTypes2['default'].bool,\n\n  /**\n   * 可选参数，是否支持拖拽上传，`ie10+` 支持。\n   */\n  dragable: _propTypes2['default'].bool,\n  limit: _propTypes2['default'].number,\n  children: _propTypes2['default'].node,\n  fileList: _propTypes2['default'].array,\n\n  /**\n   * 可选参数，接受上传的文件类型，详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)， [兼容性见](http://caniuse.com/#feat=input-file-accept)\n   */\n  accept: _propTypes2['default'].string,\n\n  /**\n   * 上传额外传参\n   */\n  data: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].func]),\n  multipart: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].func]),\n\n  /**\n   * 可选参数，设置上传的请求头部\n   */\n  headers: _propTypes2['default'].object,\n\n  /**\n   * 可选参数，是否允许请求携带 cookie\n   */\n  withCredentials: _propTypes2['default'].bool,\n\n  /**\n   * 可选参数，上传文件之前的钩子，参数为上传的文件，若返回 `false` 则停止上传\n   */\n  beforeUpload: _propTypes2['default'].func,\n\n  /**\n   * 可选参数，开始上传文件的钩子，参数为上传的文件。如果开启了 `multiple`，参数为文件列表\n   */\n  onStart: _propTypes2['default'].func,\n\n  /**\n   * 可选参数，正在上传文件的钩子，参数为上传的事件以及文件\n   */\n  onProgress: _propTypes2['default'].func,\n\n  /**\n   * 可选参数，上传成功回调函数，参数为请求下响应信息以及文件\n   */\n  onSuccess: _propTypes2['default'].func,\n\n  /**\n   * 可选参数，上传失败回调函数，参数为上传失败的信息、响应信息以及文件\n   */\n  onError: _propTypes2['default'].func,\n\n  /**\n   * 可选参数，中断上传请求回调函数，参数为中断事件以及文件\n   */\n  onAbort: _propTypes2['default'].func,\n  dataTransfer: _propTypes2['default'].object,\n  locale: _propTypes2['default'].object,\n  maxSize: _propTypes2['default'].number,\n  checkMaxSizeBeforeUpload: _propTypes2['default'].bool\n}, _class.defaultProps = {\n  name: 'file',\n  multiple: false,\n  withCredentials: false,\n  beforeUpload: empty,\n  onStart: empty,\n  onProgress: empty,\n  onSuccess: empty,\n  onError: empty,\n  onAbort: empty,\n  maxSize: Infinity,\n  checkMaxSizeBeforeUpload: false,\n  fileList: []\n}, _temp);\nHtml5Uploader.displayName = 'Html5Uploader';\nexports['default'] = Html5Uploader;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}