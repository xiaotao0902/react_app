{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextIcon = require('../../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextMenu = require('../../../next-menu/lib/index.js');\n\nvar _nextMenu2 = _interopRequireDefault(_nextMenu);\n\nvar _helper = require('../util/helper.js');\n\nvar _helper2 = _interopRequireDefault(_helper);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Item = (_temp = _class = function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  function Item(props, context) {\n    _classCallCheck(this, Item);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    var prefix = context.prefix + 'navigation-item';\n    _this.itemClassName = '' + prefix;\n    _this.selectedClassName = prefix + '-selected';\n    _this.leafClassName = prefix + '-leaf-icon';\n    _this.iconClassName = prefix + '-icon';\n    _this.customClassName = prefix + '-custom-icon';\n    _this.textClassName = prefix + '-text';\n    _this.contentClassName = prefix + '-content';\n    _this.childClassName = prefix + '-children';\n    _this.innerClassName = prefix + '-content-inner';\n    _this.menuClassName = prefix + '-children-menu';\n\n    if (context.nestingPath) {\n      _this.nestingPath = context.nestingPath.concat(_this);\n    } else {\n      _this.nestingPath = [_this];\n    }\n\n    _this.createMouseEvent();\n\n    return _this;\n  }\n\n  Item.prototype.getChildContext = function getChildContext() {\n    var context = this;\n    return {\n      nestingPath: context.nestingPath ? context.nestingPath.slice() : []\n    };\n  };\n  /**\n   * 绑定鼠标相关事件;事件类型：click,mouseleave,mousemove,mouseenter\n   * @method createMouseEvent\n   * @return {Object}\n   */\n\n\n  Item.prototype.createMouseEvent = function createMouseEvent() {\n    var _this2 = this;\n\n    if (this.mouseEvent) {\n      return this.mouseEvent;\n    }\n\n    this.mouseEvent = {};\n    ['onClick', 'onMouseLeave', 'onMouseEnter', 'onMouseMove'].forEach(function (e) {\n      var evt = _this2[e],\n          mouseEvent = _this2.mouseEvent || (_this2.mouseEvent = {});\n\n      if (evt) {\n        mouseEvent[e] = evt.bind(_this2);\n      }\n    });\n    return this.mouseEvent;\n  };\n  /**\n   * click默认处理函数;调用顶层navigation onItemClick 方法\n   * @method onClick\n   */\n\n\n  Item.prototype.onClick = function onClick() {\n    var _props = this.props,\n        onClick = _props.onClick,\n        itemid = _props.itemid;\n    var argv = [].slice.call(arguments),\n        context = this.context;\n    argv = [itemid, this].concat(argv);\n    onClick.apply(this, argv);\n    context.onItemClick.apply(context.rootNavigation, argv);\n  }; // onMouseEnter默认处理函数\n  // 调用顶层navigation onItemMouseEnter 方法\n\n\n  Item.prototype.onMouseEnter = function onMouseEnter() {\n    var _props2 = this.props,\n        onMouseEnter = _props2.onMouseEnter,\n        itemid = _props2.itemid;\n    var argv = [].slice.call(arguments),\n        context = this.context;\n    argv = [itemid, this].concat(argv);\n    onMouseEnter.apply(this, [itemid, this].concat(argv));\n    context.onItemMouseEnter.apply(context.rootNavigation, argv);\n  };\n  /**\n   * onMouseMove默认处理函数;调用顶层navigation onItemMouseMove 方法\n   * @method onMouseMove\n   */\n\n\n  Item.prototype.onMouseMove = function onMouseMove() {\n    var _props3 = this.props,\n        onMouseMove = _props3.onMouseMove,\n        itemid = _props3.itemid;\n    var argv = [].slice.call(arguments),\n        context = this.context;\n    argv = [itemid, this].concat(argv);\n    onMouseMove.apply(this, [itemid, this].concat(argv));\n    context.onItemMouseMove.apply(context.rootNavigation, argv);\n  };\n  /**\n   * onMouseLeave默认处理函数;调用顶层navigation onItemMouseLeave 方法\n   * @method onMouseLeave\n   */\n\n\n  Item.prototype.onMouseLeave = function onMouseLeave() {\n    var _props4 = this.props,\n        onMouseLeave = _props4.onMouseLeave,\n        itemid = _props4.itemid;\n    var argv = [].slice.call(arguments),\n        context = this.context;\n    argv = [itemid, this].concat(argv);\n    onMouseLeave.apply(this, [itemid, this].concat(argv));\n    context.onItemMouseLeave.apply(context.rootNavigation, argv);\n  };\n  /**\n   * 如果图片是使用对象传进，则克隆图标\n   * @method onMouseLcloneIconeave\n   * @return {Object}\n   */\n\n\n  Item.prototype.cloneIcon = function cloneIcon(icon, className) {\n    var attr = void 0;\n    attr = {\n      className: className\n    };\n    return _react2['default'].cloneElement(icon, attr);\n  };\n  /**\n   * 渲染自定义图标\n   * @method renderCustomIcon\n   * @return {Object}\n   */\n\n\n  Item.prototype.renderCustomIcon = function renderCustomIcon() {\n    var _classNames;\n\n    var icon = this.props.icon;\n    var classes = void 0,\n        attr = void 0;\n\n    if (icon === undefined) {\n      return undefined;\n    }\n\n    classes = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, this.iconClassName, true), _defineProperty(_classNames, this.customClassName, true), _classNames));\n    attr = {\n      type: icon,\n      ref: 'custom',\n      className: classes\n    };\n    return (typeof icon === 'undefined' ? 'undefined' : _typeof(icon)) === 'object' ? this.cloneIcon(icon, classes) : _react2['default'].createElement(_nextIcon2['default'], attr);\n  };\n  /**\n   * 渲染text文字\n   * @method renderText\n   * @return {Object}\n   */\n\n\n  Item.prototype.renderText = function renderText() {\n    var text = this.props.text;\n\n    if (text === undefined) {\n      return undefined;\n    }\n\n    return _react2['default'].createElement('span', {\n      ref: 'text',\n      className: this.textClassName\n    }, text);\n  };\n  /**\n   * 渲染菜单branch图标\n   * @method renderLeafIcon\n   * @return {Object}\n   */\n\n\n  Item.prototype.renderLeafIcon = function renderLeafIcon() {\n    var _classNames2;\n\n    var _props5 = this.props,\n        hasLeaf = _props5.hasLeaf,\n        leaf = _props5.leaf,\n        context = this.context;\n    hasLeaf = hasLeaf === undefined ? context.hasLeaf : hasLeaf;\n    leaf = leaf || context.leaf;\n\n    var classes = (0, _classnames2['default'])((_classNames2 = {}, _defineProperty(_classNames2, this.iconClassName, true), _defineProperty(_classNames2, this.leafClassName, true), _classNames2)),\n        cmp = _react2['default'].createElement(_nextIcon2['default'], {\n      ref: 'leaf',\n      type: leaf,\n      className: classes\n    });\n\n    if (hasLeaf) {\n      return cmp;\n    }\n  };\n  /**\n   * 判断DOM是否在Item内\n   * @method inItem\n   * @return {Boolean}\n   */\n\n\n  Item.prototype.inItem = function inItem(dom) {\n    var content = this.refs.item,\n        hasCmp = content.compareDocumentPosition,\n        contain = content[hasCmp ? 'compareDocumentPosition' : 'contains'],\n        value = hasCmp ? 20 : true;\n    return dom === content || contain.call(content, dom) === value;\n  };\n  /**\n   * 判断DOM是否在Item Content内\n   * @method inItemContent\n   * @return {Boolean}\n   */\n\n\n  Item.prototype.inItemContent = function inItemContent(dom) {\n    var content = this.refs.itemContent,\n        hasCmp = content.compareDocumentPosition,\n        contain = content[hasCmp ? 'compareDocumentPosition' : 'contains'],\n        value = hasCmp ? 20 : true;\n    return dom === content || contain.call(content, dom) === value;\n  };\n  /**\n   * 渲染主要内容：icon,text,leaf\n   * @method renderLeafIcon\n   * @return {Object}\n   */\n\n\n  Item.prototype.renderContent = function renderContent() {\n    var _props6 = this.props,\n        link = _props6.link,\n        target = _props6.target,\n        title = _props6.title,\n        branchLevel = _props6.branchLevel,\n        container = _props6.container;\n    var Tag = link ? 'a' : 'div',\n        branchPadding = this.context.branchPadding,\n        content = this.props.content,\n        attr = {\n      className: this.innerClassName,\n      href: link\n    },\n        style = void 0;\n    style = {\n      paddingLeft: branchPadding * (branchLevel - 1) + 'px'\n    };\n\n    if (target) {\n      attr.target = target;\n    }\n\n    if (title) {\n      attr.title = title;\n    }\n\n    if (!content) {\n      content = _react2['default'].createElement(Tag, _extends({}, attr, {\n        ref: 'itemContent'\n      }), this.renderCustomIcon(), this.renderText(), this.renderLeafIcon());\n    } else {\n      content = _react2['default'].createElement(Tag, attr, content);\n    }\n\n    if ((typeof container === 'undefined' ? 'undefined' : _typeof(container)) === 'object') {\n      content = _react2['default'].cloneElement(container, null, content);\n    }\n\n    return _react2['default'].createElement('div', {\n      className: this.contentClassName,\n      style: style\n    }, content);\n  };\n  /**\n   * 渲染子组件；跟进不同标识选择不同组件处理；使用不同类名控制\n   * @method renderLeafIcon\n   * @return {Object}\n   */\n\n\n  Item.prototype.renderChildren = function renderChildren() {\n    var _this3 = this;\n\n    var _props7 = this.props,\n        hasChildren = _props7.hasChildren,\n        children = _props7.children;\n    var isStopPropagation = this.props.isStopPropagation,\n        content = [];\n    isStopPropagation = isStopPropagation || this.context.isStopPropagation;\n\n    if (!hasChildren) {\n      return undefined;\n    }\n\n    _react2['default'].Children.forEach(children, function (child, i) {\n      if (child.type === _nextMenu2['default']) {\n        if (isStopPropagation) {\n          child = _this3.handleMenuComponent(child, i);\n        }\n\n        return content.push(child);\n      }\n\n      if (typeof child.type === 'function') {\n        if (child.type.componentMark) {\n          child = _this3.handleNavigationComponent(child, i);\n          return content.push(child);\n        }\n      }\n\n      child = _this3.handleUnknownComponent(child, i);\n      content.push(child);\n    });\n\n    return content;\n  }; // 未知组件类型处理方法\n  // 直接返回\n\n\n  Item.prototype.handleUnknownComponent = function handleUnknownComponent(child, i) {\n    return _react2['default'].createElement('div', {\n      className: this.unknowsClassName,\n      key: i\n    }, child);\n  }; // 嵌套组件类型\n\n\n  Item.prototype.handleNavigationComponent = function handleNavigationComponent(child, i) {\n    return _react2['default'].createElement('div', {\n      className: this.childClassName,\n      key: i\n    }, child);\n  }; // 针对菜单组件处理方法\n  // 根据是否有事件冒泡阻止，注入onClick处理\n\n\n  Item.prototype.handleMenuComponent = function handleMenuComponent(child, i) {\n    var _this4 = this;\n\n    var handlers = {},\n        some = [].some;\n    ['onClick'].forEach(function (type) {\n      var refsHandler = child.props[type];\n      var handler = void 0;\n\n      handler = function handler(key, item, e, r) {\n        var argv = getEventTarget(key, item, e, r);\n\n        if (argv) {\n          if (_this4.inItem(argv.target)) {\n            _this4[type](argv);\n          }\n\n          argv.stopPropagation();\n        }\n      };\n\n      if (refsHandler) {\n        handler = function (key, item, e, r) {\n          var argv = getEventTarget(key, item, e, r);\n          refsHandler.apply(child.props, arguments);\n\n          if (argv) {\n            if (this.inItem(argv.target)) {\n              this[type](argv);\n            }\n\n            argv.stopPropagation();\n          }\n        }.bind(_this4);\n      }\n\n      handlers[type] = handler;\n    });\n\n    function getEventTarget() {\n      var ret = void 0;\n\n      if (some.call(arguments, function (argv) {\n        if ((typeof argv === 'undefined' ? 'undefined' : _typeof(argv)) === 'object') {\n          if (argv.target) {\n            return argv.target.nodeType === undefined ? false : ret = argv;\n          }\n        }\n      })) {\n        return ret;\n      }\n    }\n\n    return _react2['default'].createElement('div', {\n      className: this.menuClassName,\n      key: i\n    }, _react2['default'].cloneElement(child, handlers));\n  };\n\n  Item.prototype.render = function render(clsName) {\n    var _classNames3;\n\n    var _props8 = this.props,\n        className = _props8.className,\n        style = _props8.style;\n    var classes = void 0;\n    classes = (0, _classnames2['default'])((_classNames3 = {}, _defineProperty(_classNames3, this.itemClassName, true), _defineProperty(_classNames3, clsName, !!clsName), _defineProperty(_classNames3, className, !!className), _classNames3));\n    return _react2['default'].createElement('li', _extends({\n      ref: 'item'\n    }, this.mouseEvent, {\n      className: classes,\n      style: style\n    }), this.renderContent(), this.renderChildren());\n  };\n\n  return Item;\n}(_react2['default'].Component), _class.contextTypes = _helper2['default'].propTypes, _class.propTypes = _helper2['default'].propTypes, _class.childContextTypes = {}, _class.componentMark = 'item', _temp);\nItem.displayName = 'Item';\nexports['default'] = Item;\nItem.propTypes.nestingPath = _propTypes2['default'].array;\nItem.contextTypes.nestingPath = _propTypes2['default'].array;\nItem.childContextTypes.nestingPath = _propTypes2['default'].array;\nItem.defaultProps = {\n  selectedStyle: true,\n  hasLeaf: true,\n  isStopPropagation: true\n};\n['onClick', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onSelect', 'onFold', 'onUnFold'].forEach(function (name) {\n  var defaultProps = Item.defaultProps || (Item.defaultProps = {});\n  defaultProps[name] = _helper2['default'].empty;\n});\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}