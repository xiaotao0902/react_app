{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _item = require('./item.js');\n\nvar _item2 = _interopRequireDefault(_item);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Normal = function (_Item) {\n  _inherits(Normal, _Item);\n\n  function Normal(props, context) {\n    _classCallCheck(this, Normal);\n\n    var _this = _possibleConstructorReturn(this, _Item.call(this, props, context));\n\n    _this.activeDirectionClassName = context.prefix + 'navigation-item-selected';\n    return _this;\n  }\n\n  Normal.prototype.onClick = function onClick() {\n    var _props = this.props,\n        onClick = _props.onClick,\n        onSelect = _props.onSelect,\n        selected = _props.selected,\n        selectedStyle = _props.selectedStyle,\n        itemid = _props.itemid;\n    var context = this.context,\n        argv = [itemid, this].concat([].slice.call(arguments));\n    argv.splice(2, 0, this);\n    onClick.apply(this, argv);\n    context.onItemClick.apply(context.rootNavigation, argv);\n\n    if (selected) {\n      return this;\n    }\n\n    onSelect.apply(this, argv);\n\n    if (selectedStyle) {\n      context.onItemSelect.apply(context.rootNavigation, argv);\n    }\n  };\n\n  Normal.prototype.render = function render() {\n    var _classNames;\n\n    var _props2 = this.props,\n        selected = _props2.selected,\n        activeDirection = _props2.activeDirection,\n        context = this.context,\n        classes = void 0,\n        activeClassName = void 0;\n    activeDirection = activeDirection || context.activeDirection;\n    activeClassName = this.activeDirectionClassName + '-' + activeDirection;\n    classes = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, this.selectedClassName, selected), _defineProperty(_classNames, activeClassName, selected && activeDirection), _classNames));\n    return _Item.prototype.render.call(this, classes);\n  };\n\n  return Normal;\n}(_item2['default']);\n\nexports['default'] = Normal;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}