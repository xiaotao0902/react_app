{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _navigation = require('./navigation.js');\n\nvar _navigation2 = _interopRequireDefault(_navigation);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Slip = function (_Navigation) {\n  _inherits(Slip, _Navigation);\n\n  function Slip(props, context) {\n    _classCallCheck(this, Slip);\n\n    var _this = _possibleConstructorReturn(this, _Navigation.call(this, props, context));\n\n    var prefix = context.prefix;\n    prefix = (prefix || props.prefix) + 'navigation';\n    _this.containerClassName = prefix + '-slip-container';\n    _this.mainClassName = prefix + '-slip-main';\n    _this.selectedClassName = prefix + '-slip-selected';\n    _this.state.content = null;\n    return _this;\n  }\n\n  Slip.prototype.setContent = function setContent(content) {\n    this.setState({\n      content: content\n    });\n  };\n\n  Slip.prototype.onMainMouseLeave = function onMainMouseLeave() {\n    this.setState({\n      selectedKey: null,\n      content: null\n    });\n  };\n\n  Slip.prototype.onItemSelect = function onItemSelect(itemid, item) {\n    var onSelect = this.props.onSelect;\n    var content = item.props.childrenContent,\n        root = this.context.rootNavigation;\n    this.setState({\n      selectedKey: itemid,\n      content: content\n    });\n    onSelect.apply(this, arguments);\n\n    if (root) {\n      root.props.onSelect.apply(root, arguments);\n    }\n  };\n\n  Slip.prototype.onItemMouseEnter = function onItemMouseEnter(itemid) {\n    var context = this.context.rootNavigation || this,\n        argv = [].slice.call(arguments);\n    argv.splice(2, 0, this);\n\n    _Navigation.prototype.onItemMouseEnter.apply(this, argv);\n\n    if (itemid === this.state.selectedKey) {\n      return this;\n    }\n\n    context.onItemSelect.apply(this, argv);\n  };\n\n  Slip.prototype.onItemMouseLeave = function onItemMouseLeave() {\n    var argv = [].slice.call(arguments);\n    argv.splice(2, 0, this);\n    this.props.onMouseMove.apply(this, argv);\n  };\n  /**\n   * 克隆item属性数据;根据状态处理props对应的值\n   * @method cloneChildProperty\n   * @return {Object}\n   */\n\n\n  Slip.prototype.cloneChildProperty = function cloneChildProperty(child, key) {\n    var state = void 0,\n        isMount = this.isMount;\n    state = this.state;\n\n    if (!isMount) {\n      if (child.props.selected) {\n        state.selectedKey = key;\n      }\n    }\n\n    return {\n      key: key,\n      itemid: key,\n      childrenContent: child.props.children,\n      selected: !isMount ? child.props.selected : key === state.selectedKey,\n      hasChildren: child.props.children ? this.context.type || this.props.type : undefined\n    };\n  };\n  /**\n   * 克隆container\n   * @method cloneContainer\n   * @return {Object}\n   */\n\n\n  Slip.prototype.cloneContainer = function cloneContainer() {\n    var _classNames;\n\n    var container = this.props.container;\n    var classes = void 0;\n\n    if (!container) {\n      return undefined;\n    }\n\n    classes = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, this.containerClassName, true), _defineProperty(_classNames, container.props.className, !!container.props.className), _classNames));\n    return _react2['default'].cloneElement(container, {\n      className: classes\n    }, this.state.content);\n  };\n  /**\n   * 渲染container\n   * @method renderContainer\n   * @return {Object}\n   */\n\n\n  Slip.prototype.renderContainer = function renderContainer() {\n    var container = this.cloneContainer();\n\n    if (container) {\n      return container;\n    }\n\n    return _react2['default'].createElement('div', {\n      className: this.containerClassName\n    }, this.state.content);\n  };\n\n  Slip.prototype.render = function render() {\n    var _classNames2;\n\n    var classes = void 0,\n        eventsBind = void 0;\n    eventsBind = {\n      onMouseLeave: this.onMainMouseLeave.bind(this)\n    };\n    classes = (0, _classnames2['default'])((_classNames2 = {}, _defineProperty(_classNames2, this.mainClassName, true), _defineProperty(_classNames2, this.selectedClassName, !!this.state.selectedKey), _classNames2));\n    return _react2['default'].createElement('div', _extends({\n      style: this.props.style,\n      className: classes\n    }, eventsBind), _Navigation.prototype.render.call(this), this.renderContainer());\n  };\n\n  return Slip;\n}(_navigation2['default']);\n\nexports['default'] = Slip;\nSlip.defaultProps.type = 'slip';\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}