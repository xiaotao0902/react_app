{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _keyCode = require('./key-code.js');\n\nvar _keyCode2 = _interopRequireDefault(_keyCode);\n\nvar _nav = require('./nav.js');\n\nvar _nav2 = _interopRequireDefault(_nav);\n\nvar _utils = require('./utils.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nfunction noop() {}\n\nvar Tabs = (_temp = _class = function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs(props, context) {\n    _classCallCheck(this, Tabs);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.state = {\n      activeKey: _this._getDefaultActiveKey(props),\n      contentHeight: 0\n    };\n    return _this;\n  }\n\n  Tabs.prototype.componentDidMount = function componentDidMount() {\n    this._setContentHeight(this.props);\n  };\n\n  Tabs.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('activeKey' in nextProps) {\n      var newActiveKey = nextProps.activeKey;\n      /* eslint-disable eqeqeq */\n\n      if (newActiveKey != undefined) {\n        this.setState({\n          activeKey: newActiveKey\n        });\n      }\n    }\n\n    if ('tabPosition' in nextProps && nextProps.tabPosition !== this.props.tabPosition) {\n      this._setContentHeight(nextProps);\n    }\n  };\n\n  Tabs.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._setContentHeight(this.props);\n  };\n\n  Tabs.prototype.onNavKeyDown = function onNavKeyDown(e) {\n    var eventKeyCode = e.keyCode;\n\n    if (eventKeyCode >= _keyCode2['default'].LEFT && eventKeyCode <= _keyCode2['default'].DOWN) {\n      e.preventDefault();\n    }\n\n    if (eventKeyCode === _keyCode2['default'].RIGHT || eventKeyCode === _keyCode2['default'].DOWN) {\n      var nextKey = this._getNextActiveKey(true);\n\n      this.handleUserBehavior(this.props.triggerType, nextKey);\n    } else if (eventKeyCode === _keyCode2['default'].LEFT || eventKeyCode === _keyCode2['default'].UP) {\n      var previousKey = this._getNextActiveKey(false);\n\n      this.handleUserBehavior(this.props.triggerType, previousKey);\n    }\n  };\n\n  Tabs.prototype.handleUserBehavior = function handleUserBehavior(eventType, key) {\n    var triggerType = this.props.triggerType;\n\n    if (triggerType === eventType) {\n      this._setActiveKey(key);\n\n      if (this.state.activeKey !== key) {\n        this.props.onChange(key);\n      }\n    }\n  }; // 设置 content 的最小高度\n\n\n  Tabs.prototype._setContentHeight = function _setContentHeight(_ref) {\n    var tabPosition = _ref.tabPosition,\n        contentStyle = _ref.contentStyle;\n    var contentHeight = (0, _utils.getHeight)(this.tabContent);\n\n    if ((tabPosition === 'left' || tabPosition === 'right') && !contentStyle.minHeight) {\n      var navHeight = (0, _utils.getHeight)(_reactDom2['default'].findDOMNode(this.tabNav));\n      this.tabContent.style.minHeight = navHeight + 'px';\n    }\n\n    if (this.state.contentHeight !== contentHeight) {\n      this.setState({\n        contentHeight: contentHeight\n      });\n    }\n  };\n\n  Tabs.prototype._setActiveKey = function _setActiveKey(key) {\n    var currentActiveKey = this.state.activeKey;\n\n    if (currentActiveKey === key || 'activeKey' in this.props) {\n      return;\n    }\n\n    if (!currentActiveKey) {\n      this.setState({\n        activeKey: key\n      });\n    } else {\n      var _getIndexPair2 = this._getIndexPair(this.props, currentActiveKey, key),\n          currentIndex = _getIndexPair2.currentIndex,\n          nextIndex = _getIndexPair2.nextIndex;\n\n      var tabMovingDirection = currentIndex > nextIndex ? 'backward' : 'forward';\n      this.setState({\n        activeKey: key,\n        tabMovingDirection: tabMovingDirection\n      });\n    }\n  }; // 获取索引对 currentIndex 和 nextIndex\n\n\n  Tabs.prototype._getIndexPair = function _getIndexPair(props, currentActiveKey, activeKey) {\n    var keys = [];\n\n    _react2['default'].Children.forEach(props.children, function (child) {\n      keys.push(child.key);\n    });\n\n    var currentIndex = keys.indexOf(currentActiveKey);\n    var nextIndex = keys.indexOf(activeKey);\n    return {\n      currentIndex: currentIndex,\n      nextIndex: nextIndex\n    };\n  };\n\n  Tabs.prototype._getDefaultActiveKey = function _getDefaultActiveKey(props) {\n    var activeKey = void 0;\n\n    if ('activeKey' in props) {\n      activeKey = props.activeKey;\n    } else if ('defaultActiveKey' in props) {\n      activeKey = props.defaultActiveKey;\n    } else {\n      _react2['default'].Children.forEach(props.children, function (child) {\n        if (activeKey == undefined && !child.props.disabled) {\n          activeKey = child.key;\n        }\n      });\n    }\n\n    return activeKey;\n  }; // 获取 content 下的 tabpane 列表\n\n\n  Tabs.prototype._getTabPanes = function _getTabPanes() {\n    var activeKey = this.state.activeKey;\n    var _props = this.props,\n        children = _props.children,\n        prefix = _props.prefix,\n        lazyLoad = _props.lazyLoad;\n    var newChildren = [];\n\n    _react2['default'].Children.forEach(children, function (child) {\n      // react 会将整型的 key 转为字符串，而 preact 不会，这里使用 == 判断\n      var active = activeKey == child.key;\n      newChildren.push(_react2['default'].cloneElement(child, {\n        active: active,\n        prefix: prefix,\n        lazyLoad: lazyLoad,\n        // reset tab-content events\n        onClick: noop,\n        onMouseEnter: noop,\n        onMouseLeave: noop\n      }));\n    });\n\n    return newChildren;\n  };\n\n  Tabs.prototype._getNextActiveKey = function _getNextActiveKey(isNext) {\n    var _this2 = this;\n\n    var children = [];\n\n    _react2['default'].Children.forEach(this.props.children, function (child) {\n      if (!child.props.disabled) {\n        if (isNext) {\n          children.push(child);\n        } else {\n          children.unshift(child);\n        }\n      }\n    });\n\n    var length = children.length;\n    var ret = length && children[0].key;\n    children.forEach(function (child, i) {\n      if (child.key === _this2.state.activeKey) {\n        if (i === length - 1) {\n          ret = children[0].key;\n        } else {\n          ret = children[i + 1].key;\n        }\n      }\n    });\n    return ret;\n  };\n\n  Tabs.prototype._contentRefHandler = function _contentRefHandler(ref) {\n    this.tabContent = ref;\n  };\n\n  Tabs.prototype._navRefHandler = function _navRefHandler(ref) {\n    this.tabNav = ref;\n  };\n\n  Tabs.prototype.render = function render() {\n    var _classnames;\n\n    var _props2 = this.props,\n        prefix = _props2.prefix,\n        type = _props2.type,\n        size = _props2.size,\n        animation = _props2.animation,\n        tabPosition = _props2.tabPosition,\n        resDirection = _props2.resDirection,\n        tabBarExtraContent = _props2.tabBarExtraContent,\n        navStyle = _props2.navStyle,\n        contentStyle = _props2.contentStyle,\n        destroyInactiveTabPane = _props2.destroyInactiveTabPane,\n        lazyLoad = _props2.lazyLoad,\n        style = _props2.style,\n        className = _props2.className,\n        children = _props2.children;\n    var state = this.state;\n    var tabPrefix = prefix + 'tabs';\n    var shape = type === 'bar' ? 'strip' : type; // bar 类型 和组件内的 bar 组件有冲突, 这里使用 strip 替代 bar\n\n    var cls = (0, _classnames3['default'])((_classnames = {}, _defineProperty(_classnames, tabPrefix, true), _defineProperty(_classnames, tabPrefix + '-' + shape, shape), _defineProperty(_classnames, tabPrefix + '-' + size, size), _defineProperty(_classnames, tabPrefix + '-vertical', ['left', 'right'].indexOf(tabPosition) >= 0), _defineProperty(_classnames, tabPrefix + '-' + tabPosition, true), _defineProperty(_classnames, className, !!className), _classnames));\n\n    var tabPanes = this._getTabPanes();\n\n    if (destroyInactiveTabPane) {\n      tabPanes = tabPanes.filter(function (panel) {\n        return panel.props.active;\n      });\n    }\n\n    var navProps = {\n      prefix: tabPrefix,\n      activeKey: state.activeKey,\n      type: type,\n      size: size,\n      animation: animation,\n      tabBarExtraContent: tabBarExtraContent,\n      tabPosition: tabPosition,\n      resDirection: resDirection,\n      lazyLoad: lazyLoad,\n      style: navStyle,\n      panels: children,\n      contentHeight: state.contentHeight,\n      onKeyDown: this.onNavKeyDown.bind(this),\n      onTabEvent: this.handleUserBehavior.bind(this)\n    };\n    var contents = [_react2['default'].createElement(_nav2['default'], _extends({}, navProps, {\n      key: 'tab-nav',\n      ref: this._navRefHandler.bind(this)\n    })), _react2['default'].createElement('div', {\n      key: 'tab-content',\n      className: tabPrefix + '-content',\n      style: contentStyle,\n      ref: this._contentRefHandler.bind(this)\n    }, tabPanes)];\n\n    if (tabPosition === 'bottom') {\n      contents.reverse();\n    }\n\n    return _react2['default'].createElement('div', {\n      className: cls,\n      style: style\n    }, contents);\n  };\n\n  return Tabs;\n}(_react2['default'].Component), _class.propTypes = {\n  prefix: _propTypes2['default'].string,\n  activeKey: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),\n  defaultActiveKey: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),\n  type: _propTypes2['default'].oneOf(['bar', 'wrapped', 'wrapped-detached', 'text', 'capsule']),\n  animation: _propTypes2['default'].bool,\n  resDirection: _propTypes2['default'].oneOf(['horizontal', 'vertical']),\n  tabPosition: _propTypes2['default'].oneOf(['top', 'bottom', 'left', 'right']),\n  size: _propTypes2['default'].oneOf(['small', 'medium']),\n  closeable: _propTypes2['default'].bool,\n  triggerType: _propTypes2['default'].oneOf(['hover', 'click']),\n  lazyLoad: _propTypes2['default'].bool,\n\n  /**\n   * 销毁非活跃的 TabPane\n   * TODO: 1.x 重构去掉或重命名\n   */\n  destroyInactiveTabPane: _propTypes2['default'].bool,\n  navStyle: _propTypes2['default'].object,\n  contentStyle: _propTypes2['default'].object,\n  tabBarExtraContent: _propTypes2['default'].node,\n  onChange: _propTypes2['default'].func,\n  onClose: _propTypes2['default'].func,\n  style: _propTypes2['default'].object,\n  className: _propTypes2['default'].string,\n  children: _propTypes2['default'].any\n}, _temp);\nTabs.displayName = 'Tabs';\nexports['default'] = Tabs;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}