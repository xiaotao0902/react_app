{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextAnimate = require('../../next-animate/lib/index.js');\n\nvar _nextAnimate2 = _interopRequireDefault(_nextAnimate);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextIcon = require('../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextUtil = require('../../next-util/lib/index.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar noop = function noop() {};\n\nfunction normalize(number) {\n  if (number > 99) {\n    return '99+';\n  }\n\n  return number;\n}\n/** Tag */\n\n\nvar Tag = (_temp = _class = function (_Component) {\n  _inherits(Tag, _Component);\n\n  function Tag(props, context) {\n    _classCallCheck(this, Tag);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this.state = {\n      selected: props.selected || props.defaultSelected,\n      closed: props.closed || props.defaultClosed,\n      count: props.count ? Number(props.count) : 0,\n      marked: props.marked,\n      clickInteractiveIcon: false // 是否点击了交互型的 Icon\n\n    };\n    return _this;\n  }\n\n  Tag.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('selected' in nextProps && this.props.selected !== nextProps.selected) {\n      this.setState({\n        selected: nextProps.selected\n      });\n    }\n\n    if ('closed' in nextProps) {\n      this.setState({\n        closed: nextProps.closed\n      });\n    }\n  };\n\n  Tag.prototype.onToggle = function onToggle() {\n    var _this2 = this;\n\n    this.setState(function (prevState) {\n      return {\n        marked: !prevState.marked,\n        count: prevState.marked ? --prevState.count : ++prevState.count,\n        clickInteractiveIcon: true\n      };\n    });\n    this.props.onChange(this.state.count); // +/- 的移除动效\n\n    if (this.props.animation) {\n      setTimeout(function () {\n        _this2.setState({\n          clickInteractiveIcon: false\n        });\n      }, 300);\n    }\n  };\n\n  Tag.prototype.onClose = function onClose() {\n    if (!('closed' in this.props)) {\n      this.setState({\n        closed: true\n      });\n    }\n\n    this.props.onClose(this.props.value, this.state.closed);\n    this.props.onChange(this.state.closed);\n  };\n\n  Tag.prototype.onSelect = function onSelect() {\n    var _props = this.props,\n        shape = _props.shape,\n        onSelect = _props.onSelect,\n        onChange = _props.onChange;\n\n    if (shape === 'selectable') {\n      var selected = !this.state.selected;\n\n      if (!('selected' in this.props)) {\n        this.setState({\n          selected: selected\n        });\n      }\n\n      onSelect(selected);\n      onChange(selected);\n    }\n  };\n\n  Tag.prototype.animationInit = function animationInit() {\n    this.props.afterAppear();\n  };\n\n  Tag.prototype.animationEnd = function animationEnd() {\n    this.props.afterClose();\n  };\n\n  Tag.prototype._getClosableSelectable = function _getClosableSelectable(shape) {\n    var closable = false;\n    var selectable = false;\n\n    if (shape === 'selectable') {\n      closable = false;\n      selectable = true;\n    } else if (shape === 'deletable') {\n      closable = true;\n      selectable = false;\n    }\n\n    return {\n      closable: closable,\n      selectable: selectable\n    };\n  };\n\n  Tag.prototype._animatedTag = function _animatedTag(children, animation, style) {\n    if (animation) {\n      return _react2['default'].createElement(_nextAnimate2['default'], {\n        animation: style,\n        afterLeave: this.animationEnd.bind(this),\n        afterAppear: this.animationInit.bind(this)\n      }, children);\n    }\n\n    return children;\n  };\n\n  Tag.prototype.render = function render() {\n    var _classNames; // Hint: 根据设计稿暂时不支持 large ，如果用户取 size = 'large' ，则使用 medium 的样式\n    // Discussion: http://gitlab.alibaba-inc.com/next/tag/issues/10#note_2884687\n\n\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        shape = _props2.shape,\n        type = _props2.type,\n        size = _props2.size,\n        className = _props2.className,\n        disabled = _props2.disabled,\n        children = _props2.children,\n        animation = _props2.animation,\n        others = _objectWithoutProperties(_props2, ['prefixCls', 'shape', 'type', 'size', 'className', 'disabled', 'children', 'animation']);\n\n    var prefix = this.context.prefix || prefixCls || this.props.prefix;\n\n    if (prefixCls) {\n      _nextUtil.log.deprecated('prefixCls', 'prefix', 'Tag');\n    }\n\n    var state = this.state;\n\n    var _getClosableSelectabl = this._getClosableSelectable(shape),\n        closable = _getClosableSelectabl.closable,\n        selectable = _getClosableSelectabl.selectable;\n\n    var classes = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefix + 'tag', true), _defineProperty(_classNames, prefix + 'tag-' + shape, shape), _defineProperty(_classNames, prefix + 'tag-level-' + type, type), _defineProperty(_classNames, prefix + 'tag-' + size, size), _defineProperty(_classNames, prefix + 'tag-deletable', closable), _defineProperty(_classNames, prefix + 'tag-selectable', selectable), _defineProperty(_classNames, 'selected', state.selected), _defineProperty(_classNames, 'disabled', disabled), _defineProperty(_classNames, className, className), _classNames));\n    var body = void 0,\n        tail = void 0;\n\n    if (shape === 'interactive') {\n      body = children;\n      var iconCls = animation && state.clickInteractiveIcon ? 'clicked' : '';\n      tail = _react2['default'].createElement('div', {\n        className: prefix + 'tag-tail'\n      }, state.count ? _react2['default'].createElement('span', {\n        className: prefix + 'tag-number'\n      }, normalize(state.count)) : null, _react2['default'].createElement('span', {\n        className: prefix + 'tag-opt',\n        onClick: this.onToggle.bind(this)\n      }, _react2['default'].createElement(_nextIcon2['default'], {\n        type: state.marked ? 'subtract' : 'add',\n        className: iconCls\n      })));\n    } else {\n      body = [children];\n      state.count && body.push(_react2['default'].createElement('span', {\n        className: prefix + 'tag-number',\n        key: 'tag-tail-number'\n      }, '(', state.count, ')'));\n      tail = closable ? _react2['default'].createElement('div', {\n        className: prefix + 'tag-tail',\n        onClick: this.onClose.bind(this)\n      }, _react2['default'].createElement('span', {\n        className: prefix + 'tag-opt'\n      }, _react2['default'].createElement(_nextIcon2['default'], {\n        type: 'close'\n      }))) : null;\n    }\n\n    var realTag = state.closed ? null : _react2['default'].createElement('div', _extends({}, (0, _nextUtil.pickAttrs)(others), {\n      className: classes,\n      onClick: this.onSelect.bind(this)\n    }), _react2['default'].createElement('div', {\n      className: prefix + 'tag-body'\n    }, _react2['default'].Children.map(body, function (el, i) {\n      return typeof el === 'function' ? _react2['default'].cloneElement(el, {\n        key: i\n      }) : el;\n    })), tail);\n    return this._animatedTag(realTag, animation, prefix + 'tag-zoom');\n  };\n\n  return Tag;\n}(_react.Component), _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _class.propTypes = {\n  /**\n   * 样式前缀\n   */\n  prefix: _propTypes2['default'].string,\n  prefixCls: _propTypes2['default'].string,\n  // for compatibility\n\n  /**\n   * 标签的形态\n   */\n  shape: _propTypes2['default'].oneOf(['selectable', 'deletable', 'interactive', 'link', 'readonly']),\n\n  /**\n   * 标签的类型\n   */\n  type: _propTypes2['default'].oneOf(['normal', 'primary', 'secondary']),\n\n  /**\n   * 标签的尺寸（large 尺寸为兼容表单场景 large = medium）\n   */\n  size: _propTypes2['default'].oneOf(['medium', 'small', 'large']),\n\n  /**\n   * 标签是否禁用\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * 标签附加显示的重复次数\n   */\n  count: _propTypes2['default'].number,\n\n  /**\n   * 选择型标签是否被选中（受控）\n   */\n  selected: _propTypes2['default'].bool,\n\n  /**\n   * 选型型标签默认是否被选中（非受控）\n   */\n  defaultSelected: _propTypes2['default'].bool,\n\n  /**\n   * 可删除标签是否被关闭（受控）\n   */\n  closed: _propTypes2['default'].bool,\n\n  /**\n   * 可删除标签默认是否被关闭（非受控）\n   */\n  defaultClosed: _propTypes2['default'].bool,\n\n  /**\n   * 互动型标签是否被标记过（受控）\n   */\n  marked: _propTypes2['default'].bool,\n\n  /**\n   * 标签暂存的值\n   */\n  value: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].array, _propTypes2['default'].object, _propTypes2['default'].bool]),\n\n  /**\n   * 是否开启动效\n   */\n  animation: _propTypes2['default'].bool,\n\n  /**\n   * 互动型标签被 mark 的数量变化时的回调\n   * @param {Number} count 被标记的次数\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 可删除标签被关闭时的回调\n   * @param {String} value 值\n   * @param {Boolean} closed 是否关闭状态\n   */\n  onClose: _propTypes2['default'].func,\n\n  /**\n   * 可选择标签被选中时的回调\n   * @param {Boolean} selected 是否被选择\n   */\n  onSelect: _propTypes2['default'].func,\n\n  /**\n   * 标签出现后执行的回调\n   * Function() => void\n   */\n  afterAppear: _propTypes2['default'].func,\n\n  /**\n   * 标签关闭后执行的回调\n   * Function() => void\n   */\n  afterClose: _propTypes2['default'].func,\n  className: _propTypes2['default'].string,\n  children: _propTypes2['default'].any\n}, _class.defaultProps = {\n  prefix: 'next-',\n  shape: 'selectable',\n  type: 'normal',\n  size: 'medium',\n  disabled: false,\n  defaultSelected: false,\n  defaultClosed: false,\n  marked: false,\n  animation: true,\n  onChange: noop,\n  onClose: noop,\n  onSelect: noop,\n  afterAppear: noop,\n  afterClose: noop\n}, _temp);\nTag.displayName = 'Tag';\nexports['default'] = Tag;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}