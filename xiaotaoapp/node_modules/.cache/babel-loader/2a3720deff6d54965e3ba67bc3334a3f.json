{"ast":null,"code":"'use strict';\n/*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n\n(function () {\n  // Bail out for browsers that have addListener support\n  if (window.matchMedia && window.matchMedia('all').addListener) {\n    return false;\n  }\n\n  var localMatchMedia = window.matchMedia;\n  var hasMediaQueries = localMatchMedia('only all').matches;\n  var isListening = false;\n  var timeoutID = 0; // setTimeout for debouncing 'handleChange'\n\n  var queries = []; // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n\n  var handleChange = function handleChange() {\n    // Debounce\n    clearTimeout(timeoutID);\n    timeoutID = setTimeout(function () {\n      for (var i = 0, il = queries.length; i < il; i++) {\n        var mql = queries[i].mql,\n            listeners = queries[i].listeners || [],\n            matches = localMatchMedia(mql.media).matches; // Update mql.matches value and call listeners\n        // Fire listeners only if transitioning to or from matched state\n\n        if (matches !== mql.matches) {\n          mql.matches = matches;\n\n          for (var j = 0, jl = listeners.length; j < jl; j++) {\n            listeners[j].call(window, mql);\n          }\n        }\n      }\n    }, 30);\n  };\n\n  window.matchMedia = function (media) {\n    var mql = localMatchMedia(media);\n    var listeners = [];\n    var index = 0;\n\n    mql.addListener = function (listener) {\n      // Changes would not occur to css media type so return now (Affects IE <= 8)\n      if (!hasMediaQueries) {\n        return;\n      } // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n      // There should only ever be 1 resize listener running for performance\n\n\n      if (!isListening) {\n        isListening = true;\n        window.addEventListener('resize', handleChange, true);\n      } // Push object only if it has not been pushed already\n\n\n      if (index === 0) {\n        index = queries.push({\n          mql: mql,\n          listeners: listeners\n        });\n      }\n\n      listeners.push(listener);\n    };\n\n    mql.removeListener = function (listener) {\n      for (var i = 0, il = listeners.length; i < il; i++) {\n        if (listeners[i] === listener) {\n          listeners.splice(i, 1);\n        }\n      }\n    };\n\n    return mql;\n  };\n})();","map":null,"metadata":{},"sourceType":"script"}