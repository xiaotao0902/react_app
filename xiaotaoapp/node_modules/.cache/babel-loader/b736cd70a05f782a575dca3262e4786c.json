{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames6 = require('classnames');\n\nvar _classnames7 = _interopRequireDefault(_classnames6);\n\nvar _nextIcon = require('../../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextDropdown = require('../../../next-dropdown/lib/index.js');\n\nvar _nextDropdown2 = _interopRequireDefault(_nextDropdown);\n\nvar _nextMenu = require('../../../next-menu/lib/index.js');\n\nvar _nextMenu2 = _interopRequireDefault(_nextMenu);\n\nvar _nextAnimate = require('../../../next-animate/lib/index.js');\n\nvar _nextAnimate2 = _interopRequireDefault(_nextAnimate);\n\nvar _nextDom = require('../../../next-dom/lib/index.js');\n\nvar _nextDom2 = _interopRequireDefault(_nextDom);\n\nvar _nextUtil = require('../../../next-util/lib/index.js');\n\nvar _nextUtil2 = _interopRequireDefault(_nextUtil);\n\nvar _utils = require('./utils.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar tabTriggerEvents = {\n  CLICK: 'click',\n  HOVER: 'hover'\n};\n\nfunction noop() {}\n\nvar Nav = (_temp = _class = function (_React$Component) {\n  _inherits(Nav, _React$Component);\n\n  function Nav(props, context) {\n    _classCallCheck(this, Nav);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this._navRefHandler = function (ref) {\n      _this.nav = (0, _reactDom.findDOMNode)(ref);\n    };\n\n    _this._activeTabRefHandler = function (ref) {\n      _this.activeTab = ref;\n    };\n\n    _this.onPrevClick = function () {\n      var navWrapNodeWH = _this._getOffsetWH(_this.navWrap);\n\n      _this._setOffset(_this.state.offset + navWrapNodeWH);\n    };\n\n    _this.onNextClick = function () {\n      var navWrapNodeWH = _this._getOffsetWH(_this.navWrap);\n\n      _this._setOffset(_this.state.offset - navWrapNodeWH);\n    };\n\n    _this.handleWindowResized = function () {\n      /* istanbul ignore if */\n      if (_this.updateTimer) {\n        clearTimeout(_this.updateTimer);\n      }\n      /* istanbul ignore next */\n\n\n      _this.updateTimer = setTimeout(function () {\n        _this._update(_this.props);\n\n        _this._getDropdownItems(_this.props);\n\n        _this._setupStylesForExtraContent(_this.props);\n      }, 100);\n    };\n\n    _this.state = {\n      next: false,\n      prev: false,\n      offset: 0,\n      dropdownTabs: []\n    };\n    return _this;\n  }\n\n  Nav.prototype.componentDidMount = function componentDidMount() {\n    this._getDropdownItems(this.props); // 设置下拉菜单\n\n\n    this._setupStylesForExtraContent(this.props);\n\n    _nextDom2['default'].events.on(window, 'resize', this.handleWindowResized);\n  };\n\n  Nav.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _props = this.props,\n        tabPosition = _props.tabPosition,\n        resDirection = _props.resDirection;\n\n    if (nextProps.tabPosition !== tabPosition && nextProps.resDirection !== resDirection) {\n      this._setOffset(0);\n\n      this._update();\n    }\n  };\n\n  Nav.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.resDirection === 'horizontal' && this._isNextPrevShown(this.state) !== this._isNextPrevShown(prevState)) {\n      this._scrollToActiveTab();\n    }\n\n    if (this.props.resDirection === 'vertical' && prevProps.panels && this.props.panels && prevProps.panels.length !== this.props.panels.length) {\n      this._getDropdownItems(this.props);\n    }\n\n    this._update();\n  };\n\n  Nav.prototype.componentWillUnmount = function componentWillUnmount() {\n    _nextDom2['default'].events.off(window, 'resize', this.handleWindowResized);\n  };\n\n  Nav.prototype._update = function _update() {\n    var navNodeWH = this._getOffsetWH(this.nav);\n\n    var navWrapNodeWH = this._getOffsetWH(this.navWrap);\n\n    var minOffset = navWrapNodeWH - navNodeWH;\n    var _state = this.state,\n        next = _state.next,\n        prev = _state.prev,\n        offset = _state.offset;\n\n    if (minOffset >= 0) {\n      next = false;\n\n      this._setOffset(0);\n\n      offset = 0;\n    } else if (minOffset < offset) {\n      next = true;\n    } else {\n      next = false;\n\n      this._setOffset(minOffset);\n\n      offset = minOffset;\n    }\n\n    if (offset < 0) {\n      prev = true;\n    } else {\n      prev = false;\n    }\n\n    this._setNext(next);\n\n    this._setPrev(prev);\n\n    var nextPrev = {\n      next: next,\n      prev: prev\n    };\n    return nextPrev;\n  }; // 如果存在 tabBarExtraContent 则为其设置默认样式，以满足其展示需求\n\n\n  Nav.prototype._setupStylesForExtraContent = function _setupStylesForExtraContent(_ref) {\n    var tabPosition = _ref.tabPosition,\n        contentHeight = _ref.contentHeight,\n        tabBarExtraContent = _ref.tabBarExtraContent;\n\n    if (tabBarExtraContent && !(0, _utils.isIE8)()) {\n      var scrollHeight = (0, _utils.getHeight)(this.navScroll);\n\n      if (tabPosition === 'left' || tabPosition === 'right') {\n        var extraHeight = (0, _utils.getHeight)(this.extra);\n        var newBarHeight = void 0;\n\n        if (contentHeight > scrollHeight + extraHeight) {\n          newBarHeight = contentHeight;\n        } else {\n          newBarHeight = scrollHeight + extraHeight;\n        }\n\n        this.tabBar.style.height = newBarHeight + 'px';\n        this.extra.style.position = 'absolute';\n        this.extra.style.bottom = 0;\n      } else {\n        this.extra.style.float = 'right';\n        this.extra.style.lineHeight = scrollHeight + 'px';\n      }\n    }\n  }; // 获取导航的项目\n\n\n  Nav.prototype._getTabs = function _getTabs() {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        prefix = _props2.prefix,\n        panels = _props2.panels,\n        activeKey = _props2.activeKey;\n    var rst = [];\n\n    _react2['default'].Children.forEach(panels, function (child) {\n      var _classnames;\n      /*eslint-disable eqeqeq*/\n\n\n      var isActive = activeKey == child.key;\n      var cls = (0, _classnames7['default'])((_classnames = {}, _defineProperty(_classnames, prefix + '-tab', true), _defineProperty(_classnames, 'disabled', child.props.disabled), _defineProperty(_classnames, 'active', isActive), _defineProperty(_classnames, child.props.tabClassName, !!child.props.tabClassName), _classnames));\n      var events = {};\n\n      if (!child.props.disabled) {\n        events = {\n          onClick: _this2.onNavItemClick.bind(_this2, child.key, child.props.onClick),\n          onMouseEnter: _this2.onNavItemMouseEnter.bind(_this2, child.key, child.props.onMouseEnter),\n          onMouseLeave: _this2.onNavItemMouseLeave.bind(_this2, child.key, child.props.onMouseLeave)\n        };\n      } // [1.x] itemStyle 废弃，使用 tabStyle 替代\n\n\n      if (child.props.itemStyle) {\n        _nextUtil2['default'].log.deprecated('itemStyle', 'tabStyle', 'TabPane');\n      }\n\n      var tabInnerStyle = child.props.tabStyle || child.props.itemStyle || null;\n      rst.push(_react2['default'].createElement('div', _extends({\n        role: 'tab',\n        key: child.key,\n        ref: isActive ? _this2._activeTabRefHandler : undefined,\n        'aria-disabled': child.props.disabled ? 'true' : 'false',\n        'aria-selected': isActive ? 'true' : 'false',\n        className: cls\n      }, events), _react2['default'].createElement('div', {\n        className: prefix + '-tab-inner',\n        style: tabInnerStyle\n      }, child.props.tab)));\n    });\n\n    return rst;\n  };\n\n  Nav.prototype._getDropdownItems = function _getDropdownItems(_ref2) {\n    var resDirection = _ref2.resDirection,\n        panels = _ref2.panels;\n\n    if (resDirection !== 'vertical') {\n      return;\n    }\n\n    var wrapperWidth = (0, _utils.getWidth)(this.navWrap);\n    var childNodes = this.nav.childNodes;\n    var index = void 0;\n    var total = panels.length;\n    var tabsWidth = 0;\n\n    for (index = 0; index < total; index++) {\n      tabsWidth += childNodes[index].offsetWidth;\n\n      if (tabsWidth > wrapperWidth) {\n        break;\n      }\n    }\n\n    if (index > 1) {\n      this.setState({\n        dropdownTabs: panels.slice(index)\n      });\n    }\n  };\n\n  Nav.prototype._getOffsetWH = function _getOffsetWH(node) {\n    var tabPosition = this.props.tabPosition;\n    var prop = void 0;\n\n    if (tabPosition === 'left' || tabPosition === 'right') {\n      prop = 'offsetHeight';\n    } else {\n      prop = 'offsetWidth';\n    }\n\n    return node[prop];\n  };\n\n  Nav.prototype._getOffsetLT = function _getOffsetLT(node) {\n    var tabPosition = this.props.tabPosition;\n    var prop = void 0;\n\n    if (tabPosition === 'top' || tabPosition === 'bottom') {\n      prop = 'left';\n    } else {\n      prop = 'top';\n    }\n\n    return node.getBoundingClientRect()[prop];\n  }; // 设置 nav 在点击 next/prev 时的偏移\n\n\n  Nav.prototype._setOffset = function _setOffset(offset) {\n    var tabPosition = this.props.tabPosition;\n    var state = this.state;\n    var target = Math.min(0, offset);\n\n    if (state.offset !== target) {\n      this.setState({\n        offset: target\n      });\n    }\n\n    var navOffset = void 0;\n    var transformPropery = (0, _utils.getTransformPropertyName)();\n\n    if (tabPosition === 'left' || tabPosition === 'right') {\n      if (transformPropery) {\n        navOffset = {\n          name: transformPropery,\n          value: 'translate3d(0, ' + target + 'px, 0)'\n        };\n      } else {\n        navOffset = {\n          name: 'top',\n          value: target + 'px'\n        };\n      }\n    } else if (transformPropery) {\n      navOffset = {\n        name: transformPropery,\n        value: 'translate3d(' + target + 'px, 0, 0)'\n      };\n    } else {\n      navOffset = {\n        name: 'top',\n        value: target + 'px'\n      };\n    }\n\n    this.nav.style[navOffset.name] = navOffset.value;\n  };\n\n  Nav.prototype._setNext = function _setNext(v) {\n    if (this.state.next !== v) {\n      this.setState({\n        next: v\n      });\n    }\n  };\n\n  Nav.prototype._setPrev = function _setPrev(v) {\n    if (this.state.prev !== v) {\n      this.setState({\n        prev: v\n      });\n    }\n  };\n\n  Nav.prototype._isNextPrevShown = function _isNextPrevShown(state) {\n    if (state) {\n      return state.next || state.prev;\n    }\n\n    return this.state.next || this.state.prev;\n  };\n\n  Nav.prototype._setNextPrev = function _setNextPrev(nextPrev, callback) {\n    this.setState(nextPrev, callback);\n  };\n\n  Nav.prototype._scrollToActiveTab = function _scrollToActiveTab() {\n    if (this.activeTab) {\n      var activeTabWH = this._getOffsetWH(this.activeTab);\n\n      var navWrapNodeWH = this._getOffsetWH(this.navWrap);\n\n      var offset = this.state.offset;\n\n      var wrapOffset = this._getOffsetLT(this.navWrap);\n\n      var activeTabOffset = this._getOffsetLT(this.activeTab);\n\n      if (wrapOffset > activeTabOffset) {\n        offset += wrapOffset - activeTabOffset;\n\n        this._setOffset(offset);\n      } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {\n        offset -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);\n\n        this._setOffset(offset);\n      }\n    }\n  };\n\n  Nav.prototype._instanceRefHandler = function _instanceRefHandler(attr, ref) {\n    this[attr] = ref;\n  };\n\n  Nav.prototype.onNavItemClick = function onNavItemClick(key, callback, e) {\n    e.stopPropagation();\n    this.props.onTabEvent(tabTriggerEvents.CLICK, key);\n\n    if (callback) {\n      callback(key);\n    }\n  };\n\n  Nav.prototype.onMenuItemClick = function onMenuItemClick(callback, key) {\n    this.props.onTabEvent(tabTriggerEvents.CLICK, key);\n\n    if (callback) {\n      callback(key);\n    }\n  };\n\n  Nav.prototype.onNavItemMouseEnter = function onNavItemMouseEnter(key, callback, e) {\n    e.stopPropagation();\n    this.props.onTabEvent(tabTriggerEvents.HOVER, key);\n\n    if (callback) {\n      callback(key, e);\n    }\n  };\n\n  Nav.prototype.onNavItemMouseLeave = function onNavItemMouseLeave(key, callback, e) {\n    e.stopPropagation();\n\n    if (callback) {\n      callback(key, e);\n    }\n  };\n\n  Nav.prototype._renderDropdownMenus = function _renderDropdownMenus() {\n    var _this3 = this,\n        _classnames2;\n\n    var tabs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if (!tabs.length) {\n      return null;\n    }\n\n    var menus = tabs.map(function (panel) {\n      var selected = panel.key === _this3.props.activeKey;\n      return _react2['default'].createElement(_nextMenu2['default'].Item, {\n        key: panel.key,\n        onClick: _this3.onMenuItemClick.bind(_this3, panel.props.onClick),\n        selected: selected\n      }, panel.props.tab);\n    });\n    var restBtnCls = (0, _classnames7['default'])((_classnames2 = {}, _defineProperty(_classnames2, this.props.prefix + '-tab-down', 1), _defineProperty(_classnames2, 'disabled', !this.state.next), _classnames2));\n\n    var triggerBtn = _react2['default'].createElement('span', {\n      unselectable: 'unselectable',\n      className: restBtnCls\n    }, _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'arrow-down'\n    }));\n\n    return _react2['default'].createElement(_nextDropdown2['default'], {\n      align: 'tr br',\n      triggerType: 'click',\n      trigger: triggerBtn\n    }, _react2['default'].createElement(_nextMenu2['default'], null, menus));\n  };\n\n  Nav.prototype.render = function render() {\n    var _classnames5;\n\n    var _props3 = this.props,\n        prefix = _props3.prefix,\n        resDirection = _props3.resDirection,\n        tabBarExtraContent = _props3.tabBarExtraContent,\n        onKeyDown = _props3.onKeyDown,\n        animation = _props3.animation,\n        style = _props3.style;\n    var state = this.state;\n\n    var tabs = this._getTabs();\n\n    var nextButton = void 0;\n    var prevButton = void 0;\n    var restButton = void 0;\n    var showNextPrev = state.prev || state.next;\n\n    if (resDirection === 'vertical' && state.next) {\n      restButton = this._renderDropdownMenus(state.dropdownTabs);\n      prevButton = null;\n      nextButton = null;\n    } else if (showNextPrev) {\n      var _classnames3, _classnames4;\n\n      var prevBtnCls = (0, _classnames7['default'])((_classnames3 = {}, _defineProperty(_classnames3, prefix + '-tab-prev', 1), _defineProperty(_classnames3, 'disabled', !state.prev), _classnames3));\n      var nextBtnCls = (0, _classnames7['default'])((_classnames4 = {}, _defineProperty(_classnames4, prefix + '-tab-next', 1), _defineProperty(_classnames4, 'disabled', !state.next), _classnames4));\n      prevButton = _react2['default'].createElement('span', {\n        onClick: state.prev ? this.onPrevClick : noop,\n        unselectable: 'unselectable',\n        className: prevBtnCls\n      }, _react2['default'].createElement(_nextIcon2['default'], {\n        type: 'arrow-left'\n      }));\n      nextButton = _react2['default'].createElement('span', {\n        onClick: state.next ? this.onNextClick : noop,\n        unselectable: 'unselectable',\n        className: nextBtnCls\n      }, _react2['default'].createElement(_nextIcon2['default'], {\n        type: 'arrow-right'\n      }));\n      restButton = null;\n    } else {\n      nextButton = null;\n      prevButton = null;\n      restButton = null;\n    }\n\n    var containerCls = (0, _classnames7['default'])((_classnames5 = {}, _defineProperty(_classnames5, prefix + '-nav-container', true), _defineProperty(_classnames5, prefix + '-nav-container-scrolling', showNextPrev), _classnames5));\n    return _react2['default'].createElement('div', {\n      role: 'tablist',\n      className: prefix + '-bar',\n      tabIndex: '0',\n      onKeyDown: onKeyDown,\n      ref: this._instanceRefHandler.bind(this, 'tabBar')\n    }, tabBarExtraContent ? _react2['default'].createElement('div', {\n      className: prefix + '-nav-extra',\n      ref: this._instanceRefHandler.bind(this, 'extra')\n    }, tabBarExtraContent) : null, _react2['default'].createElement('div', {\n      className: containerCls,\n      style: style\n    }, _react2['default'].createElement('div', {\n      className: prefix + '-nav-wrap',\n      ref: this._instanceRefHandler.bind(this, 'navWrap')\n    }, _react2['default'].createElement('div', {\n      className: prefix + '-nav-scroll',\n      ref: this._instanceRefHandler.bind(this, 'navScroll')\n    }, animation ? _react2['default'].createElement(_nextAnimate2['default'], {\n      animation: prefix + '-nav',\n      singleMode: false,\n      component: 'div',\n      className: prefix + '-nav',\n      ref: this._navRefHandler\n    }, tabs) : _react2['default'].createElement('div', {\n      className: prefix + '-nav',\n      ref: this._navRefHandler\n    }, tabs))), prevButton, nextButton, restButton));\n  };\n\n  return Nav;\n}(_react2['default'].Component), _class.propTypes = {\n  animation: _propTypes2['default'].bool,\n  resDirection: _propTypes2['default'].string,\n  tabPosition: _propTypes2['default'].string,\n  tabBarExtraContent: _propTypes2['default'].any,\n  onTabEvent: _propTypes2['default'].func,\n  onKeyDown: _propTypes2['default'].func,\n  panels: _propTypes2['default'].oneOfType([_propTypes2['default'].array, _propTypes2['default'].object]),\n  activeKey: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),\n  prefix: _propTypes2['default'].string,\n  children: _propTypes2['default'].any,\n  style: _propTypes2['default'].object,\n  contentHeight: _propTypes2['default'].number\n}, _temp);\nNav.displayName = 'Nav';\nexports['default'] = Nav;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}