{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp, _initialiseProps;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextIcon = require('../../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextInput = require('../../../next-input/lib/index.js');\n\nvar _nextInput2 = _interopRequireDefault(_nextInput);\n\nvar _nextOverlay = require('../../../next-overlay/lib/index.js');\n\nvar _nextCalendar = require('../../../next-calendar/lib/index.js');\n\nvar _nextTimePicker = require('../../../next-time-picker/lib/index.js');\n\nvar _nextUtil = require('../../../next-util/lib/index.js');\n\nvar _nextMoment = require('../../../next-moment/lib/index.js');\n\nvar _nextMoment2 = _interopRequireDefault(_nextMoment);\n\nvar _nextLocaleProvider = require('../../../next-locale-provider/lib/index.js');\n\nvar _nextLocaleProvider2 = _interopRequireDefault(_nextLocaleProvider);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _quickTool = require('./quick-tool.js');\n\nvar _quickTool2 = _interopRequireDefault(_quickTool);\n\nvar _utils = require('./utils.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nfunction mapInputStringNameToValueName(name) {\n  return {\n    startDateInputStr: 'startValue',\n    startTimeInputStr: 'startValue',\n    endDateInputStr: 'endValue',\n    endTimeInputStr: 'endValue'\n  }[name];\n}\n\nfunction getRangeValue(values, dateFormat, disabledDate) {\n  if (!Array.isArray(values)) {\n    return {\n      startValue: null,\n      endValue: null\n    };\n  }\n\n  var startValue = (0, _utils.toMoment)(values[0], dateFormat, disabledDate);\n  var endValue = (0, _utils.toMoment)(values[1], dateFormat, disabledDate);\n  return {\n    startValue: startValue,\n    endValue: endValue\n  };\n}\n\nvar oldFormatWrapper = function oldFormatWrapper(format) {\n  // 如果用户传的 format 为 function 的话，强制重置，并提醒 format 已被废弃，使用新的 formater 进行替换\n  if ((0, _utils.isFunction)(format)) {\n    return function (date) {\n      return date;\n    };\n  }\n\n  return format;\n};\n/**\n * TODO:\n * 1. 受控与非受控检查\n * 2. dateInputStr/timeInputStr 使用常量隔离\n */\n\n/** DatePicker.RangePicker */\n\n\nvar RangePicker = (_temp = _class = function (_Component) {\n  _inherits(RangePicker, _Component);\n\n  function RangePicker(props, context) {\n    _classCallCheck(this, RangePicker);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    if (props.format) {\n      _nextUtil.log.deprecated('format', 'formater', 'DatePicker.RangePicker');\n    }\n\n    (0, _utils.mixin)(_this, (0, _utils.getFormat)(props.formater, oldFormatWrapper(props.format), props.showTime));\n    var rangeValue = getRangeValue(props.value || props.defaultValue, _this.dateTimeFormat, props.disabledDate);\n    _this.state = _extends({}, rangeValue, {\n      base: props.defaultBase || rangeValue.startValue,\n      mode: 'month',\n      startDateInputStr: '',\n      endDateInputStr: '',\n      startTimeInputStr: '',\n      endTimeInputStr: '',\n      inputing: false,\n      inputingError: false,\n      open: props.open || props.defaultOpen\n    });\n    return _this;\n  }\n\n  RangePicker.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('value' in nextProps) {\n      var showTime = 'showTime' in nextProps ? nextProps.showTime : this.props.showTime;\n      (0, _utils.mixin)(this, (0, _utils.getFormat)(nextProps.formater, oldFormatWrapper(nextProps.format || this.props.format), showTime));\n      var rangeValue = getRangeValue(nextProps.value, this.dateTimeFormat, nextProps.disabledDate || this.props.disabledDate);\n      this.setState(_extends({}, rangeValue, {\n        base: rangeValue.startValue\n      }));\n    }\n\n    if ('showTime' in nextProps) {\n      (0, _utils.mixin)(this, (0, _utils.getFormat)(nextProps.formater, oldFormatWrapper(nextProps.format || this.props.format), nextProps.showTime));\n    }\n\n    if ('open' in nextProps) {\n      this.setState({\n        open: nextProps.open\n      });\n    }\n  };\n\n  RangePicker.prototype.onDateInputChange = function onDateInputChange(stateName, inputString) {\n    if (!('value' in this.props)) {\n      var _setState;\n\n      this.setState((_setState = {}, _defineProperty(_setState, stateName, inputString), _defineProperty(_setState, 'inputing', stateName), _setState));\n    }\n  };\n\n  RangePicker.prototype.onDateInputBlur = function onDateInputBlur(stateName) {\n    var _this2 = this;\n\n    var inputString = this.state[stateName];\n\n    if (this.state.inputing && inputString) {\n      var disabledDate = this.props.disabledDate;\n\n      if (!(0, _utils.isFunction)(this.dateFormat)) {\n        var parsed = (0, _nextMoment2['default'])(inputString, this.dateFormat);\n\n        if (parsed.isValid() && !disabledDate((0, _utils.getCalendarDate)(parsed))) {\n          var _filterObject; // TODO: check showTime.defaultValue\n\n\n          this.setState((0, _utils.filterObject)((_filterObject = {}, _defineProperty(_filterObject, mapInputStringNameToValueName(stateName), parsed), _defineProperty(_filterObject, stateName, ''), _defineProperty(_filterObject, 'base', stateName === 'startDateInputStr' ? parsed : undefined), _defineProperty(_filterObject, 'inputing', false), _defineProperty(_filterObject, 'inputingError', false), _filterObject)), function () {\n            if (stateName === 'startDateInputStr') {\n              _this2.onValueChange(_this2.state.startValue, _this2.state.endValue, 'onStartChange');\n            } else {\n              _this2.onValueChange(_this2.state.startValue, _this2.state.endValue, 'onEndChange');\n            }\n\n            if (_this2.state.startValue && _this2.state.endValue) {\n              _this2.onValueChange(_this2.state.startValue, _this2.state.endValue);\n            }\n          });\n        } else {\n          this.setState({\n            inputingError: stateName\n          });\n        }\n      }\n    }\n  };\n\n  RangePicker.prototype.onTimeInputChange = function onTimeInputChange(stateName, inputString) {\n    if (!('value' in this.props)) {\n      var _setState2;\n\n      this.setState((_setState2 = {}, _defineProperty(_setState2, stateName, inputString), _defineProperty(_setState2, 'inputing', stateName), _setState2));\n    }\n  };\n\n  RangePicker.prototype.onTimeInputBlur = function onTimeInputBlur(stateName) {\n    var _this3 = this;\n\n    var inputString = this.state[stateName];\n\n    if (this.state.inputing && inputString) {\n      if (!(0, _utils.isFunction)(this.timeFormat)) {\n        var parsed = (0, _nextMoment2['default'])(inputString, this.timeFormat);\n\n        if (parsed.isValid()) {\n          var _setState3;\n\n          var targetState = mapInputStringNameToValueName(stateName);\n          var value = this.state[targetState].clone().hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());\n          this.setState((_setState3 = {}, _defineProperty(_setState3, targetState, value), _defineProperty(_setState3, stateName, ''), _defineProperty(_setState3, 'inputing', false), _defineProperty(_setState3, 'inputingError', false), _setState3), function () {\n            if (stateName === 'startTimeInputStr') {\n              _this3.onValueChange(_this3.state.startValue, _this3.state.endValue, 'onStartChange');\n            } else {\n              _this3.onValueChange(_this3.state.startValue, _this3.state.endValue, 'onEndChange');\n            }\n\n            _this3.onValueChange(_this3.state.startValue, _this3.state.endValue);\n          });\n        } else {\n          this.setState({\n            inputingError: stateName\n          });\n        }\n      }\n    }\n  };\n\n  RangePicker.prototype.onOpenChange = function onOpenChange(open) {\n    if (!('open' in this.props)) {\n      this.setState({\n        open: open\n      });\n    }\n\n    this.props.onOpenChange(open);\n  };\n\n  RangePicker.prototype.disabledTime = function disabledTime(_ref) {\n    var startValue = _ref.startValue,\n        endValue = _ref.endValue;\n    var _props = this.props,\n        disabledHours = _props.disabledHours,\n        disabledMinutes = _props.disabledMinutes,\n        disabledSeconds = _props.disabledSeconds;\n    var disabledTime = {};\n\n    if (startValue && endValue) {\n      var isSameDay = startValue.format('L') === endValue.format('L');\n\n      var newDisabledHours = function newDisabledHours() {\n        var result = (0, _utils.isFunction)(disabledHours) ? disabledHours() : [];\n\n        if (isSameDay) {\n          for (var i = 0; i < startValue.hour(); i++) {\n            result.push(i);\n          }\n        }\n\n        return result;\n      };\n\n      var newDisabledMinutes = function newDisabledMinutes() {\n        var result = (0, _utils.isFunction)(disabledMinutes) ? disabledMinutes() : [];\n\n        if (isSameDay && startValue.hour() === endValue.hour()) {\n          for (var i = 0; i < startValue.minute(); i++) {\n            result.push(i);\n          }\n        }\n\n        return result;\n      };\n\n      var newDisabledSeconds = function newDisabledSeconds() {\n        var result = (0, _utils.isFunction)(disabledSeconds) ? disabledSeconds() : [];\n\n        if (isSameDay && startValue.hour() === endValue.hour() && startValue.minute() === endValue.minute()) {\n          for (var i = 0; i <= startValue.second(); i++) {\n            result.push(i);\n          }\n        }\n\n        return result;\n      };\n\n      disabledTime = {\n        disabledHours: newDisabledHours,\n        disabledMinutes: newDisabledMinutes,\n        disabledSeconds: newDisabledSeconds\n      };\n    }\n\n    return disabledTime;\n  };\n\n  RangePicker.prototype.clearValue = function clearValue(e) {\n    e.stopPropagation();\n    this.setState({\n      startValue: null,\n      endValue: null\n    });\n    this.onValueChange(null, null, 'onStartChange');\n    this.onValueChange(null, null, 'onEndChange');\n    this.onValueChange(null, null, 'onChange');\n  };\n\n  RangePicker.prototype.render = function render() {\n    var _classNames, _classNames2, _classNames3, _classNames4, _classNames5, _classNames6;\n\n    var _props2 = this.props,\n        className = _props2.className,\n        size = _props2.size,\n        disabled = _props2.disabled,\n        locale = _props2.locale,\n        popupStyle = _props2.popupStyle,\n        popupAlign = _props2.popupAlign,\n        popupOffset = _props2.popupOffset,\n        hasClear = _props2.hasClear,\n        showTime = _props2.showTime,\n        ranges = _props2.ranges,\n        readOnly = _props2.readOnly,\n        id = _props2.id,\n        style = _props2.style,\n        others = _objectWithoutProperties(_props2, ['className', 'size', 'disabled', 'locale', 'popupStyle', 'popupAlign', 'popupOffset', 'hasClear', 'showTime', 'ranges', 'readOnly', 'id', 'style']);\n\n    var state = this.state;\n    var prefix = this.context.prefix || this.props.prefix;\n    var quickModule = showTime ? ['select'] : [];\n    var triggerCls = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefix + 'date-picker', true), _defineProperty(_classNames, prefix + 'range-picker', true), _defineProperty(_classNames, prefix + 'range-picker-' + size, size), _defineProperty(_classNames, prefix + 'range-picker-disabled', disabled), _defineProperty(_classNames, prefix + 'range-picker-show-time', showTime), _defineProperty(_classNames, className, className), _classNames));\n    var panelCls = (0, _classnames2['default'])((_classNames2 = {}, _defineProperty(_classNames2, prefix + 'range-picker-panel', true), _defineProperty(_classNames2, prefix + 'range-picker-panel-show-time', showTime), _classNames2));\n    var iconSize = {\n      large: 'medium',\n      medium: 'small',\n      small: 'xs'\n    }[size];\n    var startDateInputCls = (0, _classnames2['default'])((_classNames3 = {}, _defineProperty(_classNames3, 'focus', state.mode !== 'date' && !state.startValue && showTime), _defineProperty(_classNames3, 'error', state.inputingError === 'startDateInputStr'), _classNames3));\n    var startTimeInputCls = (0, _classnames2['default'])((_classNames4 = {}, _defineProperty(_classNames4, prefix + 'range-picker-panel-time-input', true), _defineProperty(_classNames4, 'focus', state.mode === 'date' && !state.startValue && showTime), _defineProperty(_classNames4, 'error', state.inputingError === 'startTimeInputStr'), _classNames4));\n    var endDateInputCls = (0, _classnames2['default'])((_classNames5 = {}, _defineProperty(_classNames5, 'focus', state.mode !== 'date' && !state.endValue && showTime), _defineProperty(_classNames5, 'error', state.inputingError === 'endDateInputStr'), _classNames5));\n    var endTimeInputCls = (0, _classnames2['default'])((_classNames6 = {}, _defineProperty(_classNames6, prefix + 'range-picker-panel-time-input', true), _defineProperty(_classNames6, 'focus', state.mode === 'date' && !state.endValue && showTime), _defineProperty(_classNames6, 'error', state.inputingError === 'endTimeInputStr'), _classNames6)); // 判断时分秒\n\n    if (showTime && !(0, _utils.isFunction)(this.timeFormat)) {\n      if (this.timeFormat.indexOf('ss') < 0) {\n        others.showSecond = false;\n      }\n\n      if (this.timeFormat.indexOf('HH') < 0) {\n        others.showHour = false;\n      }\n    } // 同一天禁用时间\n\n\n    var disabledTime = this.disabledTime(state);\n    var startValueParts = (0, _utils.parseDateParts)(state.startValue, this.dateFormat, this.timeFormat, this.dateTimeFormat);\n    var endValueParts = (0, _utils.parseDateParts)(state.endValue, this.dateFormat, this.timeFormat, this.dateTimeFormat);\n    var panelStartDateInputValue = state.inputing === 'startDateInputStr' ? state.startDateInputStr : state.startValue ? startValueParts.dateString : '';\n    var panelEndDateInputValue = state.inputing === 'endDateInputStr' ? state.endDateInputStr : state.endValue ? endValueParts.dateString : '';\n    var panelStartTimeInputVal = state.inputing === 'startTimeInputStr' ? state.startTimeInputStr : state.startValue ? startValueParts.timeString : '';\n    var panelEndTimeInputVal = state.inputing === 'endTimeInputStr' ? state.endTimeInputStr : state.endValue ? endValueParts.timeString : ''; // 组件\n\n    var datePanel = _react2['default'].createElement('div', {\n      className: panelCls,\n      style: popupStyle\n    }, _react2['default'].createElement('div', {\n      className: prefix + 'range-picker-input'\n    }, _react2['default'].createElement(_nextInput2['default'], {\n      className: startDateInputCls,\n      placeholder: (0, _utils.isFunction)(this.dateFormat) ? locale.selectDate : this.dateFormat,\n      disabled: disabled,\n      size: 'medium',\n      value: panelStartDateInputValue,\n      readOnly: readOnly,\n      onChange: this.onDateInputChange.bind(this, 'startDateInputStr'),\n      onBlur: this.onDateInputBlur.bind(this, 'startDateInputStr'),\n      onClick: this.onQuickChange.bind(this, 'select-date')\n    }), showTime ? _react2['default'].createElement(_nextInput2['default'], {\n      className: startTimeInputCls,\n      placeholder: (0, _utils.isFunction)(this.timeFormat) ? locale.selectTime : this.timeFormat,\n      disabled: disabled || !state.startValue || !state.endValue,\n      size: 'medium',\n      value: panelStartTimeInputVal,\n      readOnly: readOnly,\n      onChange: this.onTimeInputChange.bind(this, 'startTimeInputStr'),\n      onBlur: this.onTimeInputBlur.bind(this, 'startTimeInputStr'),\n      onClick: this.onQuickChange.bind(this, 'select-time')\n    }) : null, _react2['default'].createElement('span', {\n      className: prefix + 'range-picker-input-separator'\n    }, '-'), _react2['default'].createElement(_nextInput2['default'], {\n      className: endDateInputCls,\n      placeholder: (0, _utils.isFunction)(this.dateFormat) ? locale.selectDate : this.dateFormat,\n      disabled: disabled,\n      size: 'medium',\n      value: panelEndDateInputValue,\n      readOnly: readOnly,\n      onChange: this.onDateInputChange.bind(this, 'endDateInputStr'),\n      onBlur: this.onDateInputBlur.bind(this, 'endDateInputStr'),\n      onClick: this.onQuickChange.bind(this, 'select-date')\n    }), showTime ? _react2['default'].createElement(_nextInput2['default'], {\n      className: endTimeInputCls,\n      placeholder: (0, _utils.isFunction)(this.timeFormat) ? locale.selectTime : this.timeFormat,\n      disabled: disabled || !state.startValue || !state.endValue,\n      size: 'medium',\n      value: panelEndTimeInputVal,\n      readOnly: readOnly,\n      onChange: this.onTimeInputChange.bind(this, 'endTimeInputStr'),\n      onBlur: this.onTimeInputBlur.bind(this, 'endTimeInputStr'),\n      onClick: this.onQuickChange.bind(this, 'select-time')\n    }) : null), state.mode === 'date' ? _react2['default'].createElement('div', {\n      className: prefix + 'range-picker-panel-time'\n    }, _react2['default'].createElement(_nextTimePicker.Panel, _extends({}, others, {\n      locale: locale,\n      value: state.startValue,\n      onChange: this.onSelectStartTime\n    })), _react2['default'].createElement(_nextTimePicker.Panel, _extends({}, others, disabledTime, {\n      locale: locale,\n      value: state.endValue,\n      onChange: this.onSelectEndTime\n    }))) : _react2['default'].createElement(_nextCalendar.RangePickerPanel, _extends({}, others, {\n      mode: state.mode,\n      locale: locale,\n      base: state.base,\n      value: [state.startValue, state.endValue],\n      onChange: this.onSelectRange\n    })), _react2['default'].createElement(_quickTool2['default'], {\n      value: [state.startValue, state.endValue],\n      mode: state.mode,\n      locale: locale,\n      module: quickModule,\n      shortcuts: Object.keys(ranges),\n      onChange: this.onQuickChange\n    }));\n\n    var dateTrigger = _react2['default'].createElement('div', _extends({}, (0, _nextUtil.pickAttrs)(others), {\n      className: triggerCls,\n      style: style,\n      id: id\n    }), _react2['default'].createElement('div', {\n      className: prefix + 'range-picker-trigger'\n    }, _react2['default'].createElement(_nextInput2['default'], {\n      placeholder: locale.rangeStartPlaceholder,\n      disabled: disabled,\n      size: size,\n      value: showTime ? startValueParts.dateTimeString : startValueParts.dateString,\n      readOnly: readOnly\n    }), _react2['default'].createElement('span', {\n      className: prefix + 'range-picker-separator'\n    }, '-'), _react2['default'].createElement(_nextInput2['default'], {\n      placeholder: locale.rangeEndPlaceholder,\n      disabled: disabled,\n      size: size,\n      value: showTime ? endValueParts.dateTimeString : endValueParts.dateString,\n      readOnly: readOnly\n    })), (state.startValue || state.endValue) && !disabled && hasClear ? _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'delete-filling',\n      size: iconSize,\n      title: locale.clear,\n      onClick: this.clearValue.bind(this)\n    }) : _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'calendar',\n      size: iconSize\n    }));\n\n    return _react2['default'].createElement(_nextOverlay.Popup, _extends({}, others, {\n      autoFocus: false,\n      disabled: disabled,\n      visible: state.open,\n      trigger: dateTrigger,\n      triggerType: 'click',\n      align: popupAlign,\n      offset: popupOffset,\n      onVisibleChange: this.onOpenChange.bind(this)\n    }), datePanel);\n  };\n\n  return RangePicker;\n}(_react.Component), _class.propTypes = {\n  /**\n   * 品牌样式前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 默认的基准日期\n   */\n  defaultBase: _propTypes2['default'].string,\n\n  /**\n   * 默认日期值\n   */\n  defaultValue: _propTypes2['default'].array,\n\n  /**\n   * 日期值\n   */\n  value: _propTypes2['default'].array,\n\n  /**\n   * 日期禁用\n   * @param {Object} CalendarObject\n   * @return {Boolean} true 表示禁用，反之表示可用\n   */\n  disabledDate: _propTypes2['default'].func,\n\n  /**\n   * 禁用指定的小时，同 TimePicker\n   */\n  disabledHours: _propTypes2['default'].func,\n\n  /**\n   * 禁用指定的分钟，同 TimePicker\n   */\n  disabledMinutes: _propTypes2['default'].func,\n\n  /**\n   * 禁用指定的秒钟，同 TimePicker\n   */\n  disabledSeconds: _propTypes2['default'].func,\n\n  /**\n   * 时间发生改变的回调\n   * @param {Array} dateRange        选中的日期区间数组\n   * @param {Array} formatDateRnage  格式化后的选中的日期区间数组\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 开始日期变化时的回调\n   * @param {String} date 开始日期\n   */\n  onStartChange: _propTypes2['default'].func,\n\n  /**\n   * 结束日期变化时的回调\n   * @param {String} date 结束日期\n   */\n  onEndChange: _propTypes2['default'].func,\n\n  /**\n   * 默认是否展开\n   */\n  defaultOpen: _propTypes2['default'].bool,\n\n  /**\n   * 是否展开\n   */\n  open: _propTypes2['default'].bool,\n\n  /**\n   * 当面板展开状态改变时的回调\n   * @param {Boolean} 面板的 open 状态\n   */\n  onOpenChange: _propTypes2['default'].func,\n\n  /**\n   * 输入框大小\n   */\n  size: _propTypes2['default'].oneOf(['small', 'medium', 'large']),\n\n  /**\n   * 语言\n   */\n  language: _propTypes2['default'].oneOf(['en-us', 'ar', 'de', 'es', 'fr', 'hi', 'it', 'ja', 'ko', 'pt', 'ru', 'zh-cn', 'zh-hk', 'zh-tw']),\n\n  /**\n   * 国际化配置，[参考](http://gitlab.alibaba-inc.com/next/date-picker/blob/master/src/locale/index.js)\n   */\n  locale: _propTypes2['default'].object,\n\n  /**\n   * 弹层样式\n   */\n  popupStyle: _propTypes2['default'].object,\n\n  /**\n   * 弹层对其方式\n   */\n  popupAlign: _propTypes2['default'].string,\n\n  /**\n   * 弹层偏移\n   */\n  popupOffset: _propTypes2['default'].array,\n\n  /**\n   * 输出日期的格式\n   */\n  format: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].func]),\n\n  /**\n   * 日期值格式化（可替代 format）\n   */\n  formater: _propTypes2['default'].array,\n\n  /**\n   * 是否禁用\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * 是否有清空按钮\n   */\n  hasClear: _propTypes2['default'].bool,\n\n  /**\n   * 是否显示时间或传入 { defaultValue } 设置时间初值\n   */\n  showTime: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].object]),\n\n  /**\n   * 重新选择时是否重置时间\n   */\n  resetTime: _propTypes2['default'].bool,\n\n  /**\n   * 用户预设的快捷选择的日期范围\n   */\n  ranges: _propTypes2['default'].object,\n\n  /**\n   * 输入框是否只读\n   */\n  readOnly: _propTypes2['default'].bool,\n\n  /**\n   * 自定义组件样式\n   */\n  className: _propTypes2['default'].string,\n  id: _propTypes2['default'].any,\n  style: _propTypes2['default'].object\n}, _class.defaultProps = {\n  prefix: 'next-',\n  size: 'medium',\n  popupAlign: 'tl tl',\n  popupOffset: [0, 0],\n  formater: ['YYYY-MM-DD', 'HH:mm:ss'],\n  hasClear: true,\n  showTime: false,\n  resetTime: true,\n  ranges: {},\n  disabledDate: function disabledDate() {\n    return false;\n  },\n  onChange: function onChange() {},\n  onStartChange: function onStartChange() {},\n  onEndChange: function onEndChange() {},\n  onOpenChange: function onOpenChange() {}\n}, _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _initialiseProps = function _initialiseProps() {\n  var _this4 = this;\n\n  this.onValueChange = function (startValue, endValue) {\n    var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'onChange';\n    var showTime = _this4.props.showTime;\n    var startValueParts = (0, _utils.parseDateParts)(startValue, _this4.dateFormat, _this4.timeFormat, _this4.dateTimeFormat);\n    var endValueParts = (0, _utils.parseDateParts)(endValue, _this4.dateFormat, _this4.timeFormat, _this4.dateTimeFormat);\n    var formatStrings = showTime ? [startValueParts.dateTimeString, endValueParts.dateTimeString] : [startValueParts.dateString, endValueParts.dateString];\n\n    switch (handler) {\n      case 'onStartChange':\n        _this4.props[handler](startValueParts.dateValue, formatStrings[0]);\n\n        break;\n\n      case 'onEndChange':\n        _this4.props[handler](endValueParts.dateValue, formatStrings[1]);\n\n        break;\n\n      case 'onChange':\n        {\n          _this4.props[handler]([startValueParts.dateValue, endValueParts.dateValue], formatStrings);\n\n          break;\n        }\n\n      default:\n    }\n  };\n\n  this.onSelectRange = function (_ref2) {\n    var value = _ref2.value,\n        base = _ref2.base,\n        mode = _ref2.mode;\n    var _props3 = _this4.props,\n        showTime = _props3.showTime,\n        resetTime = _props3.resetTime;\n    var state = _this4.state;\n\n    if (mode === 'date') {\n      var defaultStartHour = 0;\n      var defaultStartMinute = 0;\n      var defaultStartSecond = 0;\n      var defaultEndHour = 0;\n      var defaultEndMinute = 0;\n      var defaultEndSecond = 0;\n\n      if (showTime) {\n        if (showTime.defaultValue) {\n          var defaultStartTimeValue = (0, _utils.toMoment)(showTime.defaultValue[0], _this4.timeFormat);\n          var defaultEndTimeValue = (0, _utils.toMoment)(showTime.defaultValue[1], _this4.timeFormat);\n\n          if (defaultStartTimeValue) {\n            defaultStartHour = defaultStartTimeValue.hour();\n            defaultStartMinute = defaultStartTimeValue.minute();\n            defaultStartSecond = defaultStartTimeValue.second();\n          }\n\n          if (defaultEndTimeValue) {\n            defaultEndHour = defaultEndTimeValue.hour();\n            defaultEndMinute = defaultEndTimeValue.minute();\n            defaultEndSecond = defaultEndTimeValue.second();\n          }\n        } // resetTime=false 表示不重置时间，每次沿用上一次选择的时间\n\n\n        if (!resetTime) {\n          if (state.startValue) {\n            defaultStartHour = state.startValue.hour();\n            defaultStartMinute = state.startValue.minute();\n            defaultStartSecond = state.startValue.second();\n          }\n\n          if (_this4.lastSelectedEndValue) {\n            defaultEndHour = _this4.lastSelectedEndValue.hour();\n            defaultEndMinute = _this4.lastSelectedEndValue.minute();\n            defaultEndSecond = _this4.lastSelectedEndValue.second();\n          }\n        }\n      }\n\n      if (value[0] && (!state.startValue || state.startValue.valueOf() !== value[0].valueOf())) {\n        value[0] = value[0].hour(defaultStartHour).minute(defaultStartMinute).second(defaultStartSecond);\n\n        _this4.onValueChange(value[0], null, 'onStartChange');\n      }\n\n      if (value[1]) {\n        value[1] = value[1].hour(defaultEndHour).minute(defaultEndMinute).second(defaultEndSecond);\n\n        _this4.onValueChange(value[0], value[1], 'onEndChange');\n      }\n\n      var newState = (0, _utils.filterObject)({\n        startValue: value[0],\n        endValue: value[1]\n      });\n      var newStartValue = newState.startValue || _this4.state.startValue;\n      var newEndValue = newState.endValue || _this4.state.endValue;\n      _this4.lastSelectedEndValue = newEndValue; // 记住上次选择的结束日期\n\n      _this4.setState(newState);\n\n      if (value[0] && value[1]) {\n        _this4.onValueChange(newStartValue, newEndValue, 'onChange');\n      } // 判断收起弹层\n\n\n      if (!_this4.props.showTime && value[0] && value[1]) {\n        _this4.onOpenChange(false);\n      }\n    } else {\n      _this4.setState({\n        base: base,\n        mode: mode\n      });\n    }\n  };\n\n  this.onSelectStartTime = function (value) {\n    if (!('value' in _this4.props)) {\n      _this4.setState({\n        startValue: value\n      });\n    }\n\n    if (value.valueOf() !== _this4.state.startValue.valueOf()) {\n      _this4.onValueChange(value, _this4.state.endValue, 'onStartChange');\n\n      _this4.onValueChange(value, _this4.state.endValue, 'onChange');\n    }\n  };\n\n  this.onSelectEndTime = function (value) {\n    if (!('value' in _this4.props)) {\n      _this4.setState({\n        endValue: value\n      });\n    }\n\n    if (value.valueOf() !== _this4.state.endValue.valueOf()) {\n      _this4.onValueChange(_this4.state.startValue, value, 'onEndChange');\n\n      _this4.onValueChange(_this4.state.startValue, value, 'onChange');\n    }\n  };\n\n  this.onQuickChange = function (type, value) {\n    var _props4 = _this4.props,\n        ranges = _props4.ranges,\n        disabledDate = _props4.disabledDate;\n\n    switch (type) {\n      case 'select-date':\n        _this4.setState({\n          mode: 'month'\n        });\n\n        break;\n\n      case 'select-time':\n        _this4.setState({\n          mode: 'date'\n        });\n\n        break;\n\n      case 'ok':\n        _this4.onOpenChange(false);\n\n        break;\n\n      case 'quick-select':\n        {\n          // 判断是否是快捷选择操作\n          var range = ranges[value];\n\n          if (range && value) {\n            var rangeValue = getRangeValue(range, _this4.dateFormat, disabledDate);\n\n            _this4.setState(rangeValue, function () {\n              _this4.onValueChange(_this4.state.startValue, _this4.state.endValue, 'onChange');\n\n              _this4.onOpenChange(false);\n            });\n          }\n\n          break;\n        }\n\n      default:\n        break;\n    }\n  };\n}, _temp);\nRangePicker.displayName = 'RangePicker';\nexports['default'] = (0, _nextLocaleProvider2['default'])(RangePicker);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}