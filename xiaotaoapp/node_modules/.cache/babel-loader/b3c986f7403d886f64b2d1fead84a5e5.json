{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextButton = require('../../../next-button/lib/index.js');\n\nvar _nextButton2 = _interopRequireDefault(_nextButton);\n\nvar _nextIcon = require('../../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextLocaleProvider = require('../../../next-locale-provider/lib/index.js');\n\nvar _nextLocaleProvider2 = _interopRequireDefault(_nextLocaleProvider);\n\nvar _nextUtil = require('../../../next-util/lib/index.js');\n\nvar _transferPanel = require('./transfer-panel.js');\n\nvar _transferPanel2 = _interopRequireDefault(_transferPanel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n/**\n * Transfer\n */\n\n\nvar Transfer = (_temp = _class = function (_Component) {\n  _inherits(Transfer, _Component);\n\n  function Transfer(props, context) {\n    _classCallCheck(this, Transfer);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    var value = props.value,\n        defaultValue = props.defaultValue,\n        defaultLeftChecked = props.defaultLeftChecked,\n        defaultRightChecked = props.defaultRightChecked,\n        dataSource = props.dataSource;\n\n    var _this$filterCheckedVa = _this.filterCheckedValue(_this.normalizeValue(defaultLeftChecked), _this.normalizeValue(defaultRightChecked), dataSource),\n        left = _this$filterCheckedVa.left,\n        right = _this$filterCheckedVa.right;\n\n    _this.state = {\n      value: _this.normalizeValue('value' in props ? value : defaultValue),\n      leftCheckedValue: left,\n      rightCheckedValue: right\n    };\n    _this.leftValue = _this.getLeftValue(dataSource, _this.state.value);\n    return _this;\n  }\n\n  Transfer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var st = {};\n\n    if ('value' in nextProps) {\n      var value = this.normalizeValue(nextProps.value);\n      st.value = value;\n      this.leftValue = this.getLeftValue(nextProps.dataSource, value);\n    } else {\n      this.leftValue = this.getLeftValue(nextProps.dataSource, this.state.value);\n    }\n\n    var _filterCheckedValue = this.filterCheckedValue(this.state.leftCheckedValue, this.state.rightCheckedValue, nextProps.dataSource),\n        left = _filterCheckedValue.left,\n        right = _filterCheckedValue.right;\n\n    st.leftCheckedValue = left;\n    st.rightCheckedValue = right;\n    this.setState(st);\n  };\n\n  Transfer.prototype.normalizeValue = function normalizeValue(value) {\n    if (value) {\n      if (Array.isArray(value)) {\n        return value;\n      }\n\n      return [value];\n    }\n\n    return [];\n  };\n\n  Transfer.prototype.filterCheckedValue = function filterCheckedValue(left, right, dataSource) {\n    var result = {\n      left: [],\n      right: []\n    };\n\n    if (left.length || right.length) {\n      var value = dataSource.map(function (item) {\n        return item.value;\n      });\n      value.forEach(function (itemValue) {\n        if (left.indexOf(itemValue) > -1) {\n          result.left.push(itemValue);\n        } else if (right.indexOf(itemValue) > -1) {\n          result.right.push(itemValue);\n        }\n      });\n    }\n\n    return result;\n  };\n\n  Transfer.prototype.getPrefix = function getPrefix() {\n    return this.context.prefix || this.props.prefix;\n  };\n\n  Transfer.prototype.getLeftValue = function getLeftValue(dataSource, value) {\n    return dataSource.map(function (item) {\n      return item.value;\n    }).filter(function (itemValue) {\n      return value.indexOf(itemValue) === -1;\n    });\n  };\n\n  Transfer.prototype.groupDatasource = function groupDatasource(value, itemValues, dataSource) {\n    return value.reduce(function (ret, itemValue) {\n      var index = itemValues.indexOf(itemValue);\n\n      if (index > -1) {\n        ret.push(dataSource[index]);\n      }\n\n      return ret;\n    }, []);\n  };\n\n  Transfer.prototype.handlePanelChange = function handlePanelChange(position, value) {\n    var valuePropName = position === 'left' ? 'leftCheckedValue' : 'rightCheckedValue';\n    this.setState(_defineProperty({}, valuePropName, value));\n  };\n\n  Transfer.prototype.handleMoveItem = function handleMoveItem(direction) {\n    var _this2 = this;\n\n    var rightValue = void 0;\n    var leftValue = void 0;\n    var movedValue = void 0;\n    var valuePropName = void 0;\n    var dataSource = this.props.dataSource;\n    var _state = this.state,\n        value = _state.value,\n        leftCheckedValue = _state.leftCheckedValue,\n        rightCheckedValue = _state.rightCheckedValue;\n\n    if (direction === 'right') {\n      rightValue = leftCheckedValue.concat(value);\n      leftValue = this.leftValue.filter(function (itemValue) {\n        return leftCheckedValue.indexOf(itemValue) === -1;\n      });\n      movedValue = leftCheckedValue;\n      valuePropName = 'leftCheckedValue';\n    } else {\n      rightValue = value.filter(function (itemValue) {\n        return rightCheckedValue.indexOf(itemValue) === -1;\n      });\n      leftValue = rightCheckedValue.concat(this.leftValue);\n      movedValue = rightCheckedValue;\n      valuePropName = 'rightCheckedValue';\n    }\n\n    var st = _defineProperty({}, valuePropName, []);\n\n    if (!('value' in this.props)) {\n      st.value = rightValue;\n      this.leftValue = leftValue;\n    }\n\n    this.setState(st, function () {\n      if ('onChange' in _this2.props) {\n        var itemValues = dataSource.map(function (item) {\n          return item.value;\n        });\n\n        var rightData = _this2.groupDatasource(rightValue, itemValues, dataSource);\n\n        var leftData = _this2.groupDatasource(leftValue, itemValues, dataSource);\n\n        var movedData = _this2.groupDatasource(movedValue, itemValues, dataSource);\n\n        _this2.props.onChange(rightValue, rightData, {\n          leftValue: leftValue,\n          leftData: leftData,\n          movedValue: movedValue,\n          movedData: movedData,\n          direction: direction\n        });\n      }\n    });\n  };\n\n  Transfer.prototype.render = function render() {\n    var prefix = this.getPrefix();\n    var _props = this.props,\n        className = _props.className,\n        dataSource = _props.dataSource,\n        locale = _props.locale,\n        showSearch = _props.showSearch,\n        searchPlaceholder = _props.searchPlaceholder,\n        titles = _props.titles,\n        operations = _props.operations,\n        listStyle = _props.listStyle;\n    var _state2 = this.state,\n        value = _state2.value,\n        leftCheckedValue = _state2.leftCheckedValue,\n        rightCheckedValue = _state2.rightCheckedValue;\n    var itemValues = dataSource.map(function (item) {\n      return item.value;\n    });\n    var leftDatasource = this.groupDatasource(this.leftValue, itemValues, dataSource);\n    var rightDatasource = this.groupDatasource(value, itemValues, dataSource);\n    var panelProps = {\n      prefix: prefix,\n      locale: locale,\n      showSearch: showSearch,\n      searchPlaceholder: searchPlaceholder,\n      listStyle: listStyle\n    };\n    var others = (0, _nextUtil.pickOthers)(Transfer, this.props);\n    return _react2['default'].createElement('div', _extends({\n      className: (0, _classnames2['default'])(prefix + 'transfer', className)\n    }, others), _react2['default'].createElement(_transferPanel2['default'], _extends({}, panelProps, {\n      dataSource: leftDatasource,\n      value: leftCheckedValue,\n      title: titles[0],\n      onChange: this.handlePanelChange.bind(this, 'left')\n    })), _react2['default'].createElement('div', {\n      className: prefix + 'transfer-operations'\n    }, _react2['default'].createElement(_nextButton2['default'], {\n      className: prefix + 'transfer-operation',\n      type: leftCheckedValue.length ? 'primary' : 'normal',\n      disabled: !leftCheckedValue.length,\n      onClick: this.handleMoveItem.bind(this, 'right')\n    }, operations[0]), _react2['default'].createElement(_nextButton2['default'], {\n      className: prefix + 'transfer-operation',\n      type: rightCheckedValue.length ? 'primary' : 'normal',\n      disabled: !rightCheckedValue.length,\n      onClick: this.handleMoveItem.bind(this, 'left')\n    }, operations[1])), _react2['default'].createElement(_transferPanel2['default'], _extends({}, panelProps, {\n      dataSource: rightDatasource,\n      value: rightCheckedValue,\n      title: titles[1],\n      onChange: this.handlePanelChange.bind(this, 'right')\n    })));\n  };\n\n  return Transfer;\n}(_react.Component), _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _class.propTypes = {\n  /**\n   * 样式类名的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 自定义类名\n   */\n  className: _propTypes2['default'].string,\n\n  /**\n   * 自定义内联样式\n   */\n  style: _propTypes2['default'].object,\n\n  /**\n   * 数据源\n   */\n  dataSource: _propTypes2['default'].arrayOf(_propTypes2['default'].object),\n\n  /**\n   * （用于受控）当前值\n   */\n  value: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * （用于非受控）初始值\n   */\n  defaultValue: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * 值发生改变的时候触发的回调函数\n   * @param {Array} value 右面板值\n   * @param {Array} data 右面板数据\n   * @param {Object} extra 额外参数\n   * @param {Array} extra.leftValue 左面板值\n   * @param {Array} extra.leftData 左面板数据\n   * @param {Array} extra.movedValue 发生移动的值\n   * @param {Object} extra.movedData 发生移动的数据\n   * @param {String} extra.direction 移动的方向，值为'left'或'right'\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 是否显示搜索框\n   */\n  showSearch: _propTypes2['default'].bool,\n\n  /**\n   * 搜索框占位符\n   */\n  searchPlaceholder: _propTypes2['default'].string,\n\n  /**\n   * 左右面板标题\n   */\n  titles: _propTypes2['default'].arrayOf(_propTypes2['default'].node),\n\n  /**\n   * 向右向左移动按钮显示内容\n   */\n  operations: _propTypes2['default'].arrayOf(_propTypes2['default'].node),\n\n  /**\n   * 左面板默认选中值\n   */\n  defaultLeftChecked: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * 右面板默认选中值\n   */\n  defaultRightChecked: _propTypes2['default'].arrayOf(_propTypes2['default'].string),\n\n  /**\n   * 左右面板列表自定义样式\n   */\n  listStyle: _propTypes2['default'].object,\n\n  /**\n   * 自定义国际化文案对象\n   */\n  locale: _propTypes2['default'].object,\n\n  /**\n   * 自定义国际化语言\n   */\n  language: _propTypes2['default'].oneOf(['zh-cn', 'en-us', 'zh-tw'])\n}, _class.defaultProps = {\n  prefix: 'next-',\n  dataSource: [],\n  defaultValue: [],\n  showSearch: false,\n  searchPlaceholder: 'Search',\n  titles: [],\n  // eslint-disable-next-line\n  operations: [_react2['default'].createElement(_nextIcon2['default'], {\n    type: 'arrow-right'\n  }), _react2['default'].createElement(_nextIcon2['default'], {\n    type: 'arrow-left'\n  })],\n  defaultLeftChecked: [],\n  defaultRightChecked: []\n}, _temp);\nTransfer.displayName = 'Transfer';\nexports['default'] = (0, _nextLocaleProvider2['default'])(Transfer);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}