{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _common = require('./common.js');\n\nvar _common2 = _interopRequireDefault(_common);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Filling = function (_Common) {\n  _inherits(Filling, _Common);\n\n  function Filling(props, context) {\n    _classCallCheck(this, Filling);\n\n    var _this = _possibleConstructorReturn(this, _Common.call(this, props, context));\n\n    _this.menuShowClassName = context.prefix + 'navigation-item-children-menu-show';\n    return _this;\n  }\n\n  Filling.prototype.render = function render() {\n    var focused = this.props.focused;\n    var className = void 0;\n\n    if (focused) {\n      className = this.menuShowClassName;\n    }\n\n    return _Common.prototype.render.call(this, className);\n  };\n\n  return Filling;\n}(_common2['default']);\n\nexports['default'] = Filling;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}