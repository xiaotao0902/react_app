{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _nextIcon = require('../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextButton = require('../../next-button/lib/index.js');\n\nvar _nextButton2 = _interopRequireDefault(_nextButton);\n\nvar _nextInput = require('../../next-input/lib/index.js');\n\nvar _nextInput2 = _interopRequireDefault(_nextInput);\n\nvar _nextSelect = require('../../next-select/lib/index.js');\n\nvar _nextSelect2 = _interopRequireDefault(_nextSelect);\n\nvar _nextMixinKeyBinder = require('../../next-mixin-key-binder/lib/index.js');\n\nvar _nextMixinKeyBinder2 = _interopRequireDefault(_nextMixinKeyBinder);\n\nvar _nextLocaleProvider = require('../../next-locale-provider/lib/index.js');\n\nvar _nextLocaleProvider2 = _interopRequireDefault(_nextLocaleProvider);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar noop = function noop() {};\n/**\n * Pagination\n */\n\n\nvar Pagination = (_temp = _class = function (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination(props, context) {\n    _classCallCheck(this, Pagination);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    var current = props.current,\n        defaultCurrent = props.defaultCurrent,\n        total = props.total,\n        pageSize = props.pageSize;\n    _this.state = {\n      current: _this.correctCurrent(current || defaultCurrent, total, pageSize),\n      currentPageSize: pageSize\n    };\n    _this.onJump = _this.onJump.bind(_this);\n    _this.keyBinders = {\n      enter: _this.onJump\n    };\n    return _this;\n  }\n\n  Pagination.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var current = nextProps.current,\n        total = nextProps.total,\n        pageSize = nextProps.pageSize;\n    var st = {};\n    var newCurrent = this.correctCurrent(current || this.state.current, total, pageSize);\n\n    if (this.state.current !== newCurrent) {\n      st.current = newCurrent;\n    }\n\n    if (this.state.currentPageSize !== pageSize) {\n      st.currentPageSize = pageSize;\n    }\n\n    if (Object.keys(st).length) {\n      this.setState(st);\n    }\n  };\n\n  Pagination.prototype.getPrefix = function getPrefix() {\n    return this.context.prefix || this.props.prefix;\n  };\n\n  Pagination.prototype.correctCurrent = function correctCurrent(currentPage, total, currentPageSize) {\n    var totalPage = this.getTotalPage(total, currentPageSize);\n    return currentPage > totalPage ? totalPage : currentPage;\n  };\n\n  Pagination.prototype.getTotalPage = function getTotalPage(total, currentPageSize) {\n    var totalPage = Math.ceil(total / currentPageSize);\n    return totalPage <= 0 ? 1 : totalPage;\n  };\n\n  Pagination.prototype.onJump = function onJump(e) {\n    var total = this.props.total;\n    var _state = this.state,\n        current = _state.current,\n        currentPageSize = _state.currentPageSize;\n    var totalPage = this.getTotalPage(total, currentPageSize);\n    var value = parseInt(this.inputValue, 10);\n\n    if (typeof value === 'number' && value >= 1 && value <= totalPage && value !== current) {\n      this.onPageItemClick(value, e);\n    }\n  };\n\n  Pagination.prototype.onPageItemClick = function onPageItemClick(page, e) {\n    var _this2 = this;\n\n    if (!('current' in this.props)) {\n      this.setState({\n        current: page\n      }, function () {\n        _this2.props.onChange(page, e);\n      });\n    } else {\n      this.props.onChange(page, e);\n    }\n  };\n\n  Pagination.prototype.onInputChange = function onInputChange(value) {\n    this.inputValue = value;\n  };\n\n  Pagination.prototype.onSelectSize = function onSelectSize(pageSize) {\n    var newState = {\n      currentPageSize: pageSize\n    };\n    var totalPage = this.getTotalPage(this.props.total, pageSize);\n\n    if (this.state.current > totalPage) {\n      newState.current = totalPage;\n    }\n\n    this.setState(newState);\n    this.props.onPageSizeChange(pageSize);\n  };\n\n  Pagination.prototype.renderPageItem = function renderPageItem(index) {\n    var _cx;\n\n    var prefix = this.getPrefix();\n    var _props = this.props,\n        size = _props.size,\n        link = _props.link,\n        pageNumberRender = _props.pageNumberRender;\n    var current = this.state.current;\n    var isCurrent = parseInt(index, 10) === current;\n    var props = {\n      size: size,\n      className: (0, _classnames2['default'])((_cx = {}, _defineProperty(_cx, prefix + 'pagination-item', true), _defineProperty(_cx, 'current', isCurrent), _cx)),\n      onClick: isCurrent ? noop : this.onPageItemClick.bind(this, index)\n    };\n\n    if (link) {\n      props.component = 'a';\n      props.href = link.replace('{page}', index);\n    }\n\n    return _react2['default'].createElement(_nextButton2['default'], _extends({}, props, {\n      key: index\n    }), pageNumberRender(index));\n  };\n\n  Pagination.prototype.renderPageFirst = function renderPageFirst(current) {\n    var _cx2;\n\n    var prefix = this.getPrefix();\n    var _props2 = this.props,\n        size = _props2.size,\n        shape = _props2.shape,\n        locale = _props2.locale;\n    var isFirst = current <= 1;\n    var props = {\n      disabled: isFirst,\n      size: size,\n      className: (0, _classnames2['default'])((_cx2 = {}, _defineProperty(_cx2, prefix + 'pagination-item', true), _defineProperty(_cx2, 'prev', true), _cx2)),\n      onClick: this.onPageItemClick.bind(this, current - 1)\n    };\n    return _react2['default'].createElement(_nextButton2['default'], props, _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'arrow-left'\n    }), shape === 'arrow-only' || shape === 'arrow-prev-only' || shape === 'no-border' ? '' : locale.prev);\n  };\n\n  Pagination.prototype.renderPageLast = function renderPageLast(current, totalPage) {\n    var _cx3;\n\n    var prefix = this.getPrefix();\n    var _props3 = this.props,\n        size = _props3.size,\n        shape = _props3.shape,\n        locale = _props3.locale;\n    var isLast = current >= totalPage;\n    var props = {\n      disabled: isLast,\n      size: size,\n      className: (0, _classnames2['default'])((_cx3 = {}, _defineProperty(_cx3, prefix + 'pagination-item', true), _defineProperty(_cx3, 'next', true), _cx3)),\n      onClick: this.onPageItemClick.bind(this, current + 1)\n    };\n    return _react2['default'].createElement(_nextButton2['default'], props, shape === 'arrow-only' || shape === 'no-border' ? '' : locale.next, _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'arrow-right'\n    }));\n  };\n\n  Pagination.prototype.renderPageEllipsis = function renderPageEllipsis(idx) {\n    var prefix = this.getPrefix();\n    return _react2['default'].createElement('span', {\n      className: prefix + 'pagination-ellipsis',\n      key: 'ellipsis-' + idx\n    }, '...');\n  };\n\n  Pagination.prototype.renderPageJump = function renderPageJump() {\n    var prefix = this.getPrefix();\n    var _props4 = this.props,\n        size = _props4.size,\n        locale = _props4.locale;\n    var boundInput = this.getKeyBinderElement(_react2['default'].createElement(_nextInput2['default'], {\n      type: 'text',\n      size: size,\n      onChange: this.onInputChange.bind(this)\n    }));\n    return _react2['default'].createElement('div', {\n      className: prefix + 'pagination-jump'\n    }, _react2['default'].createElement('span', null, locale.goTo), boundInput, _react2['default'].createElement('span', null, locale.page), _react2['default'].createElement(_nextButton2['default'], {\n      size: size,\n      className: prefix + 'pagination-go',\n      onClick: this.onJump\n    }, locale.go));\n  };\n\n  Pagination.prototype.renderPageDisplay = function renderPageDisplay(current, totalPage) {\n    var prefix = this.getPrefix();\n    var pageNumberRender = this.props.pageNumberRender;\n    return _react2['default'].createElement('span', {\n      className: prefix + 'pagination-display'\n    }, _react2['default'].createElement('em', null, pageNumberRender(current)), '/', pageNumberRender(totalPage));\n  };\n\n  Pagination.prototype.renderPageList = function renderPageList(current, totalPage) {\n    var prefix = this.getPrefix();\n    var pageShowCount = this.props.pageShowCount;\n    var pages = [];\n\n    if (totalPage <= pageShowCount) {\n      for (var i = 1; i <= totalPage; i++) {\n        pages.push(this.renderPageItem(i));\n      }\n    } else {\n      // 除去第一页，最后一页以及当前页，剩下的页数\n      var othersCount = pageShowCount - 3;\n      var halfCount = parseInt(othersCount / 2, 10);\n      var start = void 0,\n          end = void 0;\n      pages.push(this.renderPageItem(1));\n      start = current - halfCount;\n      end = current + halfCount;\n\n      if (start <= 1) {\n        start = 2;\n        end = start + othersCount;\n      }\n\n      if (start > 2) {\n        pages.push(this.renderPageEllipsis(1));\n      }\n\n      if (end >= totalPage - 1) {\n        end = totalPage - 1;\n        start = totalPage - 1 - othersCount;\n      }\n\n      for (var j = start; j <= end; j++) {\n        pages.push(this.renderPageItem(j));\n      }\n\n      if (end < totalPage - 1) {\n        pages.push(this.renderPageEllipsis(2));\n      }\n\n      pages.push(this.renderPageItem(totalPage));\n    }\n\n    return _react2['default'].createElement('div', {\n      className: prefix + 'pagination-list'\n    }, pages);\n  };\n\n  Pagination.prototype.renderPageSizeSelector = function renderPageSizeSelector() {\n    var prefix = this.getPrefix();\n    var _props5 = this.props,\n        pageSizeSelector = _props5.pageSizeSelector,\n        locale = _props5.locale;\n\n    var pageSizeSpan = _react2['default'].createElement('span', {\n      className: prefix + 'pagination-size-selector-title'\n    }, locale.pageSize);\n\n    switch (pageSizeSelector) {\n      case 'filter':\n        return _react2['default'].createElement('div', {\n          className: prefix + 'pagination-size-selector'\n        }, pageSizeSpan, this.renderPageSizeFilter());\n\n      case 'dropdown':\n        return _react2['default'].createElement('div', {\n          className: prefix + 'pagination-size-selector'\n        }, pageSizeSpan, this.renderPageSizeDropdown());\n\n      default:\n        return null;\n    }\n  };\n\n  Pagination.prototype.renderPageSizeFilter = function renderPageSizeFilter() {\n    var _this3 = this;\n\n    var prefix = this.getPrefix();\n    var _props6 = this.props,\n        size = _props6.size,\n        pageSizeList = _props6.pageSizeList;\n    var currentPageSize = this.state.currentPageSize;\n    return _react2['default'].createElement('div', {\n      className: prefix + 'pagination-size-selector-filter'\n    }, pageSizeList.map(function (pageSize, index) {\n      var _cx4;\n\n      var classes = (0, _classnames2['default'])((_cx4 = {}, _defineProperty(_cx4, prefix + 'pagination-size-selector-btn', true), _defineProperty(_cx4, 'current', pageSize === currentPageSize), _cx4));\n      return _react2['default'].createElement(_nextButton2['default'], {\n        key: index,\n        shape: 'text',\n        size: size,\n        className: classes,\n        onClick: pageSize !== currentPageSize ? _this3.onSelectSize.bind(_this3, pageSize) : null\n      }, pageSize);\n    }));\n  };\n\n  Pagination.prototype.renderPageSizeDropdown = function renderPageSizeDropdown() {\n    var prefix = this.getPrefix();\n    var _props7 = this.props,\n        size = _props7.size,\n        pageSizeList = _props7.pageSizeList;\n    var currentPageSize = this.state.currentPageSize;\n    return _react2['default'].createElement(_nextSelect2['default'], {\n      className: prefix + 'pagination-size-selector-dropdown',\n      size: size,\n      value: currentPageSize,\n      onChange: this.onSelectSize.bind(this)\n    }, pageSizeList.map(function (pageSize, index) {\n      return _react2['default'].createElement(_nextSelect.Option, {\n        key: index,\n        value: pageSize\n      }, pageSize);\n    }));\n  };\n\n  Pagination.prototype.render = function render() {\n    var _cx5;\n    /* eslint-disable no-unused-vars */\n\n\n    var prefix = this.getPrefix();\n\n    var _props8 = this.props,\n        propsPrefix = _props8.prefix,\n        type = _props8.type,\n        size = _props8.size,\n        shape = _props8.shape,\n        className = _props8.className,\n        total = _props8.total,\n        pageSize = _props8.pageSize,\n        pageSizeSelector = _props8.pageSizeSelector,\n        pageSizeList = _props8.pageSizeList,\n        pageSizePosition = _props8.pageSizePosition,\n        onPageSizeChange = _props8.onPageSizeChange,\n        hideOnlyOnePage = _props8.hideOnlyOnePage,\n        showJump = _props8.showJump,\n        locale = _props8.locale,\n        current = _props8.current,\n        defaultCurrent = _props8.defaultCurrent,\n        pageShowCount = _props8.pageShowCount,\n        link = _props8.link,\n        language = _props8.language,\n        pageNumberRender = _props8.pageNumberRender,\n        onChange = _props8.onChange,\n        others = _objectWithoutProperties(_props8, ['prefix', 'type', 'size', 'shape', 'className', 'total', 'pageSize', 'pageSizeSelector', 'pageSizeList', 'pageSizePosition', 'onPageSizeChange', 'hideOnlyOnePage', 'showJump', 'locale', 'current', 'defaultCurrent', 'pageShowCount', 'link', 'language', 'pageNumberRender', 'onChange']);\n    /* eslint-enable */\n\n\n    var _state2 = this.state,\n        currentPage = _state2.current,\n        currentPageSize = _state2.currentPageSize;\n    var totalPage = this.getTotalPage(total, currentPageSize);\n    var pageFirst = this.renderPageFirst(currentPage);\n    var pageLast = this.renderPageLast(currentPage, totalPage);\n    var sizeSelector = this.renderPageSizeSelector();\n    var isStart = pageSizePosition === 'start';\n    var classes = (0, _classnames2['default'])((_cx5 = {}, _defineProperty(_cx5, prefix + 'pagination', true), _defineProperty(_cx5, prefix + 'pagination-' + type, type), _defineProperty(_cx5, prefix + 'pagination-' + shape, shape), _defineProperty(_cx5, prefix + 'pagination-' + size, size), _defineProperty(_cx5, size, size), _defineProperty(_cx5, 'start', !!pageSizeSelector && isStart), _defineProperty(_cx5, 'end', !!pageSizeSelector && !isStart), _defineProperty(_cx5, 'hide', totalPage <= 1 && hideOnlyOnePage), _defineProperty(_cx5, className, !!className), _cx5));\n\n    var buildComponent = function buildComponent() {\n      for (var _len = arguments.length, coms = Array(_len), _key = 0; _key < _len; _key++) {\n        coms[_key] = arguments[_key];\n      }\n\n      return _react2['default'].createElement('div', _extends({\n        className: classes\n      }, others), isStart && sizeSelector, _react2['default'].createElement('div', {\n        className: prefix + 'pagination-pages'\n      }, coms.map(function (com, index) {\n        return com && _react2['default'].cloneElement(com, {\n          key: index\n        });\n      })), !isStart && sizeSelector);\n    };\n\n    switch (type) {\n      case 'mini':\n        return buildComponent(pageFirst, pageLast);\n\n      case 'simple':\n        {\n          var pageDisplay = this.renderPageDisplay(currentPage, totalPage);\n          return buildComponent(pageFirst, pageDisplay, pageLast);\n        }\n\n      case 'normal':\n        {\n          var pageList = this.renderPageList(currentPage, totalPage);\n\n          var _pageDisplay = showJump && totalPage > 5 ? this.renderPageDisplay(currentPage, totalPage) : null;\n\n          var pageJump = showJump && totalPage > 5 ? this.renderPageJump(currentPage, totalPage) : null;\n          return buildComponent(pageFirst, pageList, pageLast, _pageDisplay, pageJump);\n        }\n\n      default:\n        return null;\n    }\n  };\n\n  return Pagination;\n}(_react.Component), _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _class.propTypes = {\n  /**\n   * 样式类名的品牌前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 自定义类名\n   */\n  className: _propTypes2['default'].string,\n\n  /**\n   * 自定义内联样式\n   */\n  style: _propTypes2['default'].object,\n\n  /**\n   * 分页组件类型\n   */\n  type: _propTypes2['default'].oneOf(['normal', 'simple', 'mini']),\n\n  /**\n   * 前进后退按钮样式\n   */\n  shape: _propTypes2['default'].oneOf(['normal', 'arrow-only', 'arrow-prev-only', 'no-border']),\n\n  /**\n   * 分页组件大小\n   */\n  size: _propTypes2['default'].oneOf(['small', 'medium', 'large']),\n\n  /**\n   * （受控）当前页码\n   */\n  current: _propTypes2['default'].number,\n\n  /**\n   * （非受控）初始页码\n   */\n  defaultCurrent: _propTypes2['default'].number,\n\n  /**\n   * 页码发生改变时的回调函数\n   * @param {Number} current 改变后的页码数\n   * @param {Object} e 点击事件对象\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 总记录数\n   */\n  total: _propTypes2['default'].number,\n\n  /**\n   * 页码显示的数量，更多的使用...代替\n   */\n  pageShowCount: _propTypes2['default'].number,\n\n  /**\n   * 一页中的记录数\n   */\n  pageSize: _propTypes2['default'].number,\n\n  /**\n   * 每页显示记录数量选择器类型\n   */\n  pageSizeSelector: _propTypes2['default'].oneOf([false, 'filter', 'dropdown']),\n\n  /**\n   * 每页显示记录数量选择器可选值\n   */\n  pageSizeList: _propTypes2['default'].arrayOf(_propTypes2['default'].number),\n\n  /**\n   * 自定义页码渲染函数，函数作用于页码button以及当前页/总页数的数字渲染\n   * @param {Number} index 分页的页码，从1开始\n   * @return {ReactNode} 返回渲染结果\n   */\n  pageNumberRender: _propTypes2['default'].func,\n\n  /**\n   * 每页显示记录数量选择器在组件中的位置\n   */\n  pageSizePosition: _propTypes2['default'].oneOf(['start', 'end']),\n\n  /**\n   * 每页显示记录数量改变时的回调函数\n   * @param {Number} pageSize 改变后的每页显示记录数\n   */\n  onPageSizeChange: _propTypes2['default'].func,\n\n  /**\n   * 当分页数为1时，是否隐藏分页器\n   */\n  hideOnlyOnePage: _propTypes2['default'].bool,\n\n  /**\n   * type 设置为 normal 时，在页码数超过5页后，会显示跳转输入框与按钮，当设置 showJump 为 false 时，不再显示该跳转区域\n   */\n  showJump: _propTypes2['default'].bool,\n\n  /**\n   * 设置页码按钮的跳转链接，它的值为一个包含 {page} 的模版字符串，如：http://xxx.com/{page}\n   */\n  link: _propTypes2['default'].string,\n\n  /**\n   * 自定义国际化文案对象\n   */\n  locale: _propTypes2['default'].object,\n\n  /**\n   * 自定义国际化语言\n   */\n  language: _propTypes2['default'].oneOf(['zh-cn', 'en-us', 'zh-tw'])\n}, _class.defaultProps = {\n  prefix: 'next-',\n  type: 'normal',\n  shape: 'normal',\n  size: 'medium',\n  defaultCurrent: 1,\n  onChange: noop,\n  pageSize: 10,\n  pageSizeSelector: false,\n  pageSizeList: [5, 10, 20],\n  pageSizePosition: 'start',\n  onPageSizeChange: noop,\n  total: 100,\n  pageShowCount: 5,\n  hideOnlyOnePage: false,\n  showJump: true,\n  pageNumberRender: function pageNumberRender(index) {\n    return index;\n  }\n}, _temp);\nPagination.displayName = 'Pagination';\nObject.keys(_nextMixinKeyBinder2['default']).forEach(function (key) {\n  Pagination.prototype[key] = _nextMixinKeyBinder2['default'][key];\n});\nexports['default'] = (0, _nextLocaleProvider2['default'])(Pagination);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}