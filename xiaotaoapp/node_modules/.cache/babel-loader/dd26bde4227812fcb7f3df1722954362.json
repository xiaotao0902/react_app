{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _nextIcon = require('../../../next-icon/lib/index.js');\n\nvar _nextIcon2 = _interopRequireDefault(_nextIcon);\n\nvar _nextInput = require('../../../next-input/lib/index.js');\n\nvar _nextInput2 = _interopRequireDefault(_nextInput);\n\nvar _nextOverlay = require('../../../next-overlay/lib/index.js');\n\nvar _nextCalendar = require('../../../next-calendar/lib/index.js');\n\nvar _nextUtil = require('../../../next-util/lib/index.js');\n\nvar _nextMoment = require('../../../next-moment/lib/index.js');\n\nvar _nextMoment2 = _interopRequireDefault(_nextMoment);\n\nvar _nextLocaleProvider = require('../../../next-locale-provider/lib/index.js');\n\nvar _nextLocaleProvider2 = _interopRequireDefault(_nextLocaleProvider);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require('./utils.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n/** DatePicker.MonthPicker */\n\n\nvar MonthPicker = (_temp = _class = function (_Component) {\n  _inherits(MonthPicker, _Component);\n\n  function MonthPicker(props, context) {\n    _classCallCheck(this, MonthPicker);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    var normalizeValue = _this.normalizeValue(props.value || props.defaultValue, false);\n\n    _this.state = {\n      value: normalizeValue,\n      base: props.defaultBase || normalizeValue,\n      mode: 'year',\n      inputValue: _this.parseValue(normalizeValue),\n      inputValueCorrect: normalizeValue || normalizeValue === '',\n      open: props.open || props.defaultOpen\n    };\n    return _this;\n  }\n\n  MonthPicker.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('value' in nextProps) {\n      var normalizeValue = this.normalizeValue(nextProps.value, false);\n      this.setState({\n        value: normalizeValue,\n        inputValue: this.parseValue(normalizeValue),\n        inputValueCorrect: normalizeValue || normalizeValue === ''\n      });\n    }\n\n    if ('open' in nextProps) {\n      this.setState({\n        open: nextProps.open\n      });\n    }\n  };\n\n  MonthPicker.prototype.normalizeValue = function normalizeValue(value) {\n    var checkDisabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var _props = this.props,\n        format = _props.format,\n        disabledMonth = _props.disabledMonth;\n    var mode = this.state ? this.state.mode : 'year';\n    var resultValue = '';\n\n    if (!value) {\n      return resultValue;\n    }\n\n    if (typeof value === 'number') {\n      resultValue = (0, _nextMoment2['default'])(value);\n    } else {\n      resultValue = (0, _nextMoment2['default'])(value, [format]).isValid() ? (0, _nextMoment2['default'])(value, [format]) : '';\n    }\n\n    if (checkDisabled && resultValue && mode === 'year') {\n      var calendarDate = (0, _utils.getCalendarDate)(resultValue);\n      resultValue = (0, _utils.isValidCalendarDate)(calendarDate, disabledMonth) ? resultValue : '';\n    }\n\n    return resultValue;\n  };\n\n  MonthPicker.prototype.parseValue = function parseValue(value) {\n    if (!value) {\n      return '';\n    }\n\n    return (0, _nextMoment2['default'])(value).isValid() ? (0, _nextMoment2['default'])(value).format(this.props.format) : value;\n  };\n\n  MonthPicker.prototype.onChange = function onChange(nextState) {\n    var format = this.props.format;\n    var base = nextState.base,\n        mode = nextState.mode,\n        value = nextState.value;\n    var newBase = base;\n    var newMode = mode;\n\n    if (value) {\n      var formatValue = this.parseValue(value);\n      var nextValue = (0, _nextMoment2['default'])(formatValue, [format]);\n\n      switch (mode) {\n        case 'year':\n          newBase = nextValue;\n          break;\n\n        case 'month':\n          newMode = 'year';\n\n          if (!('value' in this.props)) {\n            this.setState({\n              inputValue: formatValue,\n              value: nextValue\n            });\n          }\n\n          this.onOpenChange(false);\n          this.props.onChange(new Date(nextValue.valueOf()), formatValue);\n          break;\n      }\n    }\n\n    this.setState({\n      base: newBase,\n      mode: newMode\n    });\n  };\n\n  MonthPicker.prototype.onOpenChange = function onOpenChange(open) {\n    if (!('open' in this.props)) {\n      this.setState({\n        open: open\n      });\n    }\n\n    this.props.onOpenChange(open);\n  };\n\n  MonthPicker.prototype.onInputChange = function onInputChange(nextInputValue, event) {\n    var _props2 = this.props,\n        format = _props2.format,\n        disabledMonth = _props2.disabledMonth;\n\n    var _getStrRegExp = (0, _utils.getStrRegExp)(format),\n        fuzzy = _getStrRegExp.fuzzy,\n        exact = _getStrRegExp.exact; // 模糊匹配输入值\n\n\n    if (fuzzy.test(nextInputValue)) {\n      this.setState({\n        inputValue: nextInputValue,\n        inputValueCorrect: true\n      });\n    } // 精确匹配以修改值\n\n\n    if (exact.test(nextInputValue)) {\n      var nextValue = (0, _nextMoment2['default'])(nextInputValue, [format]);\n      var isValid = nextValue.isValid() && (0, _utils.isValidCalendarDate)((0, _utils.getCalendarDate)(nextValue), disabledMonth);\n\n      if (isValid) {\n        this.onChange({\n          base: nextValue,\n          value: nextValue,\n          mode: 'month'\n        });\n      } else {\n        this.setState({\n          inputValueCorrect: false\n        });\n      }\n    } // 清空\n\n\n    if (nextInputValue === '') {\n      this.clearValue(event);\n    }\n  };\n\n  MonthPicker.prototype.clearValue = function clearValue(event) {\n    event.stopPropagation();\n    this.setState({\n      inputValue: '',\n      value: '',\n      base: (0, _nextMoment2['default'])()\n    });\n    this.props.onChange(null, '');\n  };\n\n  MonthPicker.prototype.render = function render() {\n    var _classNames;\n\n    var _props3 = this.props,\n        className = _props3.className,\n        size = _props3.size,\n        disabled = _props3.disabled,\n        locale = _props3.locale,\n        format = _props3.format,\n        popupStyle = _props3.popupStyle,\n        popupAlign = _props3.popupAlign,\n        popupOffset = _props3.popupOffset,\n        hasClear = _props3.hasClear,\n        readOnly = _props3.readOnly,\n        others = _objectWithoutProperties(_props3, ['className', 'size', 'disabled', 'locale', 'format', 'popupStyle', 'popupAlign', 'popupOffset', 'hasClear', 'readOnly']);\n\n    delete others.onChange;\n    var _state = this.state,\n        value = _state.value,\n        base = _state.base,\n        mode = _state.mode,\n        inputValue = _state.inputValue,\n        inputValueCorrect = _state.inputValueCorrect,\n        open = _state.open;\n    var prefix = this.context.prefix || this.props.prefix; // 获得格式日期\n\n    var formatValue = this.parseValue(value); // 样式\n\n    var triggerCls = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefix + 'month-picker', true), _defineProperty(_classNames, prefix + 'month-picker-' + size, size), _defineProperty(_classNames, prefix + 'month-picker-disabled', disabled), _defineProperty(_classNames, className, className), _classNames));\n    var iconSize = {\n      large: 'medium',\n      medium: 'small',\n      small: 'xs'\n    }[size];\n    var inputCls = (0, _classnames2['default'])(_defineProperty({}, 'error', !inputValueCorrect)); // 组件\n\n    var monthPanel = _react2['default'].createElement('div', {\n      className: prefix + 'month-picker-panel',\n      style: popupStyle\n    }, _react2['default'].createElement('div', {\n      className: prefix + 'month-picker-input'\n    }, _react2['default'].createElement(_nextInput2['default'], {\n      className: inputCls,\n      placeholder: format,\n      disabled: disabled,\n      size: 'medium',\n      value: inputValue,\n      readOnly: readOnly,\n      onChange: this.onInputChange.bind(this)\n    })), _react2['default'].createElement(_nextCalendar.DatePickerPanel, _extends({}, others, {\n      mode: mode,\n      locale: locale,\n      base: base,\n      value: value,\n      onChange: this.onChange.bind(this)\n    })));\n\n    var monthTrigger = _react2['default'].createElement('div', _extends({}, (0, _nextUtil.pickAttrs)(others), {\n      className: triggerCls\n    }), _react2['default'].createElement(_nextInput2['default'], {\n      placeholder: locale.monthPlaceholder,\n      disabled: disabled,\n      size: size,\n      readOnly: readOnly,\n      value: formatValue\n    }), formatValue && !disabled && hasClear ? _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'delete-filling',\n      size: iconSize,\n      title: locale.clear,\n      onClick: this.clearValue.bind(this)\n    }) : _react2['default'].createElement(_nextIcon2['default'], {\n      type: 'calendar',\n      size: iconSize\n    }));\n\n    return _react2['default'].createElement(_nextOverlay.Popup, _extends({}, others, {\n      autoFocus: false,\n      disabled: disabled,\n      visible: open,\n      trigger: monthTrigger,\n      triggerType: 'click',\n      align: popupAlign,\n      offset: popupOffset,\n      onVisibleChange: this.onOpenChange.bind(this)\n    }), monthPanel);\n  };\n\n  return MonthPicker;\n}(_react.Component), _class.propTypes = {\n  /**\n   * 品牌样式前缀\n   */\n  prefix: _propTypes2['default'].string,\n\n  /**\n   * 默认的基准日期\n   */\n  defaultBase: _propTypes2['default'].string,\n\n  /**\n   * 默认日期\n   */\n  defaultValue: _propTypes2['default'].any,\n\n  /**\n   * 日期值\n   */\n  value: _propTypes2['default'].any,\n\n  /**\n   * 日期发生改变时的回调\n   * @param {String} date       改变后的日期\n   * @param {String} formatDate 格式化的日期\n   */\n  onChange: _propTypes2['default'].func,\n\n  /**\n   * 禁用的月\n   */\n  disabledMonth: _propTypes2['default'].func,\n\n  /**\n   * 是否默认展开\n   */\n  defaultOpen: _propTypes2['default'].bool,\n\n  /**\n   * 是否展开\n   */\n  open: _propTypes2['default'].bool,\n\n  /**\n   * 当面板展开变化时的回调\n   * @param {Boolean} open 面板的展开状态\n   */\n  onOpenChange: _propTypes2['default'].func,\n\n  /**\n   * 输入框大小\n   */\n  size: _propTypes2['default'].oneOf(['small', 'medium', 'large']),\n\n  /**\n   * 语言\n   */\n  language: _propTypes2['default'].oneOf(['en-us', 'ar', 'de', 'es', 'fr', 'hi', 'it', 'ja', 'ko', 'pt', 'ru', 'zh-cn', 'zh-hk', 'zh-tw']),\n\n  /**\n   * 国际化配置, [参考](http://gitlab.alibaba-inc.com/next/date-picker/blob/master/src/locale/index.js)\n   */\n  locale: _propTypes2['default'].object,\n\n  /**\n   * 弹层样式\n   */\n  popupStyle: _propTypes2['default'].object,\n\n  /**\n   * 弹层对齐方式\n   */\n  popupAlign: _propTypes2['default'].string,\n\n  /**\n   * 弹层偏移\n   */\n  popupOffset: _propTypes2['default'].array,\n\n  /**\n   * 展开日期的格式\n   */\n  format: _propTypes2['default'].string,\n\n  /**\n   * 是否禁用\n   */\n  disabled: _propTypes2['default'].bool,\n\n  /**\n   * 是否有清空按钮\n   */\n  hasClear: _propTypes2['default'].bool,\n\n  /**\n   * 输入框是否只读\n   */\n  readOnly: _propTypes2['default'].bool,\n\n  /**\n   * 自定义组件样式\n   */\n  className: _propTypes2['default'].string\n}, _class.defaultProps = {\n  prefix: 'next-',\n  size: 'medium',\n  popupAlign: 'tl tl',\n  popupOffset: [0, 0],\n  format: 'YYYY-MM',\n  hasClear: true,\n  readOnly: false,\n  onChange: function onChange() {},\n  onOpenChange: function onOpenChange() {}\n}, _class.contextTypes = {\n  prefix: _propTypes2['default'].string\n}, _temp);\nMonthPicker.displayName = 'MonthPicker';\nexports['default'] = (0, _nextLocaleProvider2['default'])(MonthPicker);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}