{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _navigation = require('./navigation.js');\n\nvar _navigation2 = _interopRequireDefault(_navigation);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Normal = function (_Navigation) {\n  _inherits(Normal, _Navigation);\n\n  function Normal() {\n    _classCallCheck(this, Normal);\n\n    return _possibleConstructorReturn(this, _Navigation.apply(this, arguments));\n  }\n  /**\n   * 由item子组件click触发select处理函数\n   * @method onItemSelect\n   */\n\n\n  Normal.prototype.onItemSelect = function onItemSelect(itemid) {\n    if (itemid === this.state.selectedKey) {\n      return this;\n    }\n\n    _Navigation.prototype.onItemSelect.apply(this, arguments);\n\n    if (this.props.selectedStyle) {\n      this.setState({\n        selectedKey: itemid\n      });\n    }\n  };\n\n  return Normal;\n}(_navigation2['default']);\n\nexports['default'] = Normal;\nNormal.defaultProps.type = 'normal';\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}